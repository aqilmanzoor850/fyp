%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Japanese
%%Title: Artificial_Intelligence_2.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: êŒêÏÅ@ïê
%%CreationDate: 2/13/18
%%BoundingBox: 0 0 596 596
%%HiResBoundingBox: 0 0 595.2827 595.2832
%%CropBox: 0 0 595.2827 595.2832
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.0 x409 R agm 4.4378 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 128 8%%BeginData: 15894 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFF%FDFCFFFDDAFFA8AF847E595A59592FFD04597E7E8484FD6CFF8484592F0D%2F0D2F0D2F0D2F0D2F0D2F062F0D2F2F5A5A84A8FD64FF845A2F2F062F0D%2F0C2F0D2F0D2F0D2F0D2F0D2F0D2F0D2F062F062F2F5A84FD5EFFAF842F%2F0D2F2F352F2F2F352F2F2F352F2F2F352F2F2F352F2F2F352F2F2F350D%2F2F84A9FD59FFAF592F0D2F0D2F2F2F0D35355A2F5A2F5A2F5A2F5A2F5A%2F5A2F360D2F0D2F2F2F0D2F2F2F0C2F59A9FD55FFA9842F2F2F352F352F%352F5A84845A845A845A845A845A845A845A8484842F2F2F352F352F352F%352F2F2F5AA8FD52FF7E2F0D2F2F2F0D2F2F2F0D5A84350C2F0D2F0D2F0D%2F0D2F0D2F0D2F0D2F5A840D2F0D2F2F2F0D2F2F2F0D2F0D2F59FD50FF59%2F2F362F362F362F352F6084360D6084845A8584847E8584847E8584842F%368484355A35352F362F362F362F362F3535AFFD4CFFA82F2F2F352F350D%5A5A845A845A360D847E5A355A2F5A355A2F5A355A2F5A5A842F355A845A%855A2F2F352F2F2F352F2F2F350D84FD4AFF842F352F362F362F5A845A35%5A36352FA9845A5A363585FD045A595A5A5A35355AA92F362F2F2FA95A35%2F362F362F362F362F362F5AFD48FF5A0D352F352F350D5A84360D352F5A%595A84367EA92F5A845A59845A5A59605A84592F5A845A845A2F2F855A2F%2F352F352F352F352F350D5AA8FD45FF842F3635362F363560845A2F8484%8584AF5A3684852F858484845A2F5A35362F362FAF5A36355A35A95A3635%A95A3635362F3635362F5A35362F5AFD44FF840D352F362F350D60A95A0D%8484350D352F3584850D84845A5A84843684840D362F352FA95A2F7E842F%845A352F855A362F352F362F362F362F360D5AFD42FFA92F3635362F3635%36355A2F84843635845A8484852FA9843684FF2F845A845A5A843684A92F%AF5A60A9602FA95A3635855A8484852F3635362F5A35362F84FD41FF2F35%2F362F360D8484350D8484352FA9FD045A2F8484367EA92F36FD045A35FF%7E5AA85A0DA95A36845A0D8484362F5A35845A36355A2F362F362F360D84%FD3FFF5A36355A365A2F6085602F8584365AAF5A362F6036848436A8FF35%6035845A855A362FAF8436A88435A95A60A96035AF60845A60363635AF84%36355A365A355A35AFFD3DFF843635362F362F5A845A2F84843635AF5A36%5A84A8A95A840D603584A9365A5A5A6035842FAF843684602FFF5A5AA85A%0D84A8845A855A3635855A362F3635362F3635FD3DFF5A355A3636356084%5A2F858436355A363684A9365A358584362F85A95A2F855A848460FF852F%AF8436A8A95A60355AA9602F36353635AF5A3635856036355A3636353684%FD3BFFA92F362F36355A845A2F84843636AF35365A842F362F3684AF2FA9%A8362F3684AF35A97E36A8840DAF8484843684AF0D5A84845A8484842F85%5A362F845A362F3635362F36A9FD3AFF5A36365A363684603685845A36AF%605A84A935FD0436855A365A6036363585843636FF8436A98536FF843636%5A84A936365A605A855A3636855A363685605A365A365A3685FD39FF8436%3536355A3584355A843635A95A365A85353684AF84367EAF84845A858484%5A845A3635AF8436A88584845A84845A84855A8484365A60356036855A36%35845A363536353636FD39FF60355A365A365A845A36853684605A848535%5A858536AF5A85A88560845A8560845AAF843636AF846084A9848584FF60%36608584855AAF6084A96036855A365A85355A365A363684FD37FFAF3536%353635363584365A845A5A6084AF35368484353684603536355A35362F36%35362F85843635FF84360D360D362F3635360D3636A93660845A36843685%35605A36353635363560FD37FF603636603660366084605AAF5A6160605A%5A8485363636AF603636AFFFAF84AF84AF846036A984605A603660AFAF84%AF84A984AF84AF5A61A96036AF845A8460608536603660366036FD36FFA8%5A3636355A36363685FD04365A843536848435605A36846036365A85365A%366036A9843635AFA8FD0436A984845A8560845A853636846036855A3636%8536606036355A3636353684FD35FFAF3660365A36603685605A5AA93685%6060A885363684FF36A95AAFAFA984AF84AF846036AF84365A8536FFA9AF%84AF84A984AF848536365A8536AF6060366085605A853660366036603685%FD35FF6036365A3636358560363585845A5A6084A9353684AF3636A8605A%855A605A605A85843636A98436353684845A605A605A605A6084AF366084%60845A8460355A365A84603636365A363636FD35FF603661366036618460%368B843636858460366084AF363CA9AF36855A6036AF8436368BA96036AF%A9605A6036615A6036853660606084AF5A855A8B36AF5A61846136858460%366136603660A9FD34FF3636366036363685366084605A3684A9363660AF%363684A93660FF853660FF8536363685A83636A984A984A9AFAF1385FF60%36FF846084608460846084603685845A36855A363660365A3685FD33FF84%60366036603660846060855AAF6060366084AF3660A9AF3685AF853685AF%60368584603685A9603660366036613685A9615AFF846060AF3685608536%8B5A6036856060846136603660363C60FD33FF853660365A366036853660%60608460363660AF363684853660A8601460A8603660FFAF36363685A85A%366036363685A96036AF843636608460846084368460365A368536845A60%365A36603660FD33FF84613661366136618461608536AF5A6060AF5A6084%AF3685AF853685AF613685AF853685A9613685A9AFFF8536AFFF615AFF85%3C366160AF5A8B608B36AF60AF6061846084853661366136605AFD33FF60%36603660366060A936616060846036A93660A9AF3661AF603685A9603685%A9603660AFAF366036605A8560366085366084605A603685A9608461843C%846084605A8536A96060366036603660AFFD32FF60603661366036616060%5A855A853661846036856060A9853661A9613685FF853661A9853685A961%368584AFA9AF84AFA9AFA9FF603C60AF6085608B36853685606184616061%36613660366160FD32FFA960366036603660366036606060846036853660%366036AF363C8485366036603685A885363CA8AF3685A960366036603660%366060603636368560608460846060605A8536603660366036603660AFFD%32FF60613661606136858561608B608B5A6185615AFF8461A96136858485%FF613661FFAF3661A9AF3685AF6160AF85AF85AF85AF84AFAFAF36AF8561%848B60AF608B60618461858536616061366160FD32FFAF61366036613660%5A853660606184605A853660848536AF3660848536AFA9603661363C84AF%3685A86160AF5A6160605A615A6036856085843C84853661608584606085%36856060366136603661FD33FF5A6160613661606184616085368B606184%61368B5A61A96136AFAF6136AFFF853661A9AF3685AF6160FF6061846136%858485608560AF856184AF36613685856160AF606184613C613661606160%FD33FF603660366036605A853661606084605A853660848536AF843C6085%363C3685363C84AF3685A86060AF363C60FF603C84FF84858485603C84AF%3660366084605A855A6084853660366036603685FD33FF60616061606160%618461608560AF606185613C85A9853CAFA98B858B84AF858BA9AF3685AF%6184AF608B606160FF85616061606160858461608B6085856160AF606185%853661606160616061AFFD33FF8536613660366160853661846084853685%84613661A88536858485848584AF84853685AF6060AF5AAFA9FF603C5AAF%848584AF8485A8AF3685A88584605AAF603C8485366036613660366160FD%34FF84613661606136618561608B3C618485368584613C85A9AF85AF84AF%85AFA9613685AF6160AF60AF8561A98B3C856061606136613C6160616061%366160AF60618485366160613661606136AFFD34FF853660366136603685%3660846136608461368584613660608560615A616085366084855AAF5AAF%846036853661A9AF84AF848584858485848584856085603C608536603661%36603661363C84FD34FF8561606160613C6185613C6185853661856136AF%60613C61608B848B85AF85613CAF60AF8585A9616061FFFF3C6160616061%608560616085606160616061848B6061606160616061606136AFFD34FFAF%36603661366036858461366184613685603C6085366060AF8485848584AF%36618461848584853661366184AFA9AF84AF84AFA8AF3661A8AF84858485%848536613660366136603661363C84FD34FFAF6160613661606136AF8461%3685856160853C85606160AF606136613661608536AF60AF608B85613661%3C6160616061606160856061608560616061606160613661606136616061%36616061AFFD34FF5A603660366136603661846036853685603C606136AF%603C368584AF84AFFF858461848584853660366136603661366036613660%366136603661366036613660366136603661366036613685FD34FF8B3C61%606160616061608B84618561608B3C8560618561368BAF853C6160853CAF%60AF608B8561606160616061606160616061606160616061606160616061%6061606160616061606160613CFD34FF84613660366136603661368560AF%368560606061368B36858461368584618461846184856085366036613660%366136603661366036613660366136603661366036613660366136603661%363C5AFD34FF36616061366160613661848584616085368560618485AF85%3661AFAF36FF8485608B6085846160613661606136616061366160613661%6061366160613661606136616061366160613661606184FD33FF60366036%6036603660368536603685603C60613685366136608485363C6061846084%856085366036603660366036603660366036603660366036603660366036%6036603660366036603660363C84FD32FF84616061366160613661856136%6185AF368560618461366185853661368B6085608B608584616061366160%613661606136616061366160613661606136616061366160613661606136%6160613661FD32FFAF366036603660366036855A6036615A3C6061368536%61846036AF843C6061846084856085366036603660366036603660366036%603660366036603660366036603660366036603660366036603685FD32FF%6136613660366136618485A961366136AF60618461A9853685848536AF5A%856085608584603661366036613660366136603661366036613660366136%603661366036613660366136603661366036AFFD31FF8436366036603660%36853660846036605A60368536843685846036858436846060605A853660%366036603660366036603660366036603660366036603660366036603660%3660366036603660363636FD31FFAF366136613661366084853661846136%603685A9613685A961368B8460848536AF5A8B8460366136613661366136%613661366136613661366136613661366136613661366136613661366136%61366160FD31FF603660365A3660365A848536608460365A3660365A3660%368560608485368560368485365A3660365A3660365A3660365A3660365A%3660365A3660365A3660365A3660365A3660365A3660365A3660A8FD30FF%853C36603660366036608485366084613660366036603685846084853685%606160603660366036603660366036603660366036603660366036603660%36603660366036603660366036603660366036AFFD31FF36363660365A36%6036368485366084858485608584855A36848436855A3684853636366036%5A3660365A3660365A3660365A3660365A3660365A3660365A3660365A36%60365A3660365A36603636A8FD31FF853660366036603660366084853660%5A6036615A6036608485368B606084853660366036603660366036603660%366036603660366036603660366036603660366036603660366036603660%3660A8FD32FFA9363660365A3660365A366084855A855A848460365A8485%36855A368484365A365A3660365A3660365A3660365A3660365A3660365A%3660365A3660365A3660365A3660365A3660365A60AFFD35FF6036366036%6036603660366060605A8560853660A98536856036848536603660366036%603660366036603660366036603660366036603660366036603660366036%60366036603660AFFD37FFAF3636355A3636355A363635363636355A5A36%35605A855A368484355A3636355A3636355A3636355A3636355A3636355A%3636355A3636355A3636355A3636355A3636355A363635FD39FF85366036%60366036603660366036605AAF605A368584608485366036603660366036%603660366036603660366036603660366036603660366036603660366036%60366036603660AFFD38FFA936355A3636355A3636355A3636353636855A%36363684853636355A3636355A3636355A3636355A3636355A3636355A36%36355A3636355A3636355A3636355A3636355A36363585FD39FF8436365A%365A365A365A365A365A365A36855A368485365A365A365A365A365A365A%365A365A365A365A365A365A365A365A365A365A365A365A365A365A365A%365A365A365A36FD3AFF363635363536353635363536353635365A603585%353635363536353635363536353635363536353635363536353635363536%3536353635363536353635363536353635363536A8FD39FFAF355A365A36%5A365A365A365A365A36605A5A845A365A365A365A365A365A365A365A36%5A365A365A365A365A365A365A365A365A365A365A365A365A365A365A36%5A3660A9FD3BFF602F363536353635363536353635365A60358535363536%353635363536353635363536353635363536353635363536353635363536%353635363536353635363536353684FD3DFF5A355A365A355A365A355A36%5A35605A36845A365A355A365A355A365A355A365A355A365A355A365A35%5A365A355A365A355A365A355A365A355A365A355A365A355AAFFD3CFF84%362F3635362F3635362F3635365A602F842F3635362F3635362F3635362F%3635362F3635362F3635362F3635362F3635362F3635362F3635362F3635%362F3635362FA9FD3DFF5A36365A355A365A355A365A35605A36845A365A%355A365A355A365A355A365A355A365A355A365A355A365A355A365A355A%365A355A365A355A365A355A365A355AFD3FFF2F3635362F362F362F362F%3659602F842F362F362F362F362F362F362F362F362F362F362F362F362F%362F362F362F362F362F362F362F362F362F362F362F36A8FD3FFF852F5A%35362F5A35362F5A3584605A845A2F5A35362F5A35362F5A35362F5A3536%2F5A35362F5A35362F5A35362F5A35362F5A35362F5A35362F5A35362F36%A8FD40FFA9362F362F352F362F352F365A842F842F352F362F352F362F35%2F362F352F362F352F362F352F362F352F362F352F362F352F362F352F36%2F352F362F3559FD42FF843635362F5A35362F5A35362F5A845A2F5A3536%2F5A35362F5A35362F5A35362F5A35362F5A35362F5A35362F5A35362F5A%35362F5A35362F5A35362F85FD42FFAF2F362F352F362F352F362F352F84%2F352F362F352F362F352F362F352F362F352F362F352F362F352F362F35%2F362F352F362F352F362F352F362F2F59FD43FF5A2F362F362F362F362F%362F5A845A2F362F362F362F362F362F362F362F362F362F362F362F362F%362F362F362F362F362F362F362F362F362F362F5AFD43FF5A2F2F352F35%2F352F352F3535A92F352F352F352F352F352F352F352F352F352F352F35%2F352F352F352F352F352F352F352F352F352F352F352F352FFD43FFA92F%362F362F362F362F362F3635362F362F362F362F362F362F362F362F362F%362F362F362F362F362F362F362F362F362F362F362F362F362F362F36A8%FD42FFA82F0D352F2F2F352F2F2F352F2F2F352F2F2F352F2F2F352F2F2F%352F2F2F352F2F2F352F2F2F352F2F2F352F2F2F352F2F2F352F2F2F352F%2F2F350D84FD43FF2F352F362F352F362F352F362F352F362F352F362F35%2F362F352F362F352F362F352F362F352F362F352F362F352F362F352F36%2F352F362F352F2F7EFD42FFA8350D2F0D2F2F2F0D2F2F2F0D2F2F2F0D2F%2F2F0D2F2F2F0D2F2F2F0D2F2F2F0D2F2F2F0D2F2F2F0D2F2F2F0D2F2F2F%0D2F2F2F0D2F2F2F0D2F2F2F0684FD43FF2F2F2F362F352F362F352F362F%352F362F352F362F352F362F352F362F352F362F352F362F352F362F352F%362F352F362F352F362F352F362F350D5AFD43FFA9350D2F0D2F2F2F0D2F%2F2F0D2F2F2F0D2F2F2F0D2F2F2F0D2F2F2F0D2F2F2F0D2F2F2F0D2F2F2F%0D2F2F2F0D2F0D2F0D2F0D2F0D2F0D2F0D2F0D2FA8FD44FFFD2A2F0D2F2F%5A2F35FD092F84AFFD44FFA82F062F0D2F0C2F0D2F0C2F0D2F0C2F0D2F0C%2F0D2F0C2F0D2F0C2F0D2F0C2F0D2F0C2F0D2F0C2F0D2F065984FFFFFFAF%FFA8AFA8AFA8AFA8FD47FFA90DFD272F0D84FD55FF7E0D062F0D2F062F0D%2F062F0D2F062F0D2F062F0D2F062F0D2F062F0D2F062F0D2F062F0D2F06%2F067EFD56FF5A0D2F0D2F2F2F0D2F2F2F0D2F2F2F0D2F2F2F0D2F2F2F0D%2F2F2F0D2F2F2F0D2F2F2F0D2F2F2F062FFD57FF2F2F062F062F062F062F%062F062F062F062F062F062F062F062F062F062F062F062F062F062F060D%53FD56FFA82F2F2F0D2F2F2F0D2F2F2F0D2F2F2F0D2F2F2F0D2F2F2F0D2F%2F2F0D2F2F2F0D2F2F2F0D2F2F2F06A9FD56FF84062F062F062F062F062F%062F062F062F062F062F062F062F062F062F062F062F062F062F062F062F%A8FD56FF590D062F0D2F062F0D2F062F0D2F062F0D2F062F0D2F062F0D2F%062F0D2F062F0D2F062F0D2F062F2FFD57FF2F062F062F062F062F062F06%2F062F062F062F062F062F062F062F062F062F062F062F062F062F0653FD%57FF2E2F062F062F062F062F062F062F062F062F062F062F062F062F062F%062F062F062F062F062F062F59FD56FF7E070628062F0628062F0628062F%0628062F0628062F0628062F0628062F0628062F0628062F0628067EFD56%FF7E062F062F062F062F062F062F062F062F062F062F062F062F062F062F%062F062F062F062F062F06067EFD56FF2F06062806060628060606280606%062806060628060606280606062806060628060606280606062806A8FD55%FFAF2F062F062F062F062F062F062F062F062F062F062F062F062F062F06%2F062F062F062F062F062F062FA8FD55FFA8060606280606062806060628%060606280606062806060628060606280606062806060628FD0506FD56FF%590606280629062806290628062906280629062806290628062906280629%06280629062806290628062FFD56FF2F00FD270628FD56FF062806280629%062806290628062906280629062806290628062906280629062806290628%062906280659FD55FF840601FD27062FFD55FF7E01060628060606280606%062806060628060606280606062806060628060606280606062806060628%0159FD55FF2E060106000601060006010600060106000601060006010600%060106000601060006010600060106000653FD34FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=400 GradRes=200 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="Ôªø" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">„Éó„É™„É≥„Éà</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2018-02-13T22:04:42+09:00</xap:CreateDate>
         <xap:ModifyDate>2018-02-13T22:04:42+09:00</xap:ModifyDate>
         <xap:MetadataDate>2018-02-13T22:04:42+09:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>256</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEDIAMgAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABADIAAAAAEA&#xA;AQMgAAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXEgAkmgHU4qxPX&#xA;vzT8jaIWS51OOe4XY29r+/eo7HhVVP8ArEZkY9LklyDj5NXjjzLBNV/5yPtFJXSdGklH7Mt1KI/+&#xA;EjEn/Esyo9nHqXEn2kOgYzd/85B+eZiRBb2NsvbjFIzfSXkI/DLxoIebQe0Z+SAk/PL8yGaq3sKD&#xA;+VbeKn/DKTkvyOPuYfn8nerx/n3+YKNVmtJBSnFoNvn8LLg/IY/NI7QyeSb2X/ORvmJCPr2k2k47&#xA;iBpYTT/ZGbK5dnR6Etke0pdQGU6V/wA5D+V7ghdRsbqxY9XXjPGPmQUf/hMol2fMciC5EO0YHmCG&#xA;d6F508q66B+itTguZCK+hy4S0/4xPxf8MxZ4Zw5hy8eeE+RTrKm12KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KvOvOX50aBopktNLA1XUVqDwNLdG/ypB9qngv3jM3DopS3Owc&#xA;DPr4Q2G5eMeZ/wAwPNvmRmXUL1ltW6WUFYoAPAqDVv8AZk5s8WnhDkHVZdVOfM7McitZJZFiiQvI&#xA;5CoiipJOwAAy5otPZfL+g2BFvquoypfgVngtYVmWIn9hnLoCw/ap06ZWJyPIbNlAcyt/R3kz/q43&#xA;v/SKn/VXDc+4I9Pe79HeTP8Aq5Xv/SKn/VXG59wX097v0d5M/wCrje/9Iqf9Vcbn3BfT3uk8tWF3&#xA;ZzXOh3b3j2o5XFpLEIphH3kQBnDqO/cYOMg7rwgjZIvSy1hbaxlWDKaMDUEbEEYrbOPK/wCbvnLQ&#xA;ykUtx+k7JaA292S7ADskv2x7VqPbMTLo4T8i5eLXTh5h7V5N/M7y35nCwwyfU9SI3sJyAxP/ABW3&#xA;ST6N/bNZm0ssfmHbYNXDJ5HuZdmM5TsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVQ+o6&#xA;jZadZTXt7MsFrAvKWVugH8Sew75KMTI0ObGcxEWeTwLz/wDmnqnmFpLDTi9lo26lQaSzjxkI6Kf5&#xA;B9Nc3Gn0ghud5Oh1WuOTaO0WBR20ksixxoXkchURQSSTsAAMzHBT2bSdB0hUt9UWa71IitxBbSLG&#xA;kFeiMxV+T+NNhlYlKXLk2kRjz5rre9s7aKabQtOmguKCN9Qnk9X0FkPGqkIioW6cj9GAxJ+oqJD+&#xA;EJ7pvlpbS6fTrBrS81UR/WL7VbhRLa28ZFVROQYcn7sR0yqWSxZuu7q3Rx0aFE9/RD6bNrV9p91e&#xA;C40eAWsixFJ4bZC3LuDwpTw8d8MhEED1faxgZEE3H7HevrX/AC16D/wNn/zRjUe6X2puXfH7F0ba&#xA;/K6xQz6HLM5pHEi2fJmPRVqg3OPp/pfavqPWP2IWC2uNQuBcafGumea9Pb97aRqIRccTQtGmyrIO&#xA;jp0YfSMkSBz3iWI9XLaYb1OK5tP9J1nyrDFHK376ZPWiqW68SrlEJ7bYxo7CSysbyik2s6DFbxpq&#xA;GnubjSbg0hlP2426mKUDo4/HqMshO9jzapxrcckp9LLGFtoro6uhKupBVgaEEbggjAtvXfy8/OGa&#xA;JotK8zSc4tlg1NvtL4Cb+Yf5fXx8c1up0XWHydrpO0P4Z/P9b2VWV1DKQysKqw3BB7jNW7lvFXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWndERndgqKCWYmgAG5JJxUl8+fmR53uPMupG3tnZdGtW&#xA;pbx9BIw2MrD3/Z8B9ObzS6fwxZ+p5vW6s5JUPpDD7exmuJ0ggQyTSMFRB1JOZRNOGNzQT7THn0c3&#xA;WnpYN/iF5BFbXAozRhhQ8BvuQdmHj7ZVIcVG/S2xJjYr1Iq1tJ9OnGm6SPrXmO42urxSCLcdWSNj&#xA;ty/nftkSbFn6WYBB4Y7y+5El9aa2ntLrzXZta3A4XKmSWZuFfiCfuvDsp3yPpuxEsrlVGYr8eS9Y&#xA;NOl04Cklp5StJNgNrnUrkf5/JR79BvffM/Yy2I7sY+ciiLu9msNH/SF20FjdzOrad5fFtC8Zta0P&#xA;q1XnRxXckH79oxjxSobjqb6spT4Y2dj0jXRCLpugR3eqS/o4PBc6SL+1hdz/AKPJIFqqkdQGbY9a&#xA;bZLilQ3/AIqY8MLO38N+5KP8GXY07TNSa5hFlqEgiecMStuxag9YgfD45Z4wsitx9rV4B4RK9j9n&#xA;vTjWtEa7vTo+oyp+nYVX9H6l0ivoioKI7H9umyv3Pwk98rhOhxD6eo7m3JCzwn6uh720tbaxtTda&#xA;NBJLHBGIPMmi3RJcgdZONOgNfiX7J7dcbJNS/wA0ooAXHp9QKDW1OmI+o6Yh1Hy1eDjeWz7lNx+7&#xA;mp9h0J+B8nfFsdpBhXDuN4FBHy5pNxchrPV7aO0lYcFuS6TID1Vl48ar48qHJcZA3G7DgiTsRSWX&#xA;+lG2vbm3hkF1Hbk1niBKlQQOXtuafPLIysW1yFEhCejhY29R/Kj8wJLKaLQNVlLWUhCWM7n+6Y9I&#xA;yf5G7eHy6a/Waa/VHn1droNZR4Jcuj2fNS7x2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV55+b/&#xA;AJoay0xdEtXpc361uSOq29aU/wCehFPkDmfocPEeI8g6rtPU8MeAcz9zxhLd3dURSzsQFUbkk7AD&#xA;Nu6FkEVudFK21qvr+YJ/gJT4hbBtuCeMp7ntlJPFufpbx6Nh9f3Im3tLyC4ksNMP1vzFchje3nIH&#xA;0R1dEcn7X8z/AEDIkgiztFnEG+GO8ypaU1xPpj6NZWq2U9WOr6o7UpAp3DmlVXxAO9PfDMAHiJvu&#xA;CMZJjwgV3nyU4r7yjZm5hj0p75TE0UN1NKVLOf8Adnphfg36b1GJhM1vSjJijY4bTPU7LXrLVfKy&#xA;2dsWuVs4DZ27qGQzVJk+E7A7gsdiOuVwlExnZ2tuyRnGUKG9ClPzXLZW8N5aalCt75pupUmu7xKr&#xA;HbUApAlD8RC7Htv3phwgmiNoD7fNGokACJb5DzPd5I1tLnF9a2U4FtLqehR21k03wI83FSE5HYEl&#xA;ab9yMhxiiR0m2cB4gDtxQoe9T03TU0zTGn071Ly8gVo/NOg3K8axcj8Sr4J/OpJGx23GGcuKVHYf&#xA;wyRCHBG47kfXEr/0XY3NjDArtc+WblyLHUGp62mTsRWOfegjqRyqaH7Q3wcZB/pjmP53uXgBAHPG&#xA;eR/mnzXTprLXLWtjbpdeYtEq1xrEMgImt1AARxtzah4kNvtiOGrO0ZdFPHdAXOHXvCAjE11ay3nl&#xA;+MmKdkOsaClTuDXlGF+IxP0IXcdOmTOxqXwLUDxC4fGP46N3Ftc3M89w/lEQ261klBE0LBB14mqL&#xA;yp/Kv0YQQBXGsgSSeDb4oFGm0TleaaRd6Nfj05FkG9O8UtN1cAncdeuTri2O0g1Xwbx3iUu1LSYU&#xA;iW+sCZdPlNBX7cT/AO+5PfwPfJxl0PNhOPUckt9L2ybVb3r8sPNb63on1a6flqNhxjlY9XjP92/z&#xA;2o3vv3zSazBwSsci9L2fqfEhR+qLMsxHPdirsVdirsVdirsVdirsVdirsVdirsVWTTRQQyTSsEii&#xA;UvIx6BVFSfuwgWaRIgCy+c/Meqza1rV1qUtf37n01P7MY2RfoUZ0OLHwRAeQ1GY5JmR6rfL0dNds&#xA;D/xen68OX6Sxwn1j3q+lG4g0/Ur2GouFEcYuKVZBKxDkN2JpSuCYBIDLGSIyITXTNOvmtYbDSmFt&#xA;Lc24u9R1BmKsIi5AQEbhRSpp1yqchdy76Ab8cJECMdrFkodIU1BG0zTW+qaFa0lv76UULkbepJTr&#xA;4RxjCfTud5HkPx9pYj1+mO0BzP4+wNfUPLl9p2pHT7aeGTT4lmjuZZg5lHqrHRowiha867NjxTiR&#xA;ZG68OOUZcII4RzvzVbi68osthJC+qtdW0KBnEiD03Qk/AWDEAHccdhgEcm98NFlLJh2rjsBBSN5R&#xA;lkaWRdSeRyWd2kgJLE1JJKdTkwMg/m/a1mWE7ni+xFsuia20VoL69huo4xFYPfvG8Ap9mIlQCgPQ&#xA;HoMh6ob0K602XDJQuQPS+XuTTS5dR1HUorC5dtP846eeFlfPt66oN4LjrU8fstvyGxyuYEY2N8Z5&#xA;j9IbsUpTlwn05o8j3+Ra/TWjaddalEwvdJu7tTb6pZWaQTW3MVDNHzdeNamnhXY4+FKQHKQHIm7X&#xA;x4QMh6ok7ECiPhulto/k+yiubqwvtSg1KKOtkWjjQGSo2PBnqPHlQU8cskMhoERrq0xlhiCYmQl0&#xA;5KJuvK17cJd3iXVjdOR9ZSzWMws1fidOTKycvChpkuGYFCiPNh4mKRs2D5ckULCwiS+uFubyOyvQ&#xA;0OkQBj6s5PinePltv1+eR4iaFCxz8mfDEWbNH6e8/sUo7BtKZLWHlf3EsbHV9OA5Rqg3pyWtHXx8&#xA;cPFxb8u4seHg2G5/iCFjhXT72CS0f6xpeo/AY5B9pOQDRyD+ZK9R88n9Q35hh9JFbxkleo2aW+oX&#xA;VulSkM0kak9aKxA/VlkTYBaZipEJz5C1htG8zWk5bjbzN9XufDhIQKn/AFWo30ZTqsfHAhydFn8P&#xA;KD0Oz6AzQPVuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KsS/M/VGsvK8kMZpLfOsAp14H4n/AOFWn05m&#xA;aLHxZL7nXdp5eDFX87Z4p6ebt5i020a1W1KatcnhBA1YE/alkXcKvsP2jlWQ36Q34hXrPIfaus7X&#xA;Uo9Au51uhb2crBfQbYzEdeG36uuCRHGBW6YCQxk3Q+9Gx6LLqU1nGtwlrFFp6vcSu1KRh25bDr+r&#xA;IHJw3tfqbRiMyBdelTjjfWrmHR9MU2ukQH1JHamyj7dzO1QCae+3QYn0DilvL8bBA/ekQhtAfiyi&#xA;bez0+1h8zR6fcG6sUtY0juWXjUtcR0Hv0p75EykTCxRv9DOMYxGThNx4efxCL0u0ttAuPrFh5g09&#xA;5Lq2CyrNFJIF9QVIHFX6Hxp7rkJk5BRjLYtmKIwm45I7juP4/HJtZbl2CRa9pDSMaIrWUSAk9AWa&#xA;2oPmcaH82Xz/AGrxE8pw/wBKP+JQrwR6pJJo+rwxadr8LFbW6WNII5GP+6ZljCp8X7DgZK+H1R3h&#xA;+OTAgZDwTAjkHI8vgf0FDajqS/osadqdrInmGxlWOG/ZuLJCm/FyPibj+z1+e1DOGP1cUT6D0YZM&#xA;3o4Zj95E8/JH2OladoeswXsOu6fdPEBIFmSV1Jdd/sK9CK7GtcrlOU40YyDbDHHFMSE4n5ol7uzZ&#xA;mY3nl+rEk/6A3f5w5HhPdP8A037WZyR78X+l/YpkTXAddO/Ql/cIpf6tDZhZGVdzwDxqGI8Aa4eX&#xA;1cYHvRZP0+HI93D+xKrTUL5rfUdVej6krQWtvIQB6KyiQH01FFUgR0FOmWygLEem5caGWREp/wAW&#xA;w93NXktb3T7W9t9LBee3FdWv60aprWOPlvRd6nqcAIkQZdeQZmMoAiPMfUf1JcZbD9HaVGkpM8Ez&#xA;vMpWgUOynr/sRllGy0cUeGO+4KG123kTWL3mpXnNI617qzEqR8wcljPpDDMKmfegPTyxrt9BeU9T&#xA;OpeXLC8Y8pHiCynxeP4HP0suc9qIcMyHsNJl48UZeSbZS5DsVdirsVdirsVdirsVdirsVdirsVeX&#xA;/m7dGTUbCzB2hhaUj3kbj/zLzbdnR9JLz3bOT1xj3C/n/YwDhmxdKmd3GG0/SVPQrID9MzZVHnL8&#xA;dHIn9Mfj96N1Sziuf0nNJOUOnssVtbhfgCFuIAp0yEJVQrm25YiXESfp5BQKz69NZ21vbR2/1WAR&#xA;yzVIUInV5GPRRh2xgkm7LCzmIAFUEcsaXcb6PpDiDSoaSanqUg4+px/bf/IH7Cd/nlfL1S+roPx9&#xA;pbh6v3cNoD6pd/46BUihg1GFra3JsPK1gwe6uXHxzSfzNT7Ujfsr+yMBJibO+Q/Z+xkAJih6cMeZ&#xA;7/29w6KE9ppus38uoQ2y6RoVqqpM67lio2VR0aV/AfM+JkDKA4SeKZ/HyYSjDLIyA4MY/HzKrdWU&#xA;/miW6v7K0g03T9OgCip4KQgJVS9KF6fcMEZDFUSTIyLKUDqCZRAhGI/HxQlnc22r2semanIIrqIc&#xA;NO1F+ijtDMf99/yt+z8snKJgeKPLqP0hrhkGUcEzRH0y/QfL7l97qcqullrumLd31n+5EzvJHLwH&#xA;2VdkPx0/ZPhgjjHOBoFOTMR6ckblHbz/AGtWOo6EWlhHl9Zpp42igCzSuwdvskKa/hvjPHPnxLjz&#xA;Y9x4dk+ZRf6Es7azOiLafX/Ml2ylmQ/DaAUPAsDQtSvPsPoyHiEnjuoD7WzwYxj4dcWWX+x/HVD3&#xA;7aLYLZafpyiXUrWYPc6rGxCs9d0j33Vdt/b3yUBKVyl9J6MMkscOGMd5A7y/Ur6pEq3GvKoAX9JW&#xA;9AOnWbBjO0f6p/Qyzc8n9cf75S1FSJ/M1O7p/wBRC4Ycofjoxy88n46oG3Ed5Y/o6SARTwI88M6i&#xA;hailyr17Mvf5ZYdjxW0xIlHhIojdSu+Uui2TyHk8cksSseoQBSF+QrhjtIsZm8YJ80t4Za0PV/ym&#xA;ui+h3NqTUwTll9lkUbfepzT9oRqYPeHpOx53jI7izjMB27sVdirsVdirsVdirsVdirsVdirsVeQ/&#xA;mSxk80zA/wC644lH/A8v+Ns3ehH7t5XtaV5z7gxbhmY61Hz3ME1vYQRxFHtwQ7E1DFmrt9OViJBJ&#xA;72+WQERAHJH3i/Dr3vLH/wAnDlUf4W7J/lPePvQ1zM9volnbQ/BHdh5rors0hWVkUMf5VC7DJxjc&#xA;yT0a5zMccQP4tz57o8S2er31lo2nxtYaYxDTpWru6qWd2P7RCii1yujAGct5N4lHLKOOHph1W+qm&#xA;uXkdjHWx0OxjkmWFPiZYolLO5/nlYDrjXhi+cz+PkjjGaXCPTjiCfgOvvWrc2GqahbWt7I2maFCr&#xA;/V40BNAAdyaHk7kfE1MPDKESR6poGSOSYjI8GMcvx3nvVZkl1oiOJf0d5asK8XYHgqjqzH/dkz16&#xA;dciKx8/VkP4+TI3m5enDH8fGRXNbQ+ZbtYLGGLTbDTLZv9Il6lFPwmVwKcmP8euNnELl6jI/ik8I&#xA;1EqiBCMI8/1/jvV/Lmqa6qLdyTWy2Gn0T67eRB6fyxI6r6rHfYKdhkc+OHKjxS6D8Uz0ubLXETHh&#xA;j1kPsHV2mXVjp2oXF/ba5ai4uVdWJs56KXNaoAnw0P0Y5ImURExNDzC4skcczIZI2f6J/U1p0tjZ&#xA;2d5ZQ+YLdU1CizzG2uDIB0NHKjqD3/DGYlIgmB9PmFxSjCMojIPVz9MrSW7stOsNbCR3BvtPhlTl&#xA;PEKFl2LAE7V/DL4ylKHKpOHOEIZKB4og8wmeoTQXMepX0Culte31uYDJQFigkMlPkWyqESKB5iJ/&#xA;Q5OWYkJSHKUxX22p6iv7/wAx+7r/AMn1ww5Q/HRjl55fx1bnlkm1gFyCRYmlAB9qAsenucQKj/nf&#xA;pWUicm/839CVzSwto1vAIXEiSuxmP2DUCoHv0/zOXAHiJcaUx4YFdUBwyxpeiflHUDVRXb/RyB/y&#xA;MzV9pfw/H9DvuxD9fw/S9DzWO+dirsVdirsVdirsVdirsVdirsVdiryDz/GR5svSejCIj5ekg/hm&#xA;90R/dD8dXku1P7+Xw+4Me4ZlOvTO7dnstLBAFFfoAOkhH8MpiN5OTklcYfjqiLsfDrfvJH/ycOQj&#xA;/C2ZP8p7x96Dvx/oGme0Mn/J+TLIfVL3/oacv0Q9x/3RT5blpPONhJKqRI0MSxFVCKfUg2/4d+I+&#xA;7MbhrEa7z97neJepiTtsPtj+tA+WrRYr7UYLyZLOQWdxERNVfidONPorXLM8riCN9w06OFSkJHh9&#xA;MhuradeWmtWcGi6rIlobVSLC/oAFp1SQVAIYd9umCcDjJnHe+YZYssc0RjyERr6ZfoKGs01XVLdN&#xA;GE6DS7F2mknICxIu9XZqAnqeIO++SlwwPHXqLXj8TKPDv0R3voPP9SOCW15atbwM1l5YsmBubkj9&#xA;7cy9v9Z2/ZXoo3OV7xNnfIfsbxwzjQ9OGPM9ZH9fcOjru5gWCC8vYFjsowf0NovZh/v6buVJ3Nd3&#xA;PtjGJsgHf+KX6B+NlyZAAJSHp/gh+k/jf3KN9ceY7OxtL+VbT6tegtEUtrVuP+S37vY0/wA65KEc&#xA;cpGIux5n9bDLPNCEZnh4Zf0Y/qRMsHmSKC3me40xVuYxKgdbFDQ/66LX6K5AHGSRUtv6zZKOYAEn&#xA;HuL/AIP1LJZrh7FrfV7qyNisgnaOzNuZ5GUUCKINhXuxH04QBdxEr87r7UGZMayGHDd+nhs+W33r&#xA;L1xaxW+pXaxvLIn+4rT4zyigTs7+J/WevsYjiJiPie9jklwgTlV/wx6BAabJePDeyTyBLK4P+mTs&#xA;oLMxNeKf5TV+jLMgFgDmOTThlIiRJ9J5n9Xm28gVpNRlX0lkjMNnb9WK8OAY+wHfED+EfFTKrmdr&#xA;FAfYoXpmj0q1s5TRwzS+l3VTTjXw6nJQAMiQwyEjHGJ96W8MucZ6N+VVq6WeoXJHwyyRxr84wSf+&#xA;TmantGW4D0PYkPTKXeR9n9rOs1zvHYq7FXYq7FXYq7FXYq7FXYq7FXYq8r/MWHh5kZ6f3sMb/dVf&#xA;+Nc3WhP7v4vKdrxrP7wGMcczXWI+4oLPTiegV6/8jTlUecvx0ciZ9MPj96JnaJb+9t7gmOG8YFZh&#xA;uBRuSN7qe+QiDwgjo2TkBOUZbCXX7m0t45EXSr3jDcRVNlc/sEOeXFj3Viahu2JNeqO46hIiCPDn&#xA;sR9J/HTzbimjMbaRrIMXoEi2uaFngb+U03aM/wC1iY/xw6/b+1YzFeHl2rke79iZrdQuq/Wr7TLu&#xA;RVCia4gleQquwBYIK098p4T0Eh7iHJGQH6pY5HvIN/cr236MldlafRVARmB+rSDdRUfa4DIS4h0n&#xA;82yBgTzxf6UpXa3cmq87WcxWGlW6m6vEtYwnMIQo2/aYlgBXYZfKHBuPVI7C3Fx5DluJqGMbnhCO&#xA;Fbk2sj2oMP2dD0Rdw2/99N/k9yT9r5ZVyvf+tL9Ab/q4SRt/BD9J/G/uc0+iHUxZaih1O5uW431/&#xA;HyYpJ0VLdV/ZQ7Gg37DHhnw8UfSByH6148XHwT9cpfVLz7o+5BaHbX8z6jDp0aXenoC0lndHiXUN&#xA;8BCgghx4gjLM0ojhMtpd4aNLGcjIQHFDul1/aqnTrim/lyLbp++n/wCq2DjH8/7B+pn4Uv8AUh85&#xA;f8UugtXiMnPy7EeaMq/vJDQnofjd/wAN/fAZX/GmMCLvEPmf0koO1sbmCzkgn0lbiR2BSV2IKgdv&#xA;hIP3Ee+WSmCbEqaseOUYkGFlqeqIkuoRpFDCKWmnodif5m3Y08SeuMe6PXmUTNC5igOUVCWRoX+t&#xA;3dJL1wDBCR8Ma9mYf8RXJAXsOTCUuH1S+roO78dAlsjPI7PISzsasx6k5cBTimRJsreOFD2TylYr&#xA;ZeXrKICjPGJXP+VJ8f4VpnP6mfFkJey0GLgwxHlfzTfKHMdirsVdirsVdirsVdirsVdirsVdirz3&#xA;80LbjdWN1T7aPET/AKhDD/iZza9nS2Ied7bh6oy8q/HzYRXNk6JHW81rPaNb3PISRAm0ZBUksd0I&#xA;9zlUgQbHxcmEoyjwy5jl+pUiimZjpt2hWRFZoGPVCFLUr3U0yJI+oMoxJ/dyG/Ty/YsdzJokZc8m&#xA;inKRk9QpSpUe1cIFT+DEm8QvpL9CreW817qNrBGQZZbeD4mNBtCpLMfYCpwQkIxJ8z97LJAznEDm&#xA;Yx+5VN/Y2siWmnWcN6RRWuJ4zI0rk/sLX4V8BkeCUt5Ej3MzlhA8MIiXmRdnyTe0/TkTljoNkeSM&#xA;tOEaMOQp3f7xlEuA/wAcnLx+KD/dQ+z9aXR6Xe6YNVgvECSNYCQAEMKNPF4eB2y45BPhI/nfoLjD&#xA;BLFxiXPg/wB9FHlitw7KaMugoVYbEH0lGxyrp/yU/S5H8X/JEfcGMWN/c2N1HdWr+nPEao2x6ih2&#xA;PtmZOAkKPJ1eLLLHISjzCZza3o9zI9xdaWzXUu87xXDRozHqeHBqVO/XKRimNhLb3OVLU45G5Q9R&#xA;51Kv0KJv/L3bSpR/0dH/AKp5Lgyfzvs/aw8XD/MP+m/YoajdaXNLC1latbxqgEyF+RZh1of4/hks&#xA;cZAGzbDNPGSOGNDqrXF9oTyExac6rQbesRvTfbi368jGE+svsZzy4SdoH5qIvrCNucFnxlX7DPIX&#xA;APjx4iuS4JHmWHiwG4jv77QckryOzuSzsasx6k5YBTQSSbLVcKHVxV695N1RNQ0C2IP723UQSr3B&#xA;QUB+laHNDq8fDM+e72PZ2cZMI7xt8k7zGc52KuxV2KuxV2KuxV2KuxV2KuxV2KsX/MayNx5eadR8&#xA;VpIsn+xPwH/iVczNDOsld7q+18XFhv8Amn9jynlm6eVdzxVO4b2BVsbu9Z2YxzoXG7HcqAfoY5jm&#xA;J3A8nPjkHplLuKCLD9CmnT6z/wAy8s/j+Dj/AOS/zv0I+1f/AHNWp/5cx/1CHKpfQff+lyMf96P6&#xA;v+9Ure9sdOsY5rJzLqs4Ks5H9wOh4f5R8clKMpSo/SPtYQnHHAGO+Q/YsvLKytNO/wBKlf8ATEjB&#xA;/QG4RD/vw/zHr1rhjMylt9CMmKMIeo/vO79aYXMdlA18tpJLIj6XE5aY1b4pISAPbjTbtlUSTV/z&#xA;v1uROMY8XCSf3Y5++Ks0n76T/thIP+SSZGtv+SjMnc/8J/QGKcszXUu5Yq7liruWKu5Yq7liruWK&#xA;u5Yq7liqdeVPMkmi6kJTVrSaiXMY/l7MPdcx9Tg8SNdXN0OrOGd/wnm9ihmimiSaJg8UihkddwQR&#xA;UEZoiCDRewjIEWOS7Al2KuxV2KuxV2KuxV2KuxV2KuxVQv7SO8sp7ST7E8bRt7BhSuShLhIPcwy4&#xA;xOJieoeC3EctvcS28opLC7RuPBlND+OdJE2LDw8oGJIPMKfPCxTiKO0mtNOjupvQiYT/ALyld+W1&#xA;coJIJrycsRiYxEjQ3Q13PfWkL6ZLQRB/UGw+LwIPgcnEAnia5mURwHkj4ZLf9NW31eYTKLUqzAEU&#xA;K27LTf5ZUb4Dff8Apb414go36f8AeqNn6Fpbw3FswutTnqIYlHL0SP2ivdvDJSuRo7R+9hjAgAR6&#xA;pn7F91BapALEI11rk0gaSRWqEJ6oT+0f5v17YIyN3ygmcI1w/VkJ/AV7h6PqQDB1t9Pgt5JF3X1E&#xA;aFSAfmpyI6ecifvbJfxeUAPj6VZpf3sn/bFQf8k1yNbf57K9z/wr9DF+eZjrXc8VdzxV3PFXc8Vd&#xA;zxV3PFXc8VdzxV3PFWf/AJbeaOMg0S7f4HJayY9m6tH9PUZrNdp/4x8Xe9k6yv3cvh+p6Nmregdi&#xA;rsVdirsVdirsVdirsVdirsVdiryP8ztJNlrovEWkF+vOvb1EoHH6j9ObrQ5OKFdzzHa2DhycQ5S+&#xA;9h/PM11dI+wv4DEbK9FbRzVJAKtE5/aXxHiMrnE8xzbscxXDLl9yLeiBdN1Jh6RHKxvl3Cg9N+8Z&#xA;/DIf0o/ENpFeifLofx0as9P8w2NwZrWAs1CokXi6sD3H68ZThIUUQxZYG4h1lZeZbKdpre2dZGUq&#xA;WIU7H54ylCQolcePLA2Ar2sfoCW2tZVE/Guo6l1SJD1RD4n265GRvc/AM4R4bETv1l3NPPam1Usr&#xA;RaNC37mCtJbqUdWY/rPboN8aN/0vuUkV3QHzkXXN7dafcTS6hbxu99benFGjUESEABeI6UAH9cRE&#xA;SAAPIrKZgSZD6o/JIOeZLhU7nitO54rTueK07nitO54rTueK07nitO54rTueK0uinkjkSSNisiMG&#xA;Rl2IYGoIwEWkEg2H0HYSTy2NtJOOM7xI0q0pRyoLCnzzm5gAmnt8ZJiCedK+RZuxV2KuxV2KuxV2&#xA;KuxV2KuxV2Kse896EdY8vTxxLyurf9/bAdSyDdf9ktR88ydLl4J+RcLX6fxcRA5jcPC/UzfPJu9T&#xA;FUfaarGLZrO8Qz2pPKPiQHibxQkHr3GVyhvY5tscm3DLcNrJoPIVW6IruA0df1Y+vyUeH5qkttp8&#xA;utm1R2sbUtStwDyXau4PSvapwCREb5lkYRM6+keaPuPq8duvqK0OjRGtvF0kvH/nPQ0Pj2HTKxd/&#xA;0vubZAAf0P8AdLLm7NmVvL1VbUWUfU7OnwW6fssy+P8AKv0nCBew5feiUuH1S+roO5IprmWaRpJX&#xA;LyMaszGpJy8CnFJJNlZ6mFDvUxV3qYq71MVd6mKu9TFXepirvUxV3qYqmXl3SjrOs22miUQfWCwM&#xA;pFaBVLnbapou2VZsnBEy7m/T4fFmI3VvXNF/Lvy5pciTGNru5Q1WWcggHxCABfvrmny6yctuQejw&#xA;dm4sZvmfNk+YrnuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KvD/zJ8uHRtca4hSlhfkyw06K/wDuxPvN&#xA;R7HN3o83HGjzDzHaOm8PJY+mTEfUzLdfTvUxWlyTvG6ujFXQhlYbEEbgjEhRsm8t4NZt5ZJzx1K1&#xA;jMnqgUWWJOoYDoy9j3yoDgO3It5PiDf6gqx6jJb6fbaheObq5o0emxPukaoQGkbxIPQf2YDGyQNh&#xA;1ZCVREjueiSS3Ms0rSyuXkc8ndjUknLgKcckk2VnqYop3qYrTvUxWnepitO9TFad6mK071MVp3qY&#xA;rTvUxWnepitIzSNVn0zU7a/g3ltpA4U9Gp1U/MbZHJASiQerZiyGEhIdH0hDJ6kSSUK81DcTsRUV&#xA;oc5wh7IGwuwJdirsVdirsVdirsVdirsVdirsVdirsVSjzT5dttf0abT5qK5+O3lP7Eq/Zb+B9stw&#xA;5TjlbRqcAywMS+dtQtbvT72ayu0MVzbuUlQ9iP1g9jnQRkJCw8pPGYkg8wh/UyTCnepitJloklXv&#xA;f+YOf/iOV5OnvbcY5+4r9Rk/3BaQfH6x/wAnBgj9R+CZj0R+KVeplrTTvUxWnepitO9TFad6mK07&#xA;1MVp3qYrTvUxWnepitO9TFad6mK0yv8ALO9sY/NdpDd2kdyLhuEUjglopACVZRXj1HcfLMXWA+Ga&#xA;NOd2eYjKARdvfc0T07sVdirsVdirsVdirsVdirsVdirsVdirsVdiry/86PK6yWcfmG2T99Bxivqf&#xA;tRk0Rz7q3w/I+2bHQZqPAXUdp6exxjpzeOerm1dJTvVxWk78rwNcvqFJI4+NlN/eMFrVabV/HK8p&#xA;qve24o3fuU9Tk/51/Rj4/Wf+Tgxj9R+CzHpHxSj1csaqd6uK071cVp3q4rTvVxWneritO9XFad6u&#xA;K071cVp3q4rTvVxWnsf5SeRYoreDzLfjlcSgtYQ9kQ1X1D4sw6eA9+mq1ups8A+Lu+ztIABkPPo9&#xA;QzXO3dirsVdirsVdirsVdirsVdirsVdirsVdirsVQ+o2FvqFhc2NwKwXUbxSD/JcEGnvvkoyMSCG&#xA;M4CQIPV8n38E1jfXFlNtNayvDIP8qNip/EZ0cZWLeTlDhJB6KHq5JjTvVxWmQ61bTw+V9BlfjxcX&#xA;BFGBNHcMNgfD7spgfUW6cfSGPerlzTTvVxWneritO9XFad6uK071cVp3q4rTvVxWneritO9XFad6&#xA;uK0+l/yyvlvPIukSjqkRhYeBhdo/+Nc0GqjWQvTaKV4osozHcp2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KvmD81oltPzB1mJehlSXbxmiSQ/i+b7SG8Yec1sayyYn62ZLi071sVps3DEBSSQv2R&#xA;XYV8MC0162Fad62K071sVp3rYrTvWxWnetitO9bFad62K071sVp3rYrTvWxWn0J+Qs0snkmYOKLH&#xA;fSrEfFfTjb/iTHNNr/7z4O97N/u/i9HzBdg7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXy1+&#xA;cdykn5k6yUNQGgQ/NLeNT+IzfaMfuh+Orz+t3yn8dGGermS4tO9XFad6uK071cVp3q4rTvVxWner&#xA;itO9XFad6uK0vi9WaVYokaSVyFSNAWZiegAG5wEpEbZlYflD+Y17CJk0loUPQXEkUT/8A7Bx9IzG&#xA;lrMY6uTHRZT0al/KD8yojRtGZq9Ck1u3/EZDhGsxd6nRZe5T/wCVTfmP/wBWSX/kZD/zXj+bx96P&#xA;yeXuTnQfyK87X1wn6TSPSrSoMkkjpLJx/wAlImbf/WIyvJroAbbtuPs+ZO+we/6BoWn6FpFvpWno&#xA;UtbZeK13ZiTVmY92YmpzUZMhmbLuceMQjwjkmGQZuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV8YebdYGqeaNW1BW5R3V3NJGf8AIaQ8P+FpnR4o8MQPJ5zKeKRPmlPrZY1071sVp3rYrTvWxWne&#xA;titO9bFad62K071sVp3rYrT6V/IzyNY6Z5bt/MFxCH1bU1MkcrgExQEkIqeHNfiJ96ds02tzmUuH&#xA;oHc6LAIx4upeoZguc7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUi896yNF8m6z&#xA;qfLi9vaSmFun71l4Rf8ADsMtww4pgebXmlwwJfFXrZ0ToKd62K071sVp3rYrTvWxWnetitO9bFad&#xA;62K071sVpfD6k0yQxjlJIwRFHdmNAMBKgPubTLGLT9NtLCH+6tIY4I/9WNQg/AZzUpWSXooihSJw&#xA;JdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiryL/AJyZ176h5Eg01GpJqt2iMvjF&#xA;APVY/RII8ztBC533OJrZVCu98t+t75uXVU71vfFad63vitO9b3xWnet74rTvW98Vp3re+K071vfF&#xA;ad63vitMj/Le1GoefvL1ow5I9/btIp7okgdh2/ZU5TnlUCfJswxuY977eznneOxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kvlr/nKjzB9Y856fpCNWPTLPmwr0luW5MP+Rccebjs&#xA;+FQJ7y67WG5AdzxT1vfM9w6d63vitO9b3xWnet74rTvW98Vp3re+K071vfFad63vitO9b3xWno//&#xA;ADj3B9a/NnRqiqwLczMN/wBm2kC9P8phmLrTWIuRph6w+yc0TtXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXwf+bXmD9M/mT5ivw3OM3kkETV2Mdv8AuEI+axjOg08eHGA6nMbk&#xA;SxH18ua6d6+K0718Vp3r4rTvXxWnevitO9fFad6+K0718Vp7B/zizxl/NAlusWn3Dr8+Ua/qbMPX&#xA;/wB38XJ0o9b6+zSuxdirsVdirsVdirsVdirsVdirsVdirsVf/9k=</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:775298178812E8118F66943887054C4C</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:785298178812E8118F66943887054C4C</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:765298178812E8118F66943887054C4C</stRef:instanceID>
            <stRef:documentID>uuid:B99E45558512E8118F66943887054C4C</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>297.000002</stDim:w>
            <stDim:h>209.999994</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>ÂàùÊúüË®≠ÂÆö„ÅÆ„Çπ„Ç¶„Ç©„ÉÉ„ÉÅ„Ç∞„É´„Éº„Éó</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>„Éõ„ÉØ„Ç§„Éà</xapG:swatchName>
                           <xapG:mode>RGB</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:red>255</xapG:red>
                           <xapG:green>255</xapG:green>
                           <xapG:blue>255</xapG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -595.283 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 595.283 li
595.283 595.283 li
595.283 0 li
cp
clp
[1 0 0 1 0 0 ]ct
595.283 0 mo
0 0 li
0 595.283 li
595.283 595.283 li
595.283 0 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
346.578 595.275 mo
150.125 595.275 li
157.119 561.508 167.582 526.64 171.364 501.667 cv
175.143 476.694 170.697 450.334 150.524 422.827 cv
127.878 391.95 104.04 337.283 99.3521 289.896 cv
95.2007 247.938 100.805 210.958 130.09 165.443 cv
153.864 128.484 215.095 98.7266 271.379 98.7266 cv
358.983 98.7266 421.431 141.145 442.903 196.616 cv
456.719 232.315 455.858 251.216 455.592 261.855 cv
455.184 278.23 447.815 286.519 447.815 298.186 cv
447.815 302.561 451.138 312.277 457.983 321.348 cv
468.999 335.951 481.127 353.449 484.043 359.282 cv
487.15 365.496 484.811 372.484 477.288 375.861 cv
471.208 378.592 460.096 380.16 460.096 384.458 cv
460.096 388.756 460.864 395.203 463.627 399.041 cv
466.165 402.564 466.582 406.604 463.934 409.021 cv
460.403 412.243 457.486 413.318 453.955 414.699 cv
462.399 417.463 463.114 427.798 459.021 431.894 cv
454.928 435.987 448.43 440.795 448.89 448.624 cv
449.274 455.16 452.989 469.451 453.188 476.41 cv
453.495 487.157 444.132 495.295 433.692 497.135 cv
423.252 498.974 398.735 497.851 389.788 496.826 cv
379.042 495.6 362.372 500.921 357.524 514.021 cv
352.676 527.121 346.578 572.352 346.578 595.275 cv
cp
level3{
gsave
clp
[2.57843e-05 -589.271 -589.271 -2.57844e-05 291.758 599.406 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~TbJXMTbJXMU)"mPU),!RUDY9VU`:QYV&^c\VB7&`V]m>cW$N\hW?rnkX!o@qX=P[uXY2(&Y;.I*YV[d/
Yr=-4Z8sE7ZTTf=Zp6/B[6lMG[mr%N\OnLT\kOmZ]2:9_]i6`e^K*,j^frVq_I#,"_dYJ'`F_".a([I4
aDO!<b&TKBb]c)Jc?VPQd!e+XdXs^`e;$9her)fofT8H#g6G#*gmLV3hk!:;iM/pDjJYWMk,_5Vkcme]
lF'IgmCc?snAA*'o#Oc2p!$P?q:&LLqq,*VrnUods5[\ss6+/)s6Xe8s7(=Fs7CdTs7_6cs7qTps8.m'
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~TbJXMTbJXMU)"mPU),!RUDY3TUDb<VU`:QYV&^c\VB@,aV]mDeW?ihjW?rnkX!o@qX=P[uXY2(&Y;.I*
YV[d/Yr=-4Z8sE7ZTTf=Zp6/B[6lMG[mi"N\OnLT\kOgX]210]]i6`e^/d#i^frVq_I#,"_dYJ'`F_".
a([I4aDO!<b&TKBb]c)Jc?hYRd""4YdXsaae;$9her)fofT8H#g6G),h4$e4hk3I>ihT'EjJb`OkH7MZ
l*O+am(#mlm_;X"n]"K.oZL28pWutDqU\mSr7kT_s5IJns6"#%s6OY5s6k.Cs7CdTs7_6cs7qTps8.m'
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [0.505495 ]
/Encode [1 0 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.57843e-05 -589.271 -589.271 -2.57844e-05 291.758 599.406 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[0.00392157 0 ][0.00392157 0 ][0.00392157 0 ][0.00392157 0 ]]
/Samples[
<~s8W-!s8W-!s8W-!s8W,urr)`jq=s[Uo'u5<md09(ki_*ijQ#7Yi8<AGgY1?5f@JL%e'cXjcd'eZbK@rJ
a2c3=`5BI/_8*h#^V7Co]=PSa\[],W[C!<IZa-mAZ*:I9YHG"/XK/D%WMlbnVl$>gV59u`USFQXTqS0R
TV.sNTqS0RU8"BVUSFW\V5:&dVl6PmWN*#"XK8P,YHP17Z*CU?Za7$G[C3QS\[f;_]=bhj^;%J"_SX4/
`Q#s=aN;TJbg"GZd*^:jeCE.%f\,!5h;7&IioB+]kNM0qm-X60nac>Fp\=U^r;HZqs8W-!s8W-!s8W-!
~>
<~qYL$_p\"1LnaGl2kiUsbhV6`8e^DdfaiD?:^V%(aZ`pU5WMcSfTUqX@Q^*brNf/aLKnFr+I!U$]F`VP@
D/*`sARf.V?<gZ9<`N*s;,9nZ8k;H@6UF%&4Zkbc2`<KK1,1I8/Lr;!-RC&a,9\0O*ZZ4?)AsA.()@W!
',)#m'GVB!(Dn#-)B0Y9*?QCI+s\H\-7C;n/1rS11,CaF2`Wo]4[21u6UaI88k_rT:f:7m<`rX4?XR>R
AnPgoDK'W=GBnOaJ:W?,LP^qLOHYrsS"64HUo(,lY-G@B\\,\o`lQ?Jd*pV"gu%,PkNV@#n+$&Cp\=R\
~>
<~O,f0UL4Xo&G]e"DC1h'd?sQu?=BAR)<)Z[k:f'q_9hS,P8k;KD7n,p96pj:-6:!k%5<_4n4?P_e3B9&Y
3&``R2)R3I1G^gC1GU^?0eb:80.nk//M&G'.k2ts.4H\o-RU8h-7'ra,pX`\,9nEX,9nBV+sJ3T+X%sN
+<VdL+<VgN+X&!P+X&$R,9nHZ,U=W\,pai`-7:/g-R^Dm.4H\q.k</%/M8Y./hSe10JP=<1G^gC1c.'I
2E!KR3&ioY3]fDb4?Ynn5X7V%6UX=16q'R77n?6F9MA,S:Jaqe;c?Xq='/X2?=75QB5;F,GC+gkL5CkL
~>
<~,9\*I)&<o!&.T-X$OR1G#6k>7"9S`-!<<*"zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzz!<E6'!sAc2"pYD?$4@:Q&/#Zm)&jV?~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
226.093 462.298 mo
226.093 464.43 227.821 466.156 229.953 466.156 cv
232.084 466.156 233.81 464.43 233.81 462.298 cv
233.81 460.734 232.878 459.396 231.541 458.789 cv
231.541 405.465 li
231.496 405.254 231.867 404.351 232.05 404.234 cv
263.835 372.447 li
264.322 372.66 264.855 372.781 265.419 372.768 cv
267.48 372.716 269.111 371.004 269.06 368.942 cv
269.009 366.882 267.298 365.253 265.238 365.302 cv
263.177 365.353 261.546 367.064 261.597 369.125 cv
261.609 369.626 261.722 370.1 261.912 370.532 cv
230.13 402.313 li
229.316 403.195 228.873 404.264 228.827 405.465 cv
228.825 458.625 li
227.248 459.11 226.093 460.562 226.093 462.298 cv
cp
385.669 259.966 mo
385.669 224.62 li
387.087 224.063 388.083 222.676 388.044 221.063 cv
387.994 219.002 386.281 217.373 384.22 217.422 cv
382.158 217.473 380.529 219.185 380.58 221.247 cv
380.617 222.796 381.594 224.102 382.954 224.633 cv
382.954 259.98 li
381.535 260.536 380.54 261.921 380.58 263.535 cv
380.629 265.596 382.341 267.227 384.402 267.176 cv
386.464 267.126 388.093 265.414 388.044 263.352 cv
388.006 261.803 387.029 260.498 385.669 259.966 cv
cp
395.625 264.423 mo
395.625 247.764 li
397.043 247.207 398.039 245.82 398 244.207 cv
397.949 242.146 396.238 240.516 394.176 240.567 cv
392.115 240.616 390.484 242.328 390.535 244.389 cv
390.572 245.94 391.55 247.245 392.91 247.777 cv
392.91 264.423 li
392.958 264.636 392.583 265.538 392.4 265.653 cv
374.755 283.298 li
374.64 283.481 373.738 283.855 373.525 283.807 cv
367.411 283.807 li
366.855 282.389 365.469 281.394 363.856 281.433 cv
361.794 281.483 360.166 283.194 360.215 285.255 cv
360.265 287.317 361.977 288.949 364.039 288.898 cv
365.587 288.86 366.893 287.882 367.424 286.523 cv
373.525 286.523 li
374.726 286.475 375.793 286.033 376.675 285.219 cv
394.322 267.573 li
395.135 266.691 395.578 265.624 395.625 264.423 cv
cp
289.207 231.314 mo
308.333 231.314 li
308.89 232.733 310.277 233.729 311.889 233.689 cv
313.951 233.639 315.581 231.926 315.531 229.865 cv
315.48 227.804 313.769 226.174 311.707 226.225 cv
310.158 226.263 308.851 227.241 308.321 228.599 cv
289.207 228.599 li
288.994 228.646 288.092 228.272 287.977 228.091 cv
267.618 207.731 li
266.734 206.914 265.667 206.473 264.465 206.424 cv
241.158 206.426 li
240.601 205.007 239.214 204.011 237.601 204.05 cv
235.541 204.1 233.912 205.812 233.96 207.873 cv
234.01 209.936 235.722 211.566 237.783 211.515 cv
239.333 211.477 240.638 210.5 241.169 209.14 cv
264.465 209.14 li
264.677 209.092 265.582 209.466 265.695 209.649 cv
286.056 230.011 li
286.938 230.824 288.006 231.267 289.207 231.314 cv
cp
220.552 270.236 mo
220.552 256.183 li
220.504 255.972 220.879 255.068 221.06 254.954 cv
244.605 231.409 li
245.027 231.562 245.482 231.648 245.958 231.636 cv
248.019 231.586 249.648 229.873 249.599 227.813 cv
249.549 225.751 247.837 224.121 245.777 224.171 cv
243.716 224.222 242.084 225.933 242.135 227.993 cv
242.15 228.58 242.308 229.124 242.562 229.611 cv
219.141 253.032 li
218.326 253.916 217.882 254.982 217.835 256.183 cv
217.833 270.25 li
216.416 270.806 215.421 272.192 215.46 273.804 cv
215.509 275.866 217.222 277.496 219.284 277.446 cv
221.344 277.396 222.976 275.682 222.925 273.622 cv
222.887 272.072 221.911 270.768 220.552 270.236 cv
cp
300.145 245.251 mo
300.094 243.189 298.382 241.56 296.322 241.611 cv
294.771 241.648 293.466 242.626 292.935 243.985 cv
286.943 243.985 li
286.731 244.032 285.829 243.658 285.715 243.477 cv
259.472 217.234 li
258.589 216.417 257.522 215.976 256.323 215.927 cv
230.748 215.927 li
230.191 214.508 228.806 213.514 227.195 213.553 cv
225.132 213.603 223.502 215.315 223.551 217.376 cv
223.602 219.438 225.314 221.069 227.375 221.018 cv
228.925 220.98 230.23 220.002 230.761 218.643 cv
256.323 218.643 li
256.534 218.595 257.436 218.97 257.552 219.153 cv
283.794 245.395 li
284.676 246.21 285.743 246.653 286.943 246.7 cv
292.948 246.7 li
293.506 248.12 294.891 249.115 296.503 249.075 cv
298.565 249.025 300.195 247.312 300.145 245.251 cv
cp
248.787 159.766 mo
248.796 160.267 248.911 160.74 249.1 161.173 cv
243.148 167.125 li
242.664 166.912 242.129 166.791 241.565 166.804 cv
239.504 166.855 237.875 168.565 237.925 170.626 cv
237.974 172.689 239.686 174.319 241.75 174.269 cv
243.81 174.219 245.439 172.505 245.389 170.444 cv
245.376 169.945 245.263 169.471 245.074 169.041 cv
251.027 163.088 li
251.511 163.301 252.042 163.422 252.609 163.408 cv
254.669 163.358 256.299 161.645 256.25 159.584 cv
256.201 157.522 254.488 155.893 252.427 155.943 cv
250.365 155.994 248.734 157.705 248.787 159.766 cv
cp
383.067 204.841 mo
383.067 205.375 383.183 205.879 383.384 206.339 cv
373.17 216.551 li
372.357 217.432 371.915 218.5 371.868 219.7 cv
371.868 260.351 li
371.915 260.562 371.541 261.466 371.358 261.58 cv
360.576 272.364 li
360.09 272.15 359.556 272.029 358.992 272.043 cv
356.931 272.093 355.3 273.804 355.351 275.866 cv
355.401 277.928 357.113 279.558 359.173 279.508 cv
361.235 279.458 362.866 277.744 362.815 275.684 cv
362.803 275.183 362.689 274.709 362.5 274.278 cv
373.277 263.5 li
374.093 262.619 374.535 261.55 374.583 260.351 cv
374.583 219.7 li
374.535 219.489 374.91 218.585 375.093 218.469 cv
385.304 208.259 li
385.763 208.459 386.267 208.575 386.8 208.575 cv
388.863 208.575 390.533 206.903 390.533 204.841 cv
390.533 202.779 388.863 201.107 386.8 201.107 cv
384.738 201.107 383.067 202.779 383.067 204.841 cv
cp
230.859 266.647 mo
236.283 272.069 li
236.072 272.555 235.951 273.088 235.962 273.652 cv
236.013 275.714 237.725 277.345 239.787 277.295 cv
241.847 277.245 243.478 275.532 243.427 273.471 cv
243.378 271.41 241.665 269.78 239.604 269.83 cv
239.104 269.842 238.631 269.956 238.199 270.145 cv
232.777 264.719 li
232.988 264.234 233.109 263.702 233.095 263.139 cv
233.044 261.077 231.333 259.448 229.272 259.498 cv
227.21 259.548 225.58 261.259 225.63 263.32 cv
225.681 265.382 227.393 267.013 229.455 266.963 cv
229.954 266.95 230.428 266.836 230.859 266.647 cv
cp
256.25 173.841 mo
256.201 171.78 254.488 170.15 252.427 170.201 cv
250.365 170.252 248.734 171.962 248.787 174.024 cv
248.796 174.524 248.911 174.999 249.1 175.43 cv
243.148 181.383 li
242.664 181.17 242.129 181.048 241.565 181.062 cv
239.504 181.112 237.875 182.823 237.925 184.884 cv
237.974 186.946 239.686 188.577 241.75 188.527 cv
243.81 188.477 245.439 186.763 245.389 184.702 cv
245.376 184.202 245.263 183.729 245.074 183.297 cv
251.027 177.346 li
251.511 177.559 252.044 177.68 252.609 177.666 cv
254.669 177.616 256.299 175.903 256.25 173.841 cv
cp
221.935 144.532 mo
221.986 146.594 223.697 148.225 225.758 148.174 cv
227.82 148.124 229.451 146.411 229.4 144.35 cv
229.39 143.99 229.316 143.651 229.212 143.324 cv
236.441 135.66 li
236.542 135.482 237.421 135.102 237.619 135.152 cv
299.31 135.152 li
299.509 135.102 300.392 135.482 300.492 135.66 cv
311.398 147.149 li
312.268 147.994 313.333 148.452 314.548 148.501 cv
324.2 148.501 li
324.411 148.454 325.314 148.829 325.43 149.011 cv
343.335 166.917 li
343.134 167.375 343.018 167.88 343.018 168.413 cv
343.018 170.474 344.69 172.147 346.751 172.147 cv
348.814 172.147 350.485 170.474 350.485 168.413 cv
350.485 166.351 348.814 164.679 346.751 164.679 cv
346.218 164.679 345.714 164.795 345.255 164.996 cv
327.35 147.091 li
326.467 146.276 325.4 145.834 324.2 145.785 cv
314.548 145.785 li
314.349 145.836 313.466 145.458 313.366 145.279 cv
302.461 133.791 li
301.589 132.944 300.525 132.486 299.31 132.437 cv
237.619 132.437 li
236.403 132.486 235.339 132.946 234.466 133.797 cv
227.486 141.197 li
226.919 140.879 226.271 140.692 225.576 140.709 cv
223.515 140.76 221.885 142.471 221.935 144.532 cv
cp
350.937 173.052 mo
350.937 175.113 352.609 176.785 354.67 176.785 cv
356.251 176.785 357.597 175.798 358.14 174.409 cv
368.322 174.409 li
368.532 174.361 369.434 174.734 369.548 174.919 cv
396.246 201.722 li
396.429 201.839 396.803 202.745 396.755 202.957 cv
396.755 212.007 li
395.367 212.55 394.379 213.894 394.379 215.475 cv
394.379 217.538 396.052 219.209 398.113 219.209 cv
400.175 219.209 401.847 217.538 401.847 215.475 cv
401.847 213.895 400.861 212.55 399.471 212.007 cv
399.471 202.957 li
399.424 201.756 398.982 200.689 398.171 199.806 cv
371.472 173.003 li
370.591 172.184 369.522 171.74 368.322 171.693 cv
358.14 171.693 li
357.595 170.305 356.251 169.318 354.67 169.318 cv
352.609 169.318 350.937 170.99 350.937 173.052 cv
cp
363.646 183.799 mo
349.958 183.799 li
349.746 183.845 348.845 183.472 348.73 183.289 cv
324.488 159.048 li
324.689 158.589 324.804 158.085 324.804 157.552 cv
324.804 155.491 323.132 153.819 321.07 153.819 cv
319.008 153.819 317.337 155.491 317.337 157.552 cv
317.337 159.614 319.008 161.286 321.07 161.286 cv
321.604 161.286 322.109 161.17 322.568 160.97 cv
346.808 185.208 li
347.69 186.023 348.759 186.467 349.958 186.513 cv
363.645 186.513 li
364.189 187.902 365.533 188.89 367.115 188.89 cv
369.177 188.89 370.849 187.218 370.849 185.156 cv
370.849 183.094 369.177 181.423 367.115 181.423 cv
365.534 181.423 364.189 182.41 363.646 183.799 cv
cp
224.348 184.884 mo
224.399 186.946 226.11 188.577 228.171 188.527 cv
230.233 188.477 231.863 186.763 231.814 184.702 cv
231.775 183.068 230.682 181.72 229.208 181.251 cv
229.208 171.166 li
229.162 170.955 229.535 170.05 229.718 169.936 cv
246.345 153.31 li
246.46 153.128 247.362 152.753 247.573 152.801 cv
256.548 152.801 li
256.759 152.753 257.663 153.128 257.777 153.31 cv
262.978 158.509 li
263.161 158.625 263.534 159.528 263.489 159.74 cv
263.489 182.393 li
262.337 183.053 261.563 184.292 261.599 185.712 cv
261.648 187.774 263.359 189.405 265.421 189.354 cv
267.482 189.304 269.113 187.591 269.062 185.529 cv
269.02 183.803 267.806 182.393 266.203 182.006 cv
266.203 159.74 li
266.156 158.54 265.711 157.472 264.897 156.59 cv
259.699 151.39 li
258.816 150.576 257.748 150.132 256.548 150.084 cv
247.573 150.084 li
246.374 150.132 245.306 150.576 244.425 151.39 cv
227.8 168.017 li
226.984 168.899 226.541 169.966 226.494 171.166 cv
226.49 181.42 li
225.198 182.032 224.31 183.36 224.348 184.884 cv
cp
224.683 391.6 mo
224.734 393.662 226.445 395.292 228.507 395.241 cv
230.569 395.192 232.197 393.479 232.148 391.417 cv
232.135 390.916 232.023 390.443 231.833 390.013 cv
264.446 357.4 li
265.261 356.518 265.703 355.45 265.751 354.249 cv
265.751 298.667 li
265.703 298.455 266.076 297.553 266.259 297.436 cv
298.157 265.537 li
298.272 265.354 299.177 264.98 299.387 265.027 cv
340.529 265.027 li
340.529 263.655 li
340.529 262.311 li
299.387 262.311 li
298.187 262.36 297.12 262.801 296.237 263.616 cv
264.339 295.516 li
263.525 296.398 263.082 297.467 263.035 298.667 cv
263.035 354.249 li
263.082 354.459 262.708 355.363 262.526 355.48 cv
229.909 388.098 li
229.421 387.885 228.89 387.763 228.326 387.777 cv
226.263 387.827 224.634 389.538 224.683 391.6 cv
cp
340.529 263.655 mo
340.579 265.717 342.291 267.348 344.352 267.297 cv
346.414 267.248 348.042 265.534 347.994 263.473 cv
347.943 261.412 346.231 259.782 344.169 259.833 cv
342.109 259.883 340.479 261.594 340.529 263.655 cv
cp
147.204 315.387 mo
147.253 317.449 148.966 319.08 151.028 319.029 cv
151.529 319.017 152.001 318.902 152.433 318.713 cv
153.947 320.227 li
154.13 320.34 154.501 321.243 154.455 321.455 cv
154.455 352.919 li
154.501 354.119 154.946 355.188 155.76 356.068 cv
180.732 381.039 li
181.613 381.854 182.68 382.299 183.88 382.346 cv
203.003 382.346 li
203.561 383.766 204.947 384.76 206.559 384.721 cv
208.621 384.67 210.25 382.957 210.201 380.895 cv
210.15 378.836 208.438 377.205 206.377 377.256 cv
204.829 377.294 203.523 378.27 202.991 379.629 cv
183.88 379.629 li
183.669 379.676 182.768 379.301 182.652 379.121 cv
157.681 354.148 li
157.498 354.035 157.124 353.13 157.171 352.919 cv
157.171 321.455 li
157.124 320.255 156.682 319.188 155.867 318.306 cv
154.347 316.786 li
154.562 316.303 154.682 315.77 154.667 315.205 cv
154.618 313.144 152.907 311.514 150.845 311.564 cv
148.785 311.613 147.155 313.324 147.204 315.387 cv
cp
132.819 263.759 mo
132.857 265.31 133.835 266.615 135.193 267.146 cv
135.193 299.543 li
135.244 300.74 135.685 301.81 136.5 302.693 cv
140.314 306.509 li
140.083 307.01 139.951 307.561 139.964 308.146 cv
140.014 310.209 141.726 311.84 143.789 311.789 cv
145.849 311.738 147.479 310.026 147.429 307.964 cv
147.38 305.902 145.666 304.273 143.605 304.324 cv
143.13 304.336 142.681 304.444 142.265 304.619 cv
138.42 300.773 li
138.237 300.656 137.862 299.753 137.91 299.543 cv
137.91 267.132 li
139.33 266.575 140.323 265.188 140.285 263.577 cv
140.234 261.516 138.522 259.886 136.46 259.936 cv
134.398 259.986 132.77 261.698 132.819 263.759 cv
cp
217.895 384.813 mo
217.947 386.873 219.658 388.504 221.718 388.453 cv
223.78 388.402 225.41 386.691 225.361 384.631 cv
225.349 384.129 225.234 383.657 225.044 383.225 cv
254.943 353.328 li
255.757 352.444 256.201 351.377 256.25 350.178 cv
256.25 294.593 li
256.201 294.382 256.574 293.478 256.755 293.364 cv
294.199 255.92 li
294.313 255.738 295.217 255.363 295.427 255.412 cv
333.105 255.412 li
333.663 256.831 335.048 257.826 336.66 257.787 cv
338.722 257.736 340.352 256.023 340.302 253.962 cv
340.251 251.901 338.541 250.271 336.479 250.321 cv
334.929 250.36 333.623 251.337 333.092 252.696 cv
295.427 252.696 li
294.229 252.743 293.16 253.186 292.279 254 cv
254.835 291.443 li
254.021 292.327 253.579 293.394 253.532 294.593 cv
253.532 350.178 li
253.579 350.389 253.206 351.291 253.021 351.406 cv
223.119 381.31 li
222.634 381.096 222.101 380.975 221.538 380.988 cv
219.474 381.039 217.846 382.75 217.895 384.813 cv
cp
270.573 360.149 mo
270.623 362.21 272.335 363.842 274.396 363.791 cv
276.457 363.74 278.086 362.027 278.037 359.967 cv
277.998 358.377 276.968 357.055 275.555 356.551 cv
275.555 300.93 li
275.506 300.719 275.88 299.813 276.063 299.698 cv
290.714 285.048 li
293.062 287.396 li
292.849 287.881 292.727 288.414 292.741 288.979 cv
292.791 291.041 294.502 292.67 296.563 292.622 cv
298.625 292.571 300.255 290.858 300.205 288.798 cv
300.154 286.736 298.442 285.105 296.381 285.156 cv
295.881 285.169 295.408 285.282 294.977 285.471 cv
292.582 283.076 li
292.068 282.563 291.386 282.302 290.713 282.304 cv
290.046 282.302 289.36 282.56 288.846 283.076 cv
274.144 297.778 li
273.33 298.66 272.886 299.729 272.841 300.93 cv
272.841 356.63 li
271.478 357.213 270.535 358.576 270.573 360.149 cv
cp
352.179 305.168 mo
352.228 307.229 353.941 308.859 356.001 308.809 cv
357.552 308.77 358.856 307.793 359.388 306.436 cv
383.933 306.436 li
385.134 306.386 386.201 305.945 387.083 305.129 cv
417.399 274.813 li
418.214 273.931 418.655 272.865 418.704 271.665 cv
418.704 265.412 li
420.123 264.854 421.117 263.468 421.078 261.856 cv
421.029 259.795 419.316 258.165 417.254 258.214 cv
415.193 258.266 413.564 259.977 413.614 262.038 cv
413.651 263.588 414.629 264.895 415.99 265.426 cv
415.99 271.665 li
416.035 271.876 415.663 272.779 415.479 272.894 cv
385.164 303.209 li
385.048 303.391 384.144 303.766 383.933 303.719 cv
359.375 303.719 li
358.818 302.299 357.431 301.305 355.82 301.345 cv
353.757 301.395 352.128 303.105 352.179 305.168 cv
cp
242.813 252.207 mo
253.982 241.037 li
254.527 241.323 255.14 241.493 255.798 241.477 cv
257.861 241.426 259.49 239.714 259.441 237.653 cv
259.39 235.592 257.677 233.962 255.617 234.012 cv
253.556 234.062 251.925 235.774 251.976 237.835 cv
251.986 238.238 252.075 238.617 252.202 238.978 cv
241.082 250.099 li
240.519 249.785 239.875 249.601 239.185 249.617 cv
237.125 249.668 235.496 251.378 235.544 253.439 cv
235.593 255.502 237.306 257.132 239.368 257.083 cv
241.428 257.032 243.058 255.318 243.009 253.257 cv
243 252.888 242.921 252.542 242.813 252.207 cv
cp
279.769 255.402 mo
279.718 253.341 278.007 251.711 275.945 251.761 cv
273.884 251.812 272.254 253.522 272.303 255.584 cv
272.32 256.312 272.554 256.979 272.927 257.545 cv
248.619 281.854 li
248.505 282.037 247.601 282.41 247.389 282.364 cv
212.417 282.364 li
212.207 282.41 211.303 282.037 211.189 281.854 cv
204.291 274.958 li
204.109 274.843 203.736 273.939 203.781 273.728 cv
203.781 254.481 li
203.736 254.27 204.109 253.367 204.291 253.252 cv
224.913 232.63 li
225.45 232.908 226.054 233.073 226.703 233.058 cv
228.764 233.007 230.394 231.294 230.343 229.233 cv
230.294 227.172 228.582 225.542 226.521 225.593 cv
224.459 225.643 222.83 227.354 222.88 229.416 cv
222.889 229.829 222.982 230.217 223.115 230.586 cv
202.371 251.333 li
201.556 252.213 201.114 253.28 201.067 254.481 cv
201.066 273.728 li
201.114 274.927 201.556 275.995 202.371 276.878 cv
209.267 283.775 li
210.151 284.59 211.218 285.031 212.417 285.079 cv
247.389 285.079 li
248.587 285.031 249.658 284.59 250.538 283.775 cv
275.195 259.118 li
275.496 259.188 275.804 259.234 276.126 259.227 cv
278.188 259.175 279.818 257.463 279.769 255.402 cv
cp
292.789 299.284 mo
292.839 301.347 294.551 302.977 296.612 302.926 cv
297.113 302.914 297.586 302.8 298.019 302.61 cv
300.591 305.184 li
301.475 305.998 302.542 306.441 303.742 306.488 cv
336.166 306.49 li
336.722 307.908 338.108 308.903 339.72 308.863 cv
341.781 308.813 343.41 307.1 343.361 305.039 cv
343.312 302.979 341.599 301.349 339.537 301.397 cv
337.987 301.437 336.681 302.414 336.152 303.773 cv
303.742 303.773 li
303.531 303.822 302.626 303.447 302.511 303.263 cv
299.933 300.683 li
300.146 300.199 300.267 299.666 300.253 299.102 cv
300.203 297.041 298.491 295.41 296.43 295.461 cv
294.368 295.511 292.739 297.223 292.789 299.284 cv
cp
253.384 262.658 mo
253.371 262.158 253.258 261.686 253.069 261.254 cv
264.346 249.977 li
264.83 250.189 265.364 250.311 265.927 250.297 cv
267.989 250.247 269.619 248.534 269.57 246.473 cv
269.519 244.412 267.807 242.782 265.746 242.833 cv
263.685 242.882 262.054 244.593 262.103 246.655 cv
262.117 247.155 262.23 247.629 262.419 248.061 cv
251.141 259.338 li
250.658 259.126 250.125 259.004 249.56 259.018 cv
247.5 259.069 245.869 260.78 245.919 262.841 cv
245.97 264.902 247.681 266.533 249.742 266.482 cv
251.803 266.433 253.433 264.719 253.384 262.658 cv
cp
376.279 162.078 mo
376.279 160.016 374.608 158.344 372.546 158.344 cv
370.963 158.344 369.621 159.331 369.076 160.72 cv
359.8 160.72 li
359.589 160.768 358.687 160.393 358.572 160.209 cv
334.522 136.161 li
333.639 135.347 332.57 134.904 331.371 134.856 cv
320.474 134.856 li
320.263 134.904 319.361 134.528 319.244 134.346 cv
306.875 121.977 li
305.993 121.161 304.923 120.718 303.723 120.67 cv
231.856 120.67 li
230.658 120.718 229.589 121.161 228.708 121.975 cv
214.324 136.359 li
214.208 136.542 213.306 136.915 213.093 136.868 cv
197.357 136.868 li
196.156 136.915 195.089 137.358 194.207 138.172 cv
179.786 152.593 li
179.275 152.351 178.709 152.209 178.107 152.224 cv
176.046 152.274 174.417 153.985 174.465 156.046 cv
174.517 158.108 176.228 159.739 178.289 159.688 cv
180.351 159.639 181.98 157.925 181.931 155.864 cv
181.919 155.404 181.814 154.971 181.652 154.569 cv
196.128 140.093 li
196.243 139.91 197.146 139.535 197.357 139.583 cv
213.093 139.583 li
214.296 139.535 215.363 139.094 216.244 138.278 cv
230.628 123.896 li
230.742 123.712 231.646 123.34 231.856 123.387 cv
303.723 123.387 li
303.933 123.34 304.837 123.712 304.954 123.896 cv
317.323 136.266 li
318.206 137.081 319.273 137.523 320.474 137.571 cv
331.371 137.571 li
331.582 137.523 332.486 137.898 332.601 138.081 cv
356.65 162.13 li
357.533 162.944 358.599 163.388 359.8 163.434 cv
369.076 163.434 li
369.619 164.824 370.963 165.811 372.546 165.811 cv
374.608 165.811 376.279 164.14 376.279 162.078 cv
cp
421.078 249.776 mo
421.041 248.227 420.063 246.922 418.704 246.391 cv
418.704 228.525 li
418.655 227.324 418.214 226.256 417.4 225.375 cv
411.521 219.495 li
411.335 219.381 410.962 218.477 411.011 218.265 cv
411.011 195.037 li
410.962 193.836 410.521 192.768 409.707 191.886 cv
388.633 170.814 li
388.833 170.355 388.949 169.851 388.949 169.318 cv
388.949 167.256 387.279 165.585 385.216 165.585 cv
383.154 165.585 381.484 167.256 381.484 169.318 cv
381.484 171.379 383.154 173.052 385.216 173.052 cv
385.75 173.052 386.255 172.936 386.714 172.734 cv
407.787 193.807 li
407.968 193.923 408.342 194.826 408.294 195.037 cv
408.294 218.265 li
408.342 219.465 408.787 220.533 409.6 221.415 cv
415.48 227.294 li
415.662 227.409 416.035 228.313 415.99 228.525 cv
415.99 246.403 li
414.57 246.96 413.574 248.346 413.614 249.958 cv
413.664 252.021 415.375 253.651 417.437 253.601 cv
419.498 253.55 421.128 251.837 421.078 249.776 cv
cp
317.678 275.866 mo
317.728 277.928 319.439 279.558 321.501 279.508 cv
323.258 279.465 324.691 278.21 325.048 276.566 cv
344.564 276.566 li
345.763 276.52 346.832 276.077 347.714 275.263 cv
364.228 258.75 li
365.041 257.866 365.484 256.799 365.531 255.6 cv
365.532 213.138 li
365.484 212.925 365.859 212.023 366.041 211.907 cv
377.548 200.4 li
377.964 200.559 378.41 200.655 378.88 200.655 cv
380.943 200.655 382.615 198.984 382.615 196.922 cv
382.615 194.86 380.943 193.189 378.88 193.189 cv
376.818 193.189 375.148 194.86 375.148 196.922 cv
375.148 197.515 375.298 198.067 375.544 198.565 cv
364.121 209.989 li
363.307 210.87 362.863 211.938 362.817 213.138 cv
362.817 255.6 li
362.863 255.81 362.49 256.714 362.307 256.829 cv
345.793 273.343 li
345.679 273.524 344.775 273.898 344.564 273.851 cv
324.59 273.851 li
323.919 272.745 322.705 272.009 321.32 272.043 cv
319.257 272.093 317.627 273.804 317.678 275.866 cv
cp
405.86 233.293 mo
401.591 229.025 li
401.75 228.611 401.847 228.165 401.847 227.695 cv
401.847 225.633 400.175 223.961 398.113 223.961 cv
396.052 223.961 394.379 225.633 394.379 227.695 cv
394.379 229.757 396.052 231.428 398.113 231.428 cv
398.706 231.428 399.259 231.277 399.757 231.031 cv
403.94 235.214 li
404.123 235.33 404.496 236.231 404.45 236.443 cv
404.45 267.139 li
404.496 267.351 404.123 268.252 403.94 268.367 cv
378.489 293.818 li
378.375 294.002 377.472 294.377 377.258 294.328 cv
314.267 294.328 li
314.16 292.32 312.482 290.748 310.458 290.797 cv
308.396 290.848 306.767 292.559 306.818 294.621 cv
306.868 296.682 308.58 298.313 310.64 298.264 cv
311.699 298.236 312.637 297.768 313.299 297.045 cv
377.258 297.045 li
378.459 296.997 379.527 296.553 380.409 295.74 cv
405.86 270.289 li
406.675 269.406 407.116 268.338 407.164 267.139 cv
407.164 236.443 li
407.116 235.244 406.675 234.175 405.86 233.293 cv
cp
174.96 302.188 mo
175.145 302.303 175.519 303.207 175.471 303.418 cv
175.469 334.194 li
174.05 334.751 173.056 336.137 173.097 337.748 cv
173.145 339.811 174.857 341.441 176.917 341.391 cv
178.98 341.34 180.61 339.629 180.56 337.567 cv
180.522 336.018 179.544 334.712 178.185 334.18 cv
178.185 303.418 li
178.138 302.219 177.695 301.15 176.882 300.269 cv
162.177 285.563 li
161.996 285.45 161.623 284.545 161.669 284.335 cv
161.669 237.946 li
163.087 237.388 164.082 236.002 164.042 234.39 cv
163.994 232.33 162.281 230.699 160.218 230.75 cv
158.158 230.8 156.529 232.511 156.578 234.572 cv
156.617 236.123 157.593 237.428 158.953 237.96 cv
158.953 284.335 li
159 285.536 159.444 286.603 160.257 287.485 cv
174.96 302.188 li
cp
161.443 202.431 mo
161.443 193 li
161.394 192.789 161.769 191.885 161.953 191.77 cv
201.545 152.177 li
201.66 151.997 202.564 151.622 202.773 151.67 cv
213.413 151.67 li
213.97 153.089 215.355 154.083 216.968 154.044 cv
219.029 153.994 220.658 152.281 220.609 150.22 cv
220.558 148.159 218.847 146.529 216.787 146.58 cv
215.236 146.618 213.93 147.596 213.398 148.955 cv
202.773 148.955 li
201.574 149.001 200.506 149.444 199.623 150.258 cv
160.031 189.85 li
159.216 190.733 158.773 191.8 158.728 193 cv
158.725 202.597 li
157.428 203.207 156.542 204.537 156.578 206.063 cv
156.628 208.125 158.34 209.755 160.402 209.705 cv
162.462 209.655 164.092 207.942 164.042 205.88 cv
164.002 204.249 162.915 202.901 161.443 202.431 cv
cp
215.097 347.604 mo
215.085 347.104 214.97 346.63 214.783 346.199 cv
231.675 329.305 li
232.162 329.518 232.695 329.64 233.258 329.625 cv
235.32 329.574 236.949 327.862 236.899 325.801 cv
236.849 323.74 235.137 322.109 233.077 322.16 cv
231.014 322.211 229.384 323.922 229.435 325.983 cv
229.449 326.484 229.562 326.959 229.75 327.39 cv
212.856 344.283 li
212.373 344.07 211.838 343.948 211.275 343.963 cv
209.212 344.014 207.583 345.725 207.634 347.787 cv
207.684 349.848 209.396 351.479 211.457 351.428 cv
213.517 351.377 215.147 349.664 215.097 347.604 cv
cp
187.934 298.418 mo
188.118 298.531 188.49 299.436 188.443 299.646 cv
188.441 343.445 li
187.023 344.005 186.027 345.389 186.068 347 cv
186.119 349.063 187.83 350.693 189.89 350.643 cv
191.951 350.594 193.582 348.88 193.533 346.819 cv
193.495 345.27 192.517 343.963 191.16 343.434 cv
191.16 299.646 li
191.113 298.443 190.667 297.378 189.854 296.497 cv
175.302 281.944 li
175.119 281.83 174.745 280.926 174.795 280.715 cv
174.795 249.906 li
174.745 249.695 175.119 248.792 175.302 248.676 cv
204.748 219.231 li
205.234 219.444 205.766 219.566 206.331 219.551 cv
208.391 219.501 210.019 217.788 209.97 215.727 cv
209.921 213.666 208.208 212.037 206.146 212.087 cv
204.085 212.137 202.457 213.849 202.505 215.909 cv
202.519 216.41 202.632 216.884 202.822 217.317 cv
173.38 246.756 li
172.569 247.64 172.125 248.706 172.077 249.906 cv
172.077 280.715 li
172.125 281.914 172.569 282.981 173.38 283.864 cv
187.934 298.418 li
cp
203.076 352.444 mo
203.076 315.183 li
203.029 314.971 203.402 314.068 203.585 313.953 cv
213.31 304.229 li
213.425 304.045 214.328 303.672 214.538 303.719 cv
235.148 303.719 li
235.706 305.139 237.092 306.134 238.704 306.094 cv
240.765 306.043 242.395 304.33 242.345 302.27 cv
242.294 300.209 240.583 298.579 238.521 298.629 cv
236.971 298.667 235.666 299.645 235.134 301.004 cv
214.538 301.004 li
213.338 301.051 212.273 301.494 211.388 302.307 cv
201.664 312.033 li
200.851 312.916 200.406 313.982 200.361 315.183 cv
200.357 352.459 li
198.939 353.016 197.945 354.4 197.984 356.012 cv
198.035 358.074 199.746 359.705 201.808 359.654 cv
203.87 359.604 205.498 357.892 205.449 355.831 cv
205.411 354.281 204.433 352.975 203.076 352.444 cv
cp
331.477 245.251 mo
331.465 244.751 331.352 244.278 331.162 243.847 cv
341.64 233.369 li
342.125 233.582 342.658 233.704 343.222 233.689 cv
345.283 233.639 346.914 231.926 346.863 229.865 cv
346.814 227.804 345.101 226.174 343.041 226.225 cv
340.978 226.276 339.349 227.986 339.399 230.047 cv
339.412 230.548 339.525 231.021 339.714 231.454 cv
329.236 241.93 li
328.751 241.719 328.219 241.597 327.654 241.611 cv
325.593 241.661 323.963 243.372 324.013 245.433 cv
324.064 247.495 325.775 249.125 327.837 249.075 cv
329.898 249.025 331.529 247.312 331.477 245.251 cv
cp
163.025 309.525 mo
163.025 322.43 li
161.608 322.984 160.613 324.371 160.65 325.983 cv
160.701 328.046 162.412 329.676 164.474 329.625 cv
166.536 329.574 168.166 327.862 168.117 325.801 cv
168.079 324.251 167.1 322.947 165.742 322.415 cv
165.742 309.525 li
165.695 308.328 165.251 307.259 164.439 306.377 cv
151.769 293.709 li
151.586 293.594 151.214 292.692 151.261 292.48 cv
151.261 229.882 li
151.214 229.671 151.586 228.767 151.769 228.651 cv
158.82 221.604 li
159.305 221.815 159.837 221.937 160.402 221.923 cv
162.462 221.873 164.092 220.16 164.042 218.099 cv
163.994 216.038 162.281 214.408 160.218 214.458 cv
158.158 214.508 156.529 216.22 156.578 218.281 cv
156.59 218.782 156.705 219.256 156.894 219.688 cv
149.849 226.733 li
149.036 227.615 148.593 228.682 148.548 229.882 cv
148.548 292.48 li
148.593 293.679 149.036 294.749 149.849 295.63 cv
162.516 308.297 li
162.699 308.412 163.074 309.314 163.025 309.525 cv
cp
313.318 283.298 mo
307.287 277.266 li
307.5 276.782 307.621 276.248 307.607 275.684 cv
307.556 273.623 305.845 271.993 303.784 272.043 cv
301.722 272.093 300.091 273.804 300.142 275.866 cv
300.193 277.928 301.905 279.558 303.966 279.508 cv
304.466 279.496 304.941 279.381 305.373 279.192 cv
311.398 285.218 li
312.281 286.033 313.349 286.475 314.548 286.522 cv
346.003 286.522 li
346.56 287.941 347.946 288.937 349.558 288.898 cv
351.619 288.847 353.249 287.135 353.199 285.074 cv
353.149 283.012 351.437 281.383 349.375 281.433 cv
347.826 281.471 346.519 282.449 345.99 283.807 cv
314.548 283.807 li
314.337 283.855 313.433 283.481 313.318 283.298 cv
cp
246.971 346.105 mo
246.971 329.356 li
248.39 328.799 249.382 327.414 249.343 325.801 cv
249.293 323.74 247.582 322.109 245.521 322.16 cv
243.46 322.211 241.83 323.922 241.879 325.983 cv
241.917 327.535 242.896 328.841 244.253 329.371 cv
244.253 346.105 li
244.302 346.314 243.929 347.219 243.746 347.334 cv
222.706 368.373 li
222.592 368.555 221.689 368.928 221.476 368.883 cv
190.103 368.883 li
189.892 368.928 188.989 368.555 188.875 368.373 cv
167.991 347.488 li
168.205 347.005 168.326 346.473 168.312 345.908 cv
168.261 343.848 166.55 342.216 164.489 342.267 cv
162.427 342.317 160.798 344.029 160.849 346.09 cv
160.897 348.152 162.609 349.783 164.669 349.732 cv
165.17 349.721 165.644 349.606 166.078 349.417 cv
186.953 370.293 li
187.835 371.107 188.904 371.55 190.103 371.597 cv
221.476 371.597 li
222.677 371.55 223.744 371.107 224.627 370.293 cv
245.666 349.254 li
246.48 348.371 246.923 347.304 246.971 346.105 cv
cp
171.677 166.12 mo
171.625 164.058 169.915 162.428 167.852 162.479 cv
165.791 162.529 164.162 164.24 164.21 166.301 cv
164.224 166.801 164.335 167.275 164.527 167.708 cv
147.361 184.873 li
146.547 185.756 146.103 186.823 146.056 188.023 cv
146.056 211.024 li
146.103 211.237 145.73 212.138 145.546 212.254 cv
136.5 221.303 li
135.687 222.184 135.244 223.251 135.195 224.452 cv
135.193 245.749 li
133.776 246.306 132.781 247.691 132.819 249.304 cv
132.871 251.365 134.583 252.996 136.642 252.946 cv
138.704 252.896 140.333 251.183 140.285 249.122 cv
140.248 247.573 139.27 246.268 137.913 245.736 cv
137.913 224.452 li
137.864 224.24 138.239 223.336 138.42 223.22 cv
147.468 214.174 li
148.281 213.293 148.725 212.224 148.771 211.024 cv
148.771 188.023 li
148.725 187.811 149.099 186.909 149.281 186.792 cv
166.453 169.623 li
166.937 169.835 167.469 169.957 168.034 169.944 cv
170.095 169.893 171.726 168.18 171.677 166.12 cv
cp
315.791 245.251 mo
315.778 244.751 315.664 244.278 315.475 243.847 cv
325.952 233.368 li
326.437 233.582 326.97 233.704 327.535 233.689 cv
329.596 233.639 331.226 231.926 331.175 229.865 cv
331.125 227.804 329.414 226.174 327.353 226.225 cv
325.291 226.276 323.662 227.986 323.711 230.047 cv
323.724 230.548 323.837 231.021 324.027 231.454 cv
313.548 241.93 li
313.064 241.719 312.531 241.597 311.966 241.611 cv
309.905 241.661 308.275 243.372 308.326 245.433 cv
308.375 247.495 310.087 249.125 312.148 249.075 cv
314.21 249.025 315.839 247.312 315.791 245.251 cv
cp
353.086 226.714 mo
353.086 247.31 li
351.667 247.866 350.673 249.251 350.712 250.864 cv
350.761 252.926 352.474 254.556 354.536 254.506 cv
356.597 254.456 358.226 252.742 358.176 250.681 cv
358.139 249.132 357.162 247.826 355.802 247.295 cv
355.802 226.714 li
355.753 225.513 355.313 224.446 354.497 223.563 cv
348.392 217.46 li
347.511 216.644 346.443 216.201 345.242 216.155 cv
303.969 216.155 li
303.378 214.808 302.021 213.88 300.46 213.918 cv
298.399 213.969 296.769 215.68 296.82 217.741 cv
296.87 219.803 298.582 221.434 300.642 221.384 cv
302.244 221.344 303.574 220.298 304.07 218.869 cv
345.242 218.869 li
345.455 218.822 346.357 219.197 346.471 219.379 cv
352.579 225.483 li
352.76 225.599 353.134 226.503 353.086 226.714 cv
cp
223.324 355.831 mo
223.311 355.329 223.198 354.855 223.007 354.426 cv
231.673 345.758 li
232.161 345.972 232.695 346.093 233.258 346.078 cv
235.32 346.027 236.949 344.316 236.899 342.254 cv
236.849 340.193 235.137 338.563 233.077 338.613 cv
231.014 338.664 229.384 340.377 229.435 342.438 cv
229.449 342.938 229.562 343.411 229.75 343.843 cv
221.084 352.51 li
220.598 352.299 220.064 352.176 219.501 352.188 cv
217.439 352.24 215.809 353.951 215.859 356.012 cv
215.908 358.074 217.621 359.705 219.683 359.654 cv
221.744 359.604 223.373 357.892 223.324 355.831 cv
cp
255.998 145.786 mo
293.428 145.786 li
293.64 145.74 294.543 146.112 294.658 146.295 cv
321.392 173.03 li
321.179 173.516 321.058 174.048 321.072 174.613 cv
321.123 176.674 322.833 178.306 324.896 178.255 cv
326.957 178.204 328.586 176.492 328.537 174.431 cv
328.486 172.37 326.774 170.74 324.712 170.79 cv
324.212 170.802 323.74 170.917 323.308 171.105 cv
296.579 144.376 li
295.697 143.561 294.628 143.12 293.428 143.07 cv
255.977 143.07 li
255.417 141.659 254.035 140.67 252.427 140.709 cv
250.365 140.76 248.734 142.471 248.787 144.532 cv
248.835 146.594 250.548 148.225 252.609 148.174 cv
254.164 148.136 255.47 147.151 255.998 145.786 cv
cp
363.382 195.564 mo
363.382 196.217 363.564 196.821 363.857 197.354 cv
354.391 206.821 li
354.277 207.003 353.375 207.378 353.161 207.33 cv
318.086 207.33 li
317.529 205.911 316.143 204.917 314.531 204.955 cv
312.469 205.006 310.839 206.717 310.89 208.777 cv
310.94 210.84 312.652 212.471 314.712 212.421 cv
316.263 212.382 317.568 211.405 318.1 210.045 cv
353.161 210.045 li
354.362 209.998 355.43 209.555 356.312 208.74 cv
365.957 199.096 li
366.324 199.216 366.708 199.298 367.115 199.298 cv
369.177 199.298 370.849 197.626 370.849 195.564 cv
370.849 193.502 369.177 191.832 367.115 191.832 cv
365.053 191.832 363.382 193.502 363.382 195.564 cv
cp
342.035 193.904 mo
333.597 185.468 li
333.81 184.983 333.931 184.45 333.917 183.886 cv
333.868 181.824 332.156 180.194 330.094 180.245 cv
328.033 180.295 326.404 182.006 326.453 184.067 cv
326.503 186.129 328.215 187.76 330.277 187.709 cv
330.777 187.697 331.251 187.583 331.683 187.394 cv
340.114 195.825 li
340.997 196.637 342.064 197.08 343.263 197.128 cv
351.065 197.128 li
351.658 198.406 352.943 199.298 354.445 199.298 cv
356.507 199.298 358.177 197.626 358.177 195.564 cv
358.177 193.502 356.507 191.832 354.445 191.832 cv
352.787 191.832 351.398 192.918 350.911 194.414 cv
343.263 194.414 li
343.052 194.46 342.149 194.088 342.035 193.904 cv
cp
207.634 327.626 mo
207.684 329.688 209.396 331.32 211.457 331.27 cv
213.517 331.219 215.147 329.506 215.097 327.443 cv
215.085 326.943 214.97 326.471 214.783 326.039 cv
224.966 315.854 li
225.082 315.674 225.985 315.297 226.197 315.346 cv
242.148 315.346 li
242.705 316.765 244.091 317.76 245.704 317.72 cv
247.764 317.67 249.394 315.957 249.343 313.896 cv
249.293 311.836 247.582 310.205 245.521 310.255 cv
243.97 310.295 242.666 311.271 242.133 312.631 cv
226.197 312.631 li
224.999 312.678 223.93 313.12 223.046 313.934 cv
212.857 324.124 li
212.373 323.912 211.838 323.791 211.275 323.804 cv
209.212 323.854 207.583 325.564 207.634 327.626 cv
cp
274.068 181.368 mo
293.562 200.86 li
293.349 201.345 293.228 201.878 293.241 202.443 cv
293.291 204.505 295.003 206.136 297.065 206.085 cv
299.126 206.034 300.755 204.321 300.706 202.26 cv
300.656 200.2 298.943 198.57 296.882 198.621 cv
296.382 198.632 295.909 198.746 295.477 198.935 cv
275.989 179.447 li
275.806 179.331 275.431 178.427 275.479 178.217 cv
275.478 158.753 li
276.897 158.197 277.893 156.811 277.854 155.198 cv
277.803 153.136 276.09 151.507 274.031 151.558 cv
271.968 151.607 270.338 153.319 270.388 155.38 cv
270.426 156.931 271.404 158.236 272.763 158.768 cv
272.763 178.217 li
272.812 179.417 273.253 180.483 274.068 181.368 cv
cp
287.242 166.485 mo
307.662 186.902 li
307.509 187.323 307.423 187.776 307.435 188.25 cv
307.484 190.312 309.197 191.942 311.258 191.893 cv
313.32 191.841 314.949 190.128 314.9 188.068 cv
314.849 186.006 313.137 184.376 311.076 184.427 cv
310.488 184.441 309.943 184.603 309.455 184.856 cv
289.152 164.553 li
289.362 164.07 289.482 163.539 289.468 162.979 cv
289.418 160.917 287.705 159.288 285.644 159.338 cv
283.583 159.389 281.953 161.099 282.003 163.161 cv
282.054 165.223 283.765 166.853 285.827 166.803 cv
286.331 166.791 286.808 166.677 287.242 166.485 cv
cp
316.098 178.376 mo
301.619 163.896 li
301.832 163.412 301.955 162.879 301.939 162.314 cv
301.889 160.253 300.177 158.624 298.116 158.673 cv
296.055 158.724 294.425 160.435 294.476 162.496 cv
294.526 164.558 296.237 166.189 298.298 166.139 cv
298.798 166.126 299.273 166.013 299.705 165.823 cv
314.132 180.25 li
313.894 180.757 313.755 181.318 313.769 181.915 cv
313.819 183.977 315.532 185.608 317.593 185.558 cv
319.654 185.507 321.284 183.794 321.234 181.733 cv
321.183 179.672 319.472 178.042 317.411 178.092 cv
316.945 178.104 316.505 178.21 316.098 178.376 cv
cp
305.498 197.375 mo
325.64 197.375 li
326.197 198.794 327.582 199.789 329.195 199.749 cv
331.255 199.699 332.885 197.986 332.835 195.925 cv
332.785 193.864 331.074 192.234 329.011 192.285 cv
327.462 192.323 326.158 193.301 325.626 194.658 cv
305.498 194.658 li
305.287 194.708 304.383 194.333 304.267 194.15 cv
289.072 178.955 li
289.284 178.469 289.406 177.936 289.393 177.372 cv
289.343 175.311 287.63 173.681 285.569 173.73 cv
283.508 173.781 281.878 175.493 281.928 177.553 cv
281.979 179.615 283.69 181.247 285.751 181.196 cv
286.252 181.184 286.726 181.07 287.158 180.88 cv
302.346 196.068 li
303.229 196.884 304.296 197.327 305.498 197.375 cv
cp
180.125 184.327 mo
180.136 184.827 180.251 185.302 180.439 185.734 cv
172.25 193.923 li
171.436 194.806 170.993 195.875 170.946 197.073 cv
170.944 225.504 li
169.593 226.091 168.66 227.45 168.698 229.014 cv
168.748 231.076 170.462 232.707 172.521 232.657 cv
174.583 232.605 176.212 230.893 176.164 228.832 cv
176.125 227.236 175.083 225.909 173.662 225.41 cv
173.662 197.073 li
173.613 196.862 173.986 195.958 174.169 195.843 cv
182.365 187.647 li
182.851 187.861 183.382 187.982 183.948 187.968 cv
186.01 187.918 187.638 186.205 187.589 184.144 cv
187.539 182.083 185.828 180.453 183.767 180.503 cv
181.705 180.553 180.076 182.265 180.125 184.327 cv
cp
189.24 279.359 mo
201.886 292.007 li
202.769 292.82 203.835 293.262 205.035 293.311 cv
235.169 293.311 li
235.744 294.697 237.116 295.661 238.704 295.622 cv
240.765 295.572 242.395 293.859 242.345 291.798 cv
242.294 289.736 240.583 288.106 238.521 288.158 cv
236.949 288.195 235.632 289.205 235.117 290.595 cv
205.035 290.595 li
204.827 290.643 203.923 290.268 203.808 290.085 cv
191.162 277.439 li
190.977 277.325 190.603 276.421 190.651 276.208 cv
190.651 267.365 li
192.059 266.802 193.043 265.42 193.004 263.816 cv
192.954 261.756 191.243 260.125 189.181 260.176 cv
187.121 260.226 185.491 261.937 185.54 263.998 cv
185.578 265.557 186.566 266.865 187.935 267.392 cv
187.935 276.208 li
187.985 277.41 188.427 278.476 189.24 279.359 cv
cp
207.317 174.695 mo
183.072 198.941 li
182.586 198.729 182.054 198.606 181.488 198.621 cv
179.427 198.67 177.797 200.381 177.846 202.443 cv
177.896 204.505 179.609 206.136 181.671 206.085 cv
183.732 206.034 185.361 204.321 185.312 202.26 cv
185.299 201.761 185.187 201.287 184.996 200.855 cv
209.239 176.615 li
209.353 176.432 210.255 176.057 210.466 176.106 cv
215.645 176.106 li
216.33 177.151 217.513 177.834 218.852 177.803 cv
220.916 177.751 222.543 176.039 222.495 173.977 cv
222.443 171.917 220.732 170.286 218.67 170.337 cv
216.873 170.381 215.405 171.689 215.091 173.39 cv
210.466 173.39 li
209.267 173.437 208.2 173.879 207.317 174.695 cv
cp
271.926 196.872 mo
285.731 210.678 li
285.46 211.212 285.299 211.809 285.313 212.449 cv
285.364 214.511 287.075 216.143 289.136 216.092 cv
291.199 216.041 292.829 214.329 292.779 212.268 cv
292.728 210.207 291.016 208.577 288.955 208.626 cv
288.534 208.637 288.138 208.732 287.763 208.87 cv
273.847 194.952 li
272.964 194.137 271.896 193.696 270.697 193.647 cv
231.434 193.647 li
230.812 192.374 229.5 191.506 227.99 191.542 cv
225.929 191.593 224.299 193.304 224.348 195.365 cv
224.399 197.427 226.11 199.058 228.171 199.008 cv
229.82 198.967 231.175 197.857 231.634 196.362 cv
270.697 196.362 li
270.908 196.316 271.809 196.691 271.926 196.872 cv
cp
221.689 160.21 mo
221.573 160.393 220.669 160.767 220.46 160.719 cv
207.298 160.719 li
206.099 160.767 205.031 161.209 204.15 162.025 cv
195.516 170.658 li
195.031 170.445 194.497 170.323 193.933 170.337 cv
191.872 170.388 190.242 172.099 190.291 174.16 cv
190.341 176.222 192.054 177.852 194.115 177.803 cv
196.175 177.751 197.806 176.039 197.755 173.977 cv
197.744 173.478 197.63 173.004 197.44 172.573 cv
206.069 163.943 li
206.184 163.761 207.087 163.387 207.298 163.436 cv
220.46 163.434 li
221.66 163.387 222.726 162.944 223.609 162.13 cv
237.892 147.848 li
238.379 148.064 238.917 148.188 239.485 148.174 cv
241.545 148.124 243.175 146.411 243.126 144.35 cv
243.077 142.289 241.365 140.659 239.302 140.709 cv
237.244 140.76 235.612 142.471 235.662 144.532 cv
235.674 145.028 235.787 145.497 235.972 145.925 cv
221.689 160.21 li
cp
217.383 223.676 mo
218.199 222.795 218.641 221.728 218.689 220.528 cv
218.689 195.038 li
218.681 193.576 217.507 192.402 216.045 192.396 cv
208.882 192.396 li
207.684 192.443 206.615 192.886 205.734 193.702 cv
183.072 216.363 li
182.586 216.15 182.054 216.028 181.488 216.042 cv
179.427 216.093 177.797 217.804 177.846 219.864 cv
177.896 221.927 179.609 223.557 181.671 223.507 cv
183.732 223.457 185.361 221.745 185.312 219.684 cv
185.299 219.182 185.185 218.709 184.996 218.277 cv
207.654 195.622 li
207.767 195.439 208.672 195.064 208.882 195.111 cv
215.972 195.111 li
215.972 220.528 li
216.019 220.74 215.645 221.642 215.462 221.758 cv
190.763 246.457 li
190.28 246.244 189.748 246.122 189.181 246.136 cv
187.121 246.187 185.491 247.897 185.54 249.958 cv
185.59 252.021 187.302 253.651 189.363 253.601 cv
191.423 253.55 193.054 251.837 193.004 249.776 cv
192.992 249.276 192.878 248.803 192.689 248.372 cv
217.383 223.676 li
cp
level3{
gsave
clp
[-124.667 -5.59712e-09 -5.59712e-09 124.667 272.363 245.667 ]ct
/1 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~zz!WW3#!rr?%"onZ(#QOo+#lt&,$31/.$ipG1%06P2&-2k5&HN%8&cr19'EJ@;'`nL<('4[?)$1!B)?C
$B)Zg0C*<?BF*WlWI*s)ZI+9MfJ+p%uL,Qe;P,m"AQ-3FMR-NaVS.0KqW.fp%X/-H7Z/HZ:Z/d)L]0*;
O]0E_^_1BRsa1^"0d2$=<f2?aHg2ZsKg3!B]j3s5um49Z/o4Tu8p4pDDq56VMs5R%Yt5m@f!6O!u"6j4
)$70a>'7KsA'7gBM(8-TV*9*Z".9Eu+/9aD:1:'VC3:C.U5:^@X5;@*p8;[=$:<!a0;<='9<~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [0.543956 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-124.667 -5.59712e-09 -5.59712e-09 124.667 272.363 245.667 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[0.00392157 0 ][0.00392157 0 ][0.00392157 0 ][0.00392157 0 ]]
/Samples[
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!#!WrQ0#7(SA#mq%K%1Wp\&J5Wh'GM8s(E")/)B0Y:
*?H7D+!DgQ,U=Z^-71)g.4Zo"/1iG+/h\k41,CaD2)R9M2`E`X4$,Pf4[)%o5<qJ"6:4+.77B[87n6*B
91qrP9hnGZ:Jand;H$Ln~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E3%!<E3%!<E3%!<E3%!WiE)!WiE)!WiE)!WiH+
!s/Q,!s8W-!s8W-!s8W-"9\i1"9\i1"9\i2"U,&5"U,&5"U,&6"pP89"pP89"pP;;#6tM?#RC\A#RC\A
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!"!<E3%!WiE)!WiH,"9\i1"9\i2"U,&5"U,)7"pP8
9"pP;;#RC\A#6tM?#mgnD#RLeD#mgnE#mq%J$O[:K$O[@O$k*OQ$k*RS%1NaU%1NdW%LrsY%M''\%hB0
]&J5Td&.fBb&eYfh~>
0 ]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
206.377 387.939 mo
208.438 387.889 210.15 389.519 210.201 391.58 cv
210.214 392.144 210.093 392.678 209.88 393.162 cv
218.912 402.192 li
219.726 403.074 220.17 404.143 220.217 405.342 cv
220.219 439.09 li
221.622 439.666 222.61 441.044 222.61 442.656 cv
222.61 444.787 220.884 446.514 218.751 446.514 cv
216.621 446.514 214.893 444.787 214.893 442.656 cv
214.893 440.965 215.988 439.544 217.5 439.021 cv
217.501 405.342 li
217.55 405.133 217.175 404.229 216.992 404.114 cv
207.965 395.088 li
207.535 395.277 207.06 395.392 206.559 395.404 cv
204.499 395.455 202.787 393.824 202.736 391.762 cv
202.685 389.701 204.316 387.99 206.377 387.939 cv
cp
level3{
gsave
clp
[-124.667 -5.59713e-09 -5.59713e-09 124.667 272.364 245.667 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-124.667 -5.59713e-09 -5.59713e-09 124.667 272.364 245.667 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 13.0.0%%For: (\620\716\620\754\601@\625\620) ()%%Title: (Artificial_Intelligence_2.eps)%%CreationDate: 2/13/18 10:04 PM%AI9_DataStream%Gb"-6m?/I2Q)8a/Gn9SGbt+%S%?KtNemtf'Wgr%nE_%.4ZWmr@/[-11@^d:i6_e:KX.,HjkIg9Rj&lOBctnRXBp$K\o#UUuE.>`c%LHh3!HueuXgK1#^I.bJ7l[Slt9c9juT9PhI*&l'GSj)u2DdWL]Mf5b2Gr?,\Gk7-Xfe@5hRHj/9ZXmLJbjoT*QFSVms8''?^O#G8%m4[A0rp7T_hje&'q>/>p5J9)Wl1qBLT0N@MIe*F!5JR!abLcc7F8+efci2\`PM;]]T3biQq;UuAbu`6KhQ5$-9Ue5R7=Xo'?)B67%^O>\!?@DP/\"CG1AR5)Mk<JjDIf'X=fKQ^XJ+_gggUbFJMl#jcq<.eRn+)M:oO`>kN5o2CqT$>;o2P5"0pH1e+#cF\Vr+VooXhNT%GlLQaq(5pe8<\tVo8c(Hf_g/frl\%3ES]^CcW8rp?bQ72q4$Pc?bUthpSmRUIJg$mG]WoE&'r#hnuX"^9q/3_q=_ifFUeB"bqHfN%KPt\#\mMm^h,-?u<VDfQ7m2Dfag4/0$\+3re'2]uq;j9uZ&-jm?\b+rWLo3@^V"(T5Jg1T7/Zo#='pIQr9XkB*V3C)eYS?"fiH;4%<Kct*F6k2eHZmX)?4Z!tRC;Kp+6m!sQg&,82Oi^t\!$CCT3o>-Q_2jgo@_;gDdS"c8'g+#^AQ1_cg@42^O#_5CFRs"nnd3E?0-)!%ci;tY042Bfc)[1L]i<edm-kbfr:T5+^>pPDbN6q1-oj<>m+#bDp%(+L]QdY]`To1l`VK<YG2,=Yqes7GO3dju!X4#C%K,5O(U&;d%qB'RhIkjaaZZTQ?S$e4J88BNXgmQ1TVG,1-F1L.D900sq2qEZTBEK4EkEB9(ZMob@0>Dc-lDNFRmF/gqoCDKRrjVE0pD5oG>.E>Y%d*m3I*r"Eu04$@`b4t5skA<BTjS\pW^4BYkn_:6rs6BDQAD4QJF0GI]pS.)qrU[MElf;VAk*s,6nZOlqIsR$13RiQ-K\(@clZ(kU%I+He]_L'P#'sICSRf(XX"\\_jl\`5f(9Vo$>jI9Xf(F(23faC7*!bUdl9?hJ*16%O0Gj`*/*8mb1"Z5[--p4OE^"!)b6=ME0'eCk%0,K"b\bIqoa1f=&5JBSd'MI`_WKmRt@P/W6?837V8Or'<iJ?u\H#Q/r`GmCUHs%F&?BN):i>$/!I.B/TM"$;^`]L'WR'9<2:#A.s%_K"NLo3<o8VXoF'pH8.SoN]860Bl!pHggk"qrV,'T'IA1%f_<pE-uoLRf!Tj;>Y!T`pf#!E-s^aSh%N+NXr<aiTU4;j43lD;t,[T%E-up'Zfn7(o@:=2/ZK4ecW,F9c@#XSf.iWTS+=OZh"Mk:mec,#oel&_q&K6dH#RjTR5d5Ym76Q9iqW##\\*=MpcM?"=hJ2b*8Tim%Q#+tkcT0m7QYr'sPnfQBm(&Gs0+4cr3iAS<^3?17^0T&Dm((DtNm7;=F(ssSG$j)jpOBp??8K8Oq`4D`nMOS<T9nG9gO5L=-`X;N%Ags?Ug%WpsEo5"]Q>U8)28,Plj`3EnfH]K'Q>X7,IF\=3]=qTYZBW3)iSCJ8phq/NPP4GEk1S5Nh>a$0=VdXXhYl??H+L]d^O>kK%^2)Ibs4uQ.-gfaih;*@f^&,Rn-hm@!V7lc@LBgVaGQ0V?5Nb&P*FA]WH<MbIYK&TIkBXVn?]^m%q-))Q;tmbfbO'b*g#qar[Kg^9%o,-fc@:"u]@=-YiID4L?F^G!"c\D>G-[:(!\bc2JWU%+NkM*[&3Fg1m(/t0Q>Pe8X2<6Ws^*[ZGH)Q'mf/$a?mI;q`Gl="RhtC1(%F*lDZ*a#<^Ok,B`BrR)O>AX-3M5Bao[.[/^]cPXCfUA/<jo]t2mGh?Q3/\jho&JP%4SgAYd[h])f:'3c%o;Q24k<Jk[EIO,c5>\j%ni68%NhhuLjmZNEf(?&5?\c4`RM0qT4^[\b92,(tHbSJmj=9`oC/).FBrT)@IQjMXk$uH'HWfne[V$oZ<p/]C*V3]2TE"Q*^3J=X%W\gAZc*s$t0@BKKgKLiKBuMGZRohUIqdQtnenWC1+&b<MLG+S+mGU]&EMU&:]%+LVlRg7_4&S.YX&$X)A,Ve#4^d*[:CHol7\><-%M,.*kr-3)5bOlP'5hW-dn7/Ukj*NX83/^lOB*u1MlNhMGB5YOh]j*%jFY#_;T348@(!!GkZu/*C^";Wj'6s/Mn(Ba0.@b<0/'8fI%+(r`WgHMsl<'P"U`,alAUr%-KRIbgQ*;pa?0%>:d;+LLG5Y:WhjP.N%=X.&RYjI>\K]hCHVdW<m\EhQ$37`Xl^e.7(_f]9fq(!73%NNKS_d8#VVYq@\Lg+P)ke*9l0"[#;GW)^(aTPk]pa#.go?@VnJEc0f_?g_ngNcVa?Sm!<R*!snRVYI^AFOoW_Q6k;W3lQ/tGn*a4%;sZ[@`q'=Uge/O9J1Y1njZ0cbE`>Uah-Vd`#5UC6cA_3$C+-5@[tiGVpZ2%`g@4U=p1U(<4;Xaqnu?#1n$-uhG<]HFgu@/aL\nQ\%[U@k4*IXZ!@m-FTqr6^9j^>2Yh%q^rSkGYBc4K?7DcoSd2-GCI[]pQ/@s9E=^<BReXgd6R8fl\KW7*.hFk_84Joe:^q"^qdkMeAT%5BA=9ldANXH6)3j$KZB@AN<qZ,?A,QqJHoB(qFBF)+X4bT7)t3k32(VT[p\CJ&h@KI/UK#ja=^NWc-_Y!RBQ\bMsKj>5@iIAa/]p%l]r;NDUu*d^9[RCrL?7^?WumMlQSgo3V?nVP1jXnT<%FKT6ot1ca,9rF1tDa'%LhNa?f`X/ULdOqs?gb*QoUeYU!ni%]Em9c+\[6%$`ulfhX=+l#@lQf[%VVqrD]p[&%.HX4tf(1](9/s%XXW5V-?+Q1BDfci3m7qNH8t6krE,t"&&OeD#7%EOR8U*(VKUno?.tUecC9t%);?aHOYa^>/YL)c4Y[\^KdD+@[hgEUc#IDlXOhO\QMed(YkGL9G"u,G@b>j;olf.ohS"?7>k=`^^#5;\Z0/hZ^ZM3%iOV0sI@0VO%pS1Y=o53I_NTD7'U[HrIkLJ.D:OG1h"o.,'N[7Q>=;IuM,A1pJ/N9&8(R>?-UUS:G?%I(2q-&.US,o4^`TqE6GM'@mTlNLgn0;q1%YiHh)X*.6^5MsN_5EB,d]i=5gi]3p_rTS*:Shin"<[2`n@UI]pIr"#7(X-HmgcOC;[]D5uqfbNTq"\X7LA=i@ct81+=8Z@ed+@9Q%g[CX4[`tNu=_Z:?$q=YeCT8Jj:T]Z@3osr/Y/$Re=/Yc[9B'^Fq<1V=KJMqQfQ&-VqIcS;b,*7N0mU?84O:4s0M7+!.d%t8bOb5S%p'gE(ZuR*eg2:b]e&l^sH\eHid_6[Pp,hBCkAna5S293LV#8<A"n,bj<'G]ShHI?e/WXK:GL+Og9?YR\^H(DsV'>)sC3I39@#qS"%p*TL]pHG0>qf-q_'RT'**F.q%OZB91Tpu36I1>jCHS0okB<:"B\)5^nhKdAS1KJn</JkcI"5;M\Y;GIQrJ>U\lV^K()>#^jBm[tb%F^MeILsT=`Zd>]"b'7,'3Djkg$o7'G4/tXo/8>YuT&W6c0BtLEIK_()MFsB\K25F[Z,@?KmeLR=Ya>d<VY=<0qO]q>XBaWP4>4oO%CqFf^]@\"1kb[26QE..eGtI,*`(6[:Wj5=DT@!o96lk:8]U#XuY->&m`UT7`F_T1J_L-H;/QOd3lkmp3W2#K5fMCg]ZmC"B.ZFI8%!km+S3SP;6@PqjcY17[M0lQNFTAGIR^80PsZlJf"eo@Zg/+#?qX+pZ!>UuD`c;`l,lA8[iNU>RDMt9e.mI^"HY=kS@+g*?dZdj+;%@jMe/n;cn$@f(B>pJs1n5$h30Mmj_2:L5)*-V<6<mV^blkI*%b2:_>(&l`XGEisHrq4QaP?+`T%<\5+ZDI^!&R,*'"[&5M%F%al`%[XEGq][o>^YC4`$?H2Le3'PiK\rO,)IdZJZn#U*,i9IFLoVGb`oBU$q^R\YqqE>]3[b"..,@ck=5,ms/rqMW/dU^,EA^;*@WWd!I%Rb*)0*W0c^,j#LBls:V/3o!T-j&""l\QsP]/lfY`2RIlc.t1JqD8gL!h'om0X4/<%Z%R/9[XE$RjA]r,n[`&5`*6I0HLJPK[;15+%9bjl'^0RpZXgED%iOK_W/Rj%Lp\+5:H26#T6qJ[X[#aV,/E[e^o:.I_7+Up::7s/49R;_mN-apf<<r-KSX(n[FDU>M,Z37^T.LjX%*K,<p\Q9:'A$p_VA^Shk?]TVMCTXroU]%lipNp+sQdf7AT?9SU7=?&h(3p'iGWqm-h8\!EeM"=BOL%+kXe+jKGrcc=D>,?A[<a`g%&(a>!8sFA$SStF#Ep%K5Hr%:44In-,Z,$[X)]_coXnI'D9?2GCf21"9[SmsVi`HTZX;ppsDu'0-fm;QIHJ>uRE$+8@O$HR%?UNN3%\8.p@\_"u5Y+=GtfD9^+N`iF7iipJ"_TuIl\JGkEp-LMLDoqcS0!6,ae)`*pP7I&LUMi<ffBYUA;kE(@fP2O=qf?QGKBJ;B6pC6g%*=K;'C\R%*r)$cQhJU/:MXSKY7SdqE]dkbLc1GFip@oY$CPl;ZO,lWT5HZIr2qda=>"bf"hnM63hjnQOHWi!CD'V_ABk!a#_aDmW%92G):>&E-R_E:hZa%+VomeM(NBuDQhLlM*"qE:s<F^!"e^;JM,iDF]W<Ve]IA"QOKc+]m-<73S^@C<=f^KR/pV6dSo4L.^BR\&c&%I?/"kkJ".RHhA_a^JqbtVRJ\^<d\/Mf]UZ.q:*#smCVQ*n*'M9CfCP?.G+Bep9sUcq>"rGA6q?HYk.hC;e<B0]Qqi<Q]JSYX_$^5%9(iFlnb:J_i;L_=T5T#0f:U]d40MX[dRAM?D2VNl'5JsZ&QsOs>^PAV[\).&O`RnCo8ZK!>>kk%P1jqWpGP2dh`e]KZHm4+G9a8I%/FJ>Uib5ASH2d9Qo62d'HacH4A)%H*pB6`34fW[$/]MTh\`DdpmmmBH-$Wd7H2hl2"R>rXWGh;gNr'(&[@O/^SbkYAXs9">e_?/+%1X#BN=<cYI<(Y>Y48V+3N@%HIo=h'9qg#l^htrDGH,l-CjHk6qn`-5`^9eL5n9^SW;ePCge*hk`*K0YTT3h@]TAmE;V7?[eg)^3;%kLRZqpW)Hc[B\1?L[00=o=/0'e/[q(O'MS?,uF4!*h=r(-.7jrB^a$;n^2TYr9e^oh.q98HbXDZDtdt)_k[1uEsR'jnOKa+f!4tn%i?NR;*k/%!IC.f*\>PAa6_@E./j?kcO1QM.2(]`oO@PErrU(m^h`&Tfhm'PJEZ:P,D8]n1pJE[$\A*9LO][Z.q2k=fH"U&0L2n@,%=Jj,cSb(mf3UWg:grE`?]\DQ(H]C/\I?41kEm;Xgc?9HQ?"H`UnWtc*2Y)q+^jTG`Z'#q5PgeO_I!VUMqk(S55%a<K4agS%Iu##3%T,=9=;R-+tkDpQVh8U[hT6H;Deem3,U9jBBPdQROU"GFn5rjKZH?qudhL3`-2okgP1#h[CF0$r@@^PgYrd15dh]lcJH06.e(Mb>g%EBa;^a8N`MOaDhN0]$Pi+),HL"cq&X^hk,C\LX"0^["&&^;"`LX7m@(XPL0I5I1.um9-oXM!>iFlTT2g`XIP)j7.p%fUk%@h02d]%k1u@nl!.720E*[dmq:uMF0$M3Z<\Z>TCn/FO/IHZdmi_#^=O:Ls"Ph^43F"O1L7)#r2K)`3I>Z(Ed-[?EIBa[qjlJj`uH\GTAFmY%QB-J=[qhRFh%/E;\DQu$_VD;jH`QD%e%9g.qT2Ois6aG;Ff_bEH_7QePes@ZT#11B^MD0Q4ic%?<_@1]b3_::kBB)HGJ8M(W'Bb)%#OM9,m<.OR19@&pn4WE<G^Sk)SF>c>/s5/rkic6i'Rp&\V*F2"QKFEc[M;=e'Q3FR1bM#Jq2RQjg?/0\D%<e%5OdLSfQYPrRQSi4%pjM`&l>m6krn$u==7H.&O\5Vr2m9uDrIo_:J(l?cHL^^`Y?d'qoV[3=]$C9F'iakThqKOUVn`0#g\T=T]QsJCf0=WTLY&FGh1#A"%pFgE5r<?UNnAWX*IfEb^I.m9S2a@/pM!oJb0>AIL>i3^h+n=<2ItF$e*A>1:)4j!@q=Tg+]?+E.#-\$Nc/"k-^\Qp7Y@#'DZEDtI%WbYpjo=K!Ir]A^(/N6`"rf;="k<.iBGWGYcEO$U4s3dOY:=mV:s+bdiQd=Rgn`K8_(U$%&-LG5Go;lfhrJr&+J*k-pXQ\oVIF-j$%>^Z4&=2(/"A`b[pNL0Yi*Oi6Oj)]C2DIY8*r*\4TDu0NPhn4C;c@>!ms2RlafM8'2J,/3L0A\hkqN!9oHe3`H#Hhs'h9mY-ioTV*%*mF@_mmfb8:LF)"op7>Hq5QNRJ';L's3fW2@o%ULI5ZQMo(ebY+76tWE_CEtD_mr%hmY)"WB\%Com%k\YJ,G\p-frl^#FL#mrl;<%eK:E5Xn>l2rbZK1J*V+rn"8V$UFq)k0E1J;bua9d=uQ@S?Lbf$LmH,XJ,Z[(n,[;BIl@fe5M=a<+2G`HT>,^Ok/O9B]DhSOnY\l[%ou2^Rrs,YUG'3Vf2McC;k9iJSNAl'b;M41OhE:i9ASk*=['"m!LO]6X>,K'P2cTa-?XQn'reG]IMcG/beH9.W(,*GCbPuidL**&e%&hCXE2q-%-kGNej%=Ak:bVu/AHM?Romn`qb(rM"RricpRE''S*!;fU^'cOIuPbkHm01WQ)GNHP$PY41*"lGt-0&o!1j"]DNGN3tM%_<NjNjYT\qH"tedmF1HE2k?lDl!_0I_d)>DT&t<)k&oPCI6Qf*q)mQ\&+a?MQElIm[*1BgqHpX;qH%lqYI02:I3%^YdJfSDRQpI+%gN0g<lX)"dQZug&OS+Lo(9^qjm!M7!i-FD^.e/m8Rp,>#/)KWtVUa=Vpp_@4L>.p*Sa5mm1>X,9iIR'eiM&h*+hl3is)rETRIGFV%YG(AeD>QQMf5o`tf^cQ=QgM(bQHOZDC0Xak_o(TpiSjdpr,DCLqf"[a&)5"uYWU,?e&1rW*mcS5E.<@e^;%9Eme?VGFMHZcp[e?*%5Mha<9:,7fq>Pb*hjn]3a*BmfkOlKXkOWd:c_V\ujmM*qrpG/XGB\CXh!K=?h.er^4^nr1DqM\.mGXTr(Pb.sgK3b/C3tnf`a2HL%kLfOg3ImAW4IkalE$/dT(`X"qkcf]V@H#"&4#e3$%WJ_+`*jElC>1E!Z\R2Jqm;^(T6IQL[qVJBhg=_gG)AZ6@4ZCPF#kQeQ4C%(%"0DC=MHT7\pP!_Lc*fd)[h2tU<bM3Xl'"p#4i?)7O-X+,Rq7%,*R";^`R>f/rgA8ff$3]#R$R90n]*O=]7$+$Z`QpU\E:!j46BGL%e^m_MCM`+Y>u0:C]DLNm#lO]2PkVomPP60N""093rTUbda*@9EdUT`+&s&<=XZgoT*-e"=$bp5.O'5\)n+f4;Yqg]>\@F-`)#9Qc%1#$3s@m/@Wm#Sh\C-6mWri`W#<r%*l5ua$=@#n3:JB)2]9)+:#V8?]DaOj7Q*-`IrJXs\>n?6lQ.eJE#XOio`SU0P!"Bt)#XcKSJ%pA-c6itgCO$f.HErCElo[:5nWO0u!_dP$=Tq_"TM"s!MG?2qT$*ZcrlWDu5`9N9KkC@Qa5:<4QYrd_l[r+C\^=&2!1G\haII/(fJ%gV]$i1oOBo"V1PZHRu\\T'?K'YE-RBGI<C"mDA2HCP;"M]cbu#f>dX9.kn-B]9T$NA0ip3Y>Sld,Kr!:l@g(AiiQOE;8@-*Y*WX'%]'AAo(ZZGMjCMOrHkWKEM0#NYrGo/q))7GN51Xk[O(5jbi@NT.^Y"fiX?07Fh:?GHjV4QT^7Gd="\[[R)9^NU^[E#IH<3o/V-XnW%A#bUO=HC.]kIXYEEqf8!%BL*3XaTkr'l5DG[/cuKY#[aVn%PC*@c_L8@WlBQ$cQjK;*%ht\ja`G+u<D"=fe!hLnK!cE(nkP_^j'p%cHbi[i\@7Dr?)$UH1Nh*h`/V33S@cG]e9#mpu>loWg0c$>2a;L9XJlDo<,EL"=NW=,cDWRlgrt+`Q<uAY'\a55@MW0n`G]D'`:,F%idr@1g(U;lWf8qoi&#[lZ_Fh%.%RG%*@t-E4TQ"1jdiNMG=Gf_0";_+q$&?dhY+j.YqK:ef9;I`07g/]#^7eUGP6p"kflIP&_0EO%;fQ:2h!J7fkGbcWXqo=g4)HC=.,jL'Tl=%c>\\H-/<BPuPa7c?.#04'k?7p/:^/#N5C\35s'pa)nZT1!5I)le[e5KZop$!PS]thd%6!Mu>WBR-)`BamE4qO[!SR&!pILQ0b:9Cu#+[,8RETY0AQR@.?<OrrPJ*_Q!I&q]4<V;?(7UjjUJ,&\G3*GJ)X[R0Cg9m$mm#KWa%euIZE._-Mf]tUXMIqR>GHtb(p;hP-dJ6J`#0QD$_Ouq+QQE8b2TTs%k\=7V0Vr4(NX/m%o$a=!UE&C#K!nT?FcIKL<VZR_FA3#\!%1$%:eNCjfE=ZbO#SpNPsBW0ht*t4cbL/]4%.DW8Q^uBN\fa\lN.+.(+O*a'ljhZ,![qQ<[>BUB[C@G[C>k7#U4h8XRcQ4&BFp]#f%>_:>.6<!$lg0JBHTfIj^)&d1H'a^D0dB<+$Pfq1C'sqJreu60fD_Kq-XZe56lK&Q<B/7c!HJAc]*mjJWOMVLamY?5.jCXb*AY2bA%rl:JJaIl1Coq8R3Y/bO?F]R@9Q$R5Z(=0CAi09OrM&-P`mctVbY3mdJ][rS&H9n0![@C"bS<o\j\-Cr]J$,2jYHQ]?[qd9C#X!G#%Z$LG/p#4JZrl1Zr>N%1^/'\Z+K^Z"pmOYGt'iC4>_+Ne%Q,?fVJ")_7fe/u+R+^/@(t57uUIEB6j1MXpJ(>%danPM5SUgV9KOECQ%X$%5VH=r.`-`\.lV?`$10@ib/[n-:1dI<^7@h4KSGAlKD()eh1LrnAfW":G>%h+]K;>-$Qe1HCh05stE:0-)]XEdCLMj!5aCpA#H%8sr,HmjqqGlOmf@XHg$EY(YIEkZIA\!bT::",iK^Yl2KQ[M\3T.pjc7pJ7-[`s&P5^Ccucr'.RAcWqoSFb?28r14dJX"WPJlTe:u%60gF*^W;*T8L:=$SWe8\YhZ2$[.5uVa/"uc-V=aC:op=[XK5*SSP%n.W:cNYXk[`'e\V<hQClV@Z\h8$m)K[J]L8;./W*r1=Q<M3%S0Ig"")8JW?%,10leO+oZR=$fl^$fsV/QJulUT-AAGE:g13.TG*5+SeD"K8`/]UIhs*`-,c\p=g:9aonK>N2@[^Q`R</Nc<$;T=>%<3(Nop>1Zj$9a80ML;Z1O2C<R*Mj_f%8-D'*Bap6[dU;.Y?%s,P?fb54\@P!cZWJWc*]17fX65$2@!G#3;_QGE+XE[T\-ZsY5G3-%h!]66pBu>Igsi_o?c.$Zel>qJ#VM@<>Yarqh6,59kpih!<7*2M,BbC9&nfB6jA6"H4f.n=1Ma,gA'L-_b72sA*)4V4Hb4ZM<oEPR%Sa77M`Do=X'$m!C\=WK]*nQZ?RT#,e,qj"&STqCW]FBR-MFR"c5.P;.lIPOu8.DLL)Gr#g9C%FS&E4iDX%10%Kiqc'K;q*WfX(=f%'B5]f1p'OGO'=\1\'`>r<7g-Bf&BRiW$$(l^o.6R5"/H(,#+kR*83i[*kKX'(@$&6Co8>P*)3`dqj=JpVY4),IAu>9Wg0[Rob6*F%Kg#*Y`R*TD5:]^#>2j.MDF(WHBocI.*[N71]!n!R-).5FAYYQ%oiWkihoC)EG.[dLSgmu:e5ta+YD_3M)H-%E_ucBR2-N46lauZc%$M@gjW:H`:$8:-I/"^rWS>[NIdClro$K&-e\'>8&H$O%UF[ljn6XdK9e?HY@p.@;Bf'!t*,)T;uV^P>B=p9Ki)P0j>R,Z2f(c+UQ%?75][g(ZKsp2k*;_/HJZ?F7=[],gN*m]`7lle\8^he(o.2S11#r'G/jlrhAc.F6k[2d>/\,):S0::1CIBDm2Om,:=r5Ten-?G<OJ%"jk%Q?f0P*7M"7mHMc(81AUY^>G!!`rJm)L0^c%&`O]BW"0`US-d1hpY0gIe<q#^=NE4.A0)auGXH*b32#GP"Dt"HHj'-V^HXF:/%_:\o3^#/,L<hD<'jke[Ma)UD@]?em^I36i^UJ&RqhRT<YV]i?C)7`rjf^nY4^%o0.5+YQAOj(t1=h-4:naBj%Wcql70HUZa;]k,]%M&CSW)0rKGoG\@u`Tk"t[h_(:rD%t-@*:d\]bpjVB:cEs89reD+"4c`d,,_V;0Fl%:=j[nG[J8T$B/t;T\UQ#G6`5>i0O*CE0oL1%Z4:7=/HpJT7Z=9C;.N(\q,X$AQbr\MgqB_]9>(\`5Dn?t_JQA0/i.tHBCaBODh<E+jm>Om>3l-!2pcZ-XRJ`gYXDd9]\uU(DQ_[]%D=&&Zpo168Hj1A<FZld@?eQO2+)6LPmlp`lVW1fr0?lG*7cq'XI-8bjlQN@kSHCp%oBOltY?lU*o*$Mtm-B^.:JS=0V7_9oh%08E%EDDS,mW"`!U"uh8h$lD6=.(+">_:LWf$aA;d[pHpg9%7$UQ;j*01pY4fBG1F?`#B&lB:c3a,_;/(75==(7u`m*S?qA>o>`9b.Igd%@->M^3\GUA'uT]0]j\%8U0^7#Mo%P(L?P)1DMdTIR\D`-4V?t5R-Zd;G&c%<ji$Y!AmD(%/bEiGm+5FR:Q)om#Up<SW&kA!JjQb!%gAKgE?eK>+Sh(WqFc^LbX"df9ecY49?0[Q>fH\e`C>?;tM!0k$3GbI57^S1+l\[[,-c1N"K09es7rrp1e^QW'fEH9PF[E&(iUEmY%hfkprX4Hf;U>)C1`]C"mLV7i#T&THelYMs#cA%L/;r^^o"WRn[3O\DuYT@"pm+p\mO5'*=bP]K=cJ@ME4o0Ypr4!1"&`Z#Lp,7)T%WI)ijO/73)<t?6udN8;9j*:30"'TTEPd*fS#)ScnC=K4SpCOHg.2m8BImc@.XcF,7E=3^,8$k8tf\U;DNKl)T>IH:.XG,X#ZcNPR%D-EI^Y#)1YJaJ:K=q[mD,*!L>E6mJG)G2\f;o+q0[=N;F#_Fm\@'iPW"qU&O&pH'T^s9+Ns,Lp"cWuWRYi1$IJPEa>5I(S[V^TRF%QeN0@(BlCW#ZaDa.#La-Ldu>-!kJ&E,MfpQ:Y*[\mFSDcdbh.h?EJX_pV"PL`i:t!8%X31:"Inl[ta4j.cjr(!V]Wu0"fs-Xk;$7%4%ELu[3Du#,Fb9iBOkKr&:Q7]IO(.BV0M@EKF@can28FlGr"7#la($U;WH_k=HtbLU+'(5n%al4Qa#%4?&>\/g;[^?lHn"h4YbUR%cWeZkRPU!0VnQ6^RJ[^J#H<-h.B.0Z.5rK?=uW;?g,e[]>I!7D>[3VAFPg83mIk<74/UmgrU$4.q&emos0YW"Q^dg5k;WG5?\Y&r%D>J2NTtYM@>4G[:;ST42(fRq%S'pajSs5RgA_["aF+7MXq)HFie^%kI$O8Fm/^$k<9O8E^qtr+\Mgo-s%Ec=GnBNr,Q=h.kma[$C%g4$9nA(lJ_b?i>Nc#MB=WMl4:?&K6Ao/[pOTD9,c1"e\<3_l%IrPUV?0\A.'?+-#4>-u@+fl%<a)mKK&4n%EiFKJ<=/M\GS1U'pI%S$Oc#5pA4hp``6,W$^gO'jjB=05;Ce_6&5hR'^\YBX>qKDJ?KK/aZcACP[V2nIr'J>&A'B2G[m#d^;^#_(B6&c.&f=*Z7et^s.2T%gn.Wn[!b7Z6U$U??c&r0A_sqfH<)Dc2BBhs+D7\`Ya]d=8%boo0?^_*\nkP\Rr"+u`^Mab/+eE.$mY=QW]O0q2:D0Wk=\K+He/AK%atVO31P..$1Y8s:dqd2=HsDnK'7ObA[:r-jNG<c$(-At8ju:`/ZJ$dog9U?^k%EnI[H!g^$hL]Nknn9/%0^3Q_5NumC!nbZH(.d&%W0h-8MP^'lPP+c_\Vr>b-+7BjZWWU5f"0+L1<6]fQGg$P?*A$IU_Z'S_%S:*dXX2Mpk!mll#j=S/Tkoug3C)I<(kP3>"?9Y=E7fS%gSR")XL:m*540BQR;JPUfR,LMNG[1m1;ksF0N\d_kM:?aGX\*;+gT!'QXWs9*?k`cH)^,/AS&l)lKPCjK64d2*@MP)]aQ-&kDFt*%f`mpY/ll_%luCZ-`lV]UBrDcLV@b#ZU:K#jl@D`uVlYY*1Mj*lUZ33Xo:bNOWW37N@<[cB*5)^'<h]7kp-$)kHE.J\/`UKF*b'!O%ffZlZ8R9j!ZYuE=[>9nF#bZ!3D/7cT[C'E,BfIZWXLeS:Q<l+`WR#.Y'k$8lLM>c_UdGd0I4WgsoMFS_Nc^XHqArjl?>=%R[miES%bIhH8eOfX!2prjTQ:<p2Vkkcs1AMGRPB<1'>T2iX4`mL+[;LtG2=9$Ckq'O?Ur,%44-C*<@r.sY3p3Ii*=d$0)X/g%8g@V9O!J(o%Y"l%ED5=5sFe0N9(0&Ga,MfY)TZeV9JtMu_)X2!_*fln7FkSkrNH@%kO'<jb;O^rZkt"l'eRnFhUoWa+rYt+kq0qt3X4&C?4@rW'%bI0=Web"/=4mD7=rE+YnbP#bNq(:#<\Wrb.R's2XFI''u<2ck^JqM=H__g:DW2jV8r.-o)LS73YQ8s\S]!Ms?%`rGL;28jsC8bA7%\(q./Q<npffsI`P%d@P@W5ITE.bLF))7f,DF`orA6QJe?54tkT"mHl$5[@*Ys!CQTjf\6S6eU6e6X<F<G"4n?bQKJd;26oejb5a*%bLTL&l+KTX9fj9YXPQV[FiL/L6QK9M*"@%VhAbaAhN,^UWr^4&*?FAuBj$cf*RaU1&?%t-9Vk*^SMmUf*2l5N)"p4#9on.7([:4L%Ebp)a%dA:gK60YfqpCOD?3N?:\f>3FcI-%G"?DrNk("H"`;sP36[J52"QU,3*CgFW@30@C)<6h6]L<Zr_i\fb&WF'OReL2p9s86m%B?&J9qr#q^EA`0o$WSlu7W#4q4#*m5RLZ^^*-*pI3`qA]27]jGKF5`LBh+0'K5pM^%,VX:N2u1]i\)>5lEl94/;%2%>M]X+28,%1%g-Ml:gW3-B>YWgcq\G9_Z&ee=6*<s%a1Y?QVX'tG-s)W*ZE\V<_mIhUA!B?lG_%Qk+cXCaPf'l^9FAqmoWi^7b:&/<1i48p0Q$H*%UJWYG"-c/nA\f&ACssFu)!-k9*2Z1c?Y8UPB@FNX@?e+CGU5/g+\.QuG*G?hQ<G=t3LirWKd^$Kq!9(-jA;"Y(PRs?2np^`aB?>H%ZS=bk$Ko&*jH,ta3?X(Y]rYEC\JZ3lAIHR^,oDYmS>FEV6-c?%F$S#*ZNoP"6dqJIB<ZFI)!!52Q@Kt'UN<_ngpB9U>VW>aXu8cW%>`l`1>jJaLE()emXu1VJ\7/>G>\gnY>k.W4i&^72i/0sDi+f=V"':tV!`u1=i+hMW^_P==i/2Ud>d7qnJL_3i#HjA,.<)ER7tI_s%"\XD^9m;0SF?Bn8l_G6)el3HqcGS\X[8-#hf:)+/f:'D`>j%dk>\gnY>\j15i&[2gE38@WE1P24^pQq\JSS!B^_OuW^_P==i/2U`%>j(Z;E37U#^_Q)R\0?>A\7/VO>gk`mF6.E"3gW$L[<Y[.C?_e7eY]1YeM`Tm=02!SE()tQ^_Nb'#HfHtf7>Hp;$pR+UCUU,m&gFl%/".o+761[V.*gFqla6D;X&X]b\6A_YE4'C/E()emY*SJX=%pbfX//bQMY'hulVno1Y*bLV=!VkF>18N6=%peglSS6b/(.LMCRrrY%Y"7`k($Y&"FW.j,'slu:e^Am(C26OplSS6bX/3!$=%peg/(-Fs`B(1)<ubTX>V4E&i&[.DJa6;3^pU&O^i_,f!nV/1JSRu&JSRtE%$=)o(/o[rW/o[AY7tGHHe-3!4h$'tVr&Sf!e%3?&VRsXOVB5uEF]o8[Vn!1?Oh;0/0eEX5Q;3"s1d;IT0eEX52;JG=87)V)==+9U%BcTGZP1P9N2"uR%c'&3194%k*2D#*88E[c'LNacK+sV0eC?IAVXsbIFJa6:H^i_,Ti+hBA.W@i0b^o(ZqS9M9*sJeqj#M'9[\U^h%dT;"#9hU&<eXI8_)N4I-'s,N.X//bQMY'hulSq$7>VRZ4Y"7`k($Y&"[8-#h=/9oq>16Q(CRrlWY"7`k($Y&"FdrRpI$t.=9D="<%9hKsedQ)88qDrR9V`o(=4=P5<niCa/OlaC/E[q<r2>nqBXjaks[ALROFdsNWY2e:@Xu2ULf:%($\CPA"i&WK=i*+Tj!nTK8$X@JY%$X@KD;;bWUFb+=&GCf(i4q:i<[1?N_[0p5Tnkn>&BfU-$3X;hJqD`H5ZlHU,F;MG2I3#h,=q4fd3^>\NY6.k\F:)98c@N#Ldg*$6%/Hr;cR2!.T8$2qqjCAa*ECP$->0ltdi/3\^!nVG["'7!t=+RCec4mc4SHDq-kj-$,SGL%O.R=DH/U\ADg9_R(3bDRRC)H4<=+aK[%>V2KJ=/;Gq>g)[tE5f1"\CqoOE(0UaE37U#^_Q)R\CU:pi/1)dE38@WE5h"lJSSE"^_Mdg^suK5#Hfs6"g1DZ^t$k7JLdVZ^_Q)R%\73de"'6I]%U:U7;W(a-Nrmq=p47!RGCaO4*sJfi;@6ZEWXE(Tp,I#ne%3?&VRsXOVQU*R3iNKlCUsmYC\god>4t.!Xm%HWXm&?,%CRpanf:'p7/!AM8/#MFD($QFBQMkg]>,QLo/(-Fs7J]&a`O$VpVKIE186uP(Aa]_&RjSBBQG*]2D-@9OD)3V[`B(1)=6*j$>]DfG%i/.SV*Oqg`V80L?IGfulG9+1sd7f*AdQ)88EP;ofbL-Wu<WuCZC?_e7eY]1Y($Q^J>.P5L0e!@1Q;2u]dSC%L46"h:lThp(DB2o%%DFYuqqLH-tJa7>uW7qooHL&sNoS1/(49BXE!nX89h1i^f>Q],<'rNKW[oqY#FK!s*^i`$"lI[l?D&0UH9KK6hU_2iL:n*"e8;B%f%:69A"XIFf`W9C!X-mRQ&\CF.fUt[G<SUtsq`N>,A]>^m^7lp;4n(orXdd;ipLFl'+>MRpil7/B?+^Kf5_ZJF&W'aYbiE-K;*=,pE%2,JL!i4:bp%?D^b3iS$BbKrb^q#!0n/OLVjQD'@EC\goh>)"YM/Z"A1Oh?]Z0eGnuQ;3QX.?>]T9ZrQ69m;^MdasU3QH>8)>)0Ac%4H<Z>kp'9!-Uk2(^5?04>)HRIcB2lkO!@_:A<'o75&odqh=3IDh(<Lr66/,F=/VgeDLWY8mV%ZI,=lJ'ji8(2gMP'C,9<q(UGpkb%FM!7/@utSX*4B=>@SVF`[:U=]Mf-#&Fj-N5/S],S]%s+3.6t@He2feq>s6l)NP`l7)_>lt>:86WG0m[7_)dMap$4kp*Fog)MSX0q%k\Ad<g'rjD#KNi`#C((Fg3>PYq!%i9i!gI:?4h)elql\WnLQu<_#i9JaLK-pK'F`?%A'=@J2cC;lqYJAhVagSOCqbAiMG.n2^".:%Q9LHP/<G"+)>+2lAB-^72cqJ4erG(Z@Tfd*i5=LlEMJM+d;8($G_ftp+CFB-=UZsP4?RLU49Vuhj5+Icm+e=<"LI^N8$`J5SW+]8%=r*A=bp&N\Y+f&%Z`/pCid/AJBQg[h[e*jK(<j(HLMkC@NgNJjB89mG02epuc@X`tqWnd;/kbN:6YnT]I@hM];(k`%B89mGl03V>%#\H6UqWoc#SQ_YV`?/U^fi^!jpO.2jB"+W0fa/_bZa4%_lMKrE@!8hX[KX"dj&gK1:pt?SA6R!T[IJ!dYVF__G[2j.fFH@GgdA?Q%ES-\,.%E*XB]pBdQlXddhdFj5pB(Wt:u,kbA.JI0.[53\"+N30Qb*Yk9S=i,"O$j$":c3rH:0.c%MmQ?$dBeR=B+V2/Yh63@;Vdt%B;FJ#]7';EroId2?bV!^r6:jOITe,tkjNtJoC%/$p'lJBiCEU,eFjXWq"j8_rs@RYrBFehgNUs8Z[9u,@&RWkc$=MWqq5W>Ie=5T%h`f(-IE);`53r7+S2='T["760%u^p(Dgq?=S)=4CP6OMViq2<Akc8^cW23QYPF.S]-ESJqBq4hc\7ZFR>)+q0)Rlr*1f!nWm[5n:%Ch]:/dJ$<YIGH^Dea=PrQ9C4h4s'Ajg8*4SC!914PK(,5Sk3nHY,rTcI<7W987)$ailH/dUubYBR5BS&oh8iOgbW*j]:MU`kc/:D%E7B1\EL_mIaG0#P8`Wk=R06*%c_R+iX.DnQinQ>(V`=?C>(+!IR7*mp4d0+7HR;VMYBqSsO6E"%$kjB<d>A*SY'VKM/b_pWT2O"2%+mc4A'%?R&>-YkLm[6K>\n;Z)EmLP`@uOG>P1Mj\[csp%@Zer!PJ0`J1MP;Nb\]/8B+d4F9ljfWlC#TeEmH!@l`+S1\WLQcbf`/5%<q*8<-EV6aSk5`!cQpfhFjHkSldR_)je\ard`:C>8XhUqMC6XC&F&4Pc_SB,oh8OMoh6R#HRAc/K&?Nl#l^Oi`mBjeMF?&]?RiFC%#4Op088FjL,4&I)g?7$$(ioe-=m('%%J3hGMVg+'%J4Y.k0e-$eHu#6p,t:[C[5p.gYT&`?9bbP)"$r-U#MTrkp&Q]geJrHc'M9`%I6C]oeP'>:iMpAh\>Y[6aj'J6YPZ^@Y>rDKK[`VdlLerI;_*86L;Rr$W0P)7lo3"foO[X&YP5rci7uu;g?=gNI6XgB<Djca*P>Cq%<r-,4Vg**U+,BSuYa%Bfms%hWr>9deC5qknpgok1oEAU=Q.tNR3HiqBBBP2Akj,OP]BV7cS@r\s2pqBQS+1<hcg&)Q'7Cm]q7;Ec%!=rq>)eN:^h%$i2TeFm'V?Zn^0lh'&HSF25d.bBR<7sO?N<T#E=9BRNhf;sZcr$$"C7s15ZPPMXd-EIaIap\j`mH:X>Nj8SAe/,0%D"RHrF=U.hM*@4\:Uu=riJS\YRcq.QXJq2nYO'B=DV/.Xbb=?lkT52^(A]a<IbeNB]jA"k6.NHk&L'8heO$GCH"m#C0L8Q_C8!;[%E?=UXgUtsB><AutaAgub4h&]1IG>dplNF;;r-pNV^ZCYRC7&KukuuRJbf3qT\d@VLCCP#(;/BEgg)[T<k-R]sS$stHXJ!(s&$Rph%IG2cF8Mm@(;$dH-V^IF%@WNG'h9''I`>,l`GMgoAL5C[(OrMo<2YttT]5,H"<rCI?7X@%'\*R.FS[KTr?q#\dk18mYAnt41h3s?`%Ec4dLoTla>W6pXtnA?3p."TRig+5F)Rm"O!6*6h)C/ENNZd-r^p(hf@Na"B?EVX+*d7UZafV17b9klq?(gE38po:&[NU(?:TS=/,%Ph)MY3#FNOC],_tk,CXPn0K].CJ\L^hDqhFF\Pr/p'p<`fedsFd;JVeqUA]uX0n[+lPM3gS.(F]Ynf4FlS:tg)WqTYSZP?J3o8'r%1g8CPc8cRE/S[($k?,`-e<jj7FKM=([:O5Ml4q3%C3-4/WNCo6'DDZ)C)#PcQ>oW<ft/"WC;AhW^"/oamEYP?/S_>Q>:a89l8m0N%g=;q#l$C`ae=p9KgZ0,-VQF0@X@\COCgJWn8IYt?6\09AH8PjR>1>DiO'^M@7;X[A)Qdso;.J=%ls:'S_u8%t@9^=eN<+LFT^lqu%[&B*N4P[:Z2))C3I?PSuckKHCg?.o2c'm-Qf<V<GiP-LY8^e61'1Pi5QD7k&6[Y4X0T*-Vj4n,YrjJ.,Y>OUJPe\^$a4oBj'GYa@%NMF"*mo/6p#,?ITE>6t&QlA_mD]at88@jl9=Ggh1elW9R3#J3_d'rbSB.<IiYN*o+Y[j.?9VHC.V2&dTelfd&=Z2<MVNi<_:N%p-%mAls"9VHAX8&3XHm:5NkCB!q<#>B,B,c/m&FaKbi0:F)sG%R(@MqVDCPTp,dAmPc#[YmK:C;[Z\5cL#V7r+dIltmdj:hmE$#a/AF%gW,>M-?!fmOOWXa##[7`kL+q2m-S9nONQ]$8Bmk%9F6ftM&shS+@Y!aH,#Hkj>M,t25/c#V-u435`D.S]rrGGD9M5`(c;tR=9>8+%N9@#kC6R4'0P[([[_Sj+l_U@)Z>h<>.-`;])AG&QH_!3VR_.t21Q8I<\hK".2_R<`;)%1+BMI.h&Q,o'^,1]_mk#5ABjh67OY0QC%dDD(nLa)5eFbld%9g(l><>32FV#>':S=tYWfJD#F8^CfWDW0ec&^K1RAJ*nFP8pK\E0t6][uG?gR%p(*`41dIhdAX[?>k'Ehg-r,%2\VrL*I*4B^%q?Sn7GkuhY:^IWPb3")V2]nr+k7#BtM-Dn7Ea94pBfINaWe-Db0bl7g.XeJBLoDDO+RL^^W3f;*)-OMVT6*i6<mt%*b^20D&ongD:!:)U_7N@[WcX,)VPseqoWSVQ>"heg7\5H!#j[dCmSj/FG#]m23`38Yq66VcG7_;$TI:XXDpri]#!%-mn+_ZC)V_I%1>V5kHJ-u'DX`j0G>!0:*II5<L.N6R/@o!<6Na)&PipFI>sUDC>>#:6_9edN,OgFE\mR;Nbi8>[C%XI:6,(J!c?us8HXLEqBDT#+%9u],!k/_qV8Sd8/[_`pe]U?)illG!-I.t(9n]f@VZcVus&ot'`a#=:Y`P7_VlM`Pc8Jg9cjNUWD2_1C>3Ei,UDe3&RE"KIUjlc]"%,*&jI']C<AMf=u*1^DuURXZuI&^Jg?!6uE<mN(9a$RDSl>^SI3$"j`-$()!2<og]"_I8TbO%D=,=-$oY30PW2g(=g@p?!`B1Xg@o%%U^t#7e>nH\6p;R'lWmejNPpC2MKZtUj#T>j<.A;^NpgZbb!Zq5\t.I92KNg:c;/\BtL-8b*e@)boPn>m.Ld"PV\MN?@m30RX:e^%0Se[34UlIuB2dh1,hL-WKE4,iYW+P'%e?^o)3T+(g3O;JUba<@%F@Dq-H$=7n@&(sFeFArbsn%N%[O;(.gS1\gWPg@#AJOS\)87%%m<r)gF0c=W.37RoD9pBDS:e13ZIoH-5rG5s!!pq;g1KBq5R0`'?cN0&XLKU>DJ$ou5rU;N,3[7&p=M;h#6B/gQ2hrRgGB,u9]@,6%%Wn'rqrora`B"8cZ`Cbi-U;>!?M4Aic/Wf'J^2[P;[>FR[*1fsgWY$Jl-)^@`f>/^8N(mSFET^C4\1>@1+c-h3g?GZZ"0Z"`E\SO%9&?ptUpJK0N?TC+^/b=Vb4E&8*U"V_+7g>B1UJ,pJBmG5LZ&7pS)uH2J^2]X?6c#GBH0+^fm:gWUpK]t"mI:f?]iV:m;:.ERkP%j%DUIafEP*QfM3d!h%+8QfflrSh"uH/;5WTRIf03B/oG%WWSLN8sMcPr][m!uLZG#TV=uCTZRs[[d994M2C?tNua%//B=LTkQL\0m%%8s%=DmB))C/q2,43n)?eI2A\897:X8lGTsQ+ruWnD<Sl;1LY^#OUh*OZioU:[GC^neXTm*BT7,\[b%cQX##KN3=-YhL1l)tl#>,9%BV<7>9lKp0RaX>-dLD2W7QPpFi>(Q11370g.\,m+o)NlTA,FitX)PNA[Df3/.!mUtK<DF#1P=!L<a*:Rl*1Dnk!AluXHBY\Rthc`%cIf%o1t(?IN27mB/CLeWXK`7tY$bLO+0sV/4TofR@31JJS91Sr/0Z)]/M1M@c-.bM2+bLE>g:?,BG%;99P9T0%L$BQj=\`O+<=+5%=Js'WbDUFBm\W0W[Bf&E1<L#ga4s#4$/^lMoH>`BpuEFs#!+!Pd:1[`6iAh)Cmt):)!ENaMubt,;9q7,D.t`*V2#hmRcdrt`N574%aPAo&'oiq=kDDdo`15X)gO%.aKJ#!7)f#6_QpVtmdbiiI#'TqNF0M=hX^M]`[liJ#LC39I;9.JM-:VAQl*C#M_g;9!KjtSsGA3;Z%34F%t.6"L*8X)RopC;/?*.E[rgNSWt\.e<&FNP=_PsMra3X>+]CQu.h`MHEA\(BcA@1LhmDpCYh4hNGq.5qIIN,hb'=8"e7EmklM%0;BL$?b9DOF&9:mmlAcrVIt)@<1'0!);P@8'@084ggi?upY[%0idhOuE3?'Te8OL)K]9C7_)VeDf""8q9aX0!k9fl+OE6W&(impW%C-TPN3D?d<.-)?fm:C)sF%B*>$RX00f=_@N@NFMLdU#$<F11<K\Cqq84ZCCo9;\4R8s(XPqcn_n-DV`)a#R\ki2n9bS=RrKH_Vo\%RJZk#-qKOXaY>1"$?IV?hT=G)a0.<7k"lc)Xlc"OKkKq#\R>t8+oGZ#@h)o"[tZo=4^N#n.m.+S>[ctEbSB!-bac!?X@M:jUi,Xk%GKpp-a?A]U)jdd@cAh[P;0!.\Mq/nj-;o.W0gGt.)rcg/%]RPh?2u"1B&:3,d#I=g-0V!gmq[hdnbKE_OXk85Bkrj3/)O9UcI/PM%>]%/+E&EL,4'`;;Ar1lTD1E,FN;NgLRH%5XQ&AouhRj6CiJ:-@Ja;M%UB>V">j%jm>YTl7joF4>cTmo=!$,<KN*FB!K9A<AE,26g%q/pp+h.U.d\p's&\@jiJ_=Bb_(:_69hSt^D#A]g<Et!/p[RF_+*a%05LBcsMD6J#=>[_KqgD$<5CTRCH!o7NQ)D,te:"t!t%!:Vt%O*r)jVCeo5B?@DIY&7<bR"KopNY],KI>h*4%dC+fG9ASV/M1q$FV&Ub%r38sg87"?ZBB(rG_fk&Zh2fPXu:!3JZE$qJ^,8.UCUUl%On6s%=$)sJ.3fj*aPsZSJoiD4gY;k^d23jrZ[t.0E@VCZm,.YTKn_N-aZ1'uA+&AXqdP.k$I0Mkp(k,@g'JdiZYIoBB1]l,@@/h^%>rCe7Ngg[D`[U>:)s5.sfD6P0AV!(uNE*e?CW7!.86`%\a6H!8L)d'aIKha[/8Ze!+bulf$O5YL4E#;Q"bH<U[#lh/cV$K#"h(kC%e.?90[s.Zdi[d7bUK)-<IQP@_B83nQ2DW:?cL#a$(l)h[g.&-Q3.;"jOC#S>(Q?6DP+BV&_Jf#[j5@62HTtc3=QeZZN.X($UmMmc%mBQ?%<M8BhJJI3QCcfB?E<X$.]O*8/eS/cE)<5Jc7a?j1Yd$ih'BA"\>F--D#Ch*SgMdmT:?D`?$A>c%ZU3:#fldJWC:`E*^C*oc%Q*I^D.OJO"a:gpG;=K\Z=4G,S`YAY2A/pisdGr]+SCuM@)m*!L>Eq&gLNMKl.R=QnL7sT-M00AM8C)'9>/dp5Nr_81LNh/.=Jd%>%@[!ZI>/fRmWJsrpiP>uKOFsgOmqoFhS^29aaJ"D0IfCN5=7D3@EuV8[`*6-bMVctr=$cB3IADf:)g%uR%<FBi9N+/\"f6V:Rg=a/%"3]8MX'").jhRD:'TZdaF&&/U3+jKTqV`p4StQTp6(0a:NH:C,*Xu2Un"/=Gk+)*\:31@a?T?2_+ufgco%<iL'b317lo'*S'_7c9%kQpA=WBd!WDP7R6p>S#A%<_Gh"NI6g3n29ZKrl:`cHZlA8.U`Z5TNn;QZfhQQ$+"uI0_:Z)0I9d+(LrRIeL:Z\95]nkG=5D;>J$D%Tak4+f%)nf_0',^)m7c&\?rcr^6WeS,P+_V2s457%c[oZZ/(3qO?5%3`>=g]8)Kas1i/VZ_gl7FdSYc3k9]#AJ<.C'/T-9G/LDG%%"qKq?W,qX5YmuE8f;5`iBK%DmFT]C]6``WsT6CQ#lO*M-1[@_eDK2_R98d"I@@(V=*UN+*`N:i$\$@jAeatUJ4mVU>=[S*O@i]$L%N@aKpLJ<+0jJ]sIXZ>Q;FE+?URTeK]lM/lgf#"WQl:=u4EnjmSMUOQqXa^gfL,a$5l"WfLmiE>0^t5]q!@9.=AaeY[oSsaVO$fU,%B0(<QTW@1"j/A@Gh2Y]Z^5.=MAD+D7_f^1`\-&:MQZ6^u>R`P`"!(2p0X;DVl84ME1X>B2:Slldh<erA?ZRiIO9E/A5t!aQOZg&6%?qWOOAtA0/9+4'D)<@//GRYH7j3D1s_hi6C$Q2@J$Q13'04YVK%qGX+BkfS6_Zn64P7Af%Kao<nKas9V2n/nCL7*]),4\;1alI4u%#gq7G&@/M(+:3LjK;b=g*CT9WkodO--QbbD]LFetkXc'%%6Y"@$>(`?.$g,0dUHAE+:;\VK.)tL%['1^l6(spV1Y_i:-(r6ZBGcm%/j$+7/WuA0dWO6j#Dk&p`\m%dUCYfGfKF;P5C2ZEKLCkAKoiIXN^?;/fP)AkZ(hoZFkOS:8Zb)m+jjpm,:*$:;$`"B3sm.YB1F,@%la*>t&tpk1OD*`Q#jGN<'LJOZ7jB9_Gr.iCr+(HlINaB#INaATr.P\+rg=<Q[!oXV5r&EF5AOa?:f<)T(fEmo?s"S(?s"SH?s"RR%)#Oa[gOEoL)rnT(!G-*NA&C3QCY!78`%d:Z[r;]bA&X`c`f6HHJe;V<\qW4so\n]_J-(NP:&l(bF_%IgG^Y.pm(Yo=+05oo"G>FZ%&@)188`h]sC`"-$&""S!4dBlE/YHSh6g%LMfB<o7\s+G`OTf+"\&MaB3J,(IP:IXjV.:hCggW0_A=7jj-5SCX"9YRqm0Ib9"/iRV%`"Dsh"W-\0BleMP<Y"M0CA=>Z&4[N5IS%]*'M%FF>SAED@/OL(0DhsmY"13E8-=$LZ>ku/I@*!GZtU3g7r6E0g8cHc[_#aZUDYc:%C6f\%3F]+;/n=1&%2CB>e.Ko7hfM;0"J63/kS^7X=>"H!NZ\uo2bD455t8%p&Mlpr1&u`j,<"b&/7FP]NDV-.#1eP=QLh9k1NN]^%S=[-V,<!3?`%op8LU(Gt.b3*YXWNrU8?YbP0QUd@pB6L"NhEm'Z&&GD$8A;F;"3k-FQOgl&_&>akqGV(2fTplbEt;!"";2$7kfa=%GN!3f*.Kr%De.j`s2*##iX",NmisN+"@G#^q'_i@r>*^Cqj/Lo3J*BaqYl_uJ#d34mAh)J*5SRBCPpR\M:&"R7kf72D[>hGL7rd3%La/9uU'(O;"<TRJbXY1V^f:%n9cUE`k[n=TPlYaTrX.dYLJk,sJPrKmJPs'(*D5RV"A3Bh"A5YSF=a7P&hKkC&hKkCP$(D(,_51R%8FVl;8B4Z_,Jd=4,Jd=4,99QoNs&6mNs&9nO*!X`4VC#V4X-Os*pJ2IGpIo4Gsjo'.?A#4Y*;EZe9,T7/:RQl+21?8>q(hjW%6p@%iH1nYP&\'2*t_7Ll6F118pquFFJV/FS?B#ULo)]qO\F5hq?UfH\ih7)Y&jLf;S[CN4X-8rZpt8JQ1db'kt:\;0O<KU&PH377l!\<%g*8pu>(['CZpulD=5"lekt64h-s\9_A<a7(7tf<Up4uPV\il3J]$_WC8QX%Z,3_^F,boIX4<g#mK"=cNH)*g,b9K;Ng*8m]g*7V0%h&ZladN1utm*-U95Y?Ak+Jh15+E_t*j!a#Oi$d]Li$d]LCQ?OYacquQ,0EJ!&`r)7ABN"9&`qdj&`][KAB%Ii&`TUJ#]Wa5'&mG`%#]VUj`&JY\)0%E&KK'hp6C\IIN&V\#6C\Gs+cZau-CbJW&WR&%!Cq\do8Ng.n0W]SG`tCUnKrfTG`tB:]La6fG`tB:]La4Xi?XLq%_FYm_iM;QkE)K4^iM;QkE%9U/*#4W13%6*uS.$#RNWr'%S.$#B:'QO\-\EZX:A0GK-\FgCP<k?L-\FgG9C":OaWS]aP<hOT8K\W*%,`lQVd3'%\A<7(:1.X1\A<;mm&kKr##pbpY&kKr##p`uM"Hptg#pb+m$kbj$#"aQ>$kcE4#"^9NecV'a-\I):UHg$E8Kc->P<^>7%8K\W,,`l80:'O:eS.lT5:'uh+-\isG:(E+/-]:B_P=C]q-]LNeP=?bC8L$g"P=6\BaW_>\A<CENaW_>]A<D[iZ:Hb8A<D[iZ:IAE%=X4l-Z:KX0=X7OK,a&Qt8L1%$,SJL"&kSr@,ne$h&rC!DM'Tu6&rC!DM+"SC7$:\#NC9k37O$DT,K[$N7O$DT,8'7;O_!*9,9cDa%OU--982BRGOU--98-D"W,T1b\5Qj/O,_DR<OpjET,_B<*LVZ_$8VWce'#IBVM-q]f,f<@mM.e8p7'r.HP%c;%KX?q2,2,U4ag@7"%,2,U4&a^j+AD0U!&aa7o#^3LE1@/P6#^3LE"?Ta3)0W;V#WkU'U7EQm9KPfkU7EPBd7t=r2=4q:AD0U"&acBVLj&>[1@=.bLitOF%6p%@nR<DJ"6p%@nU7G8H6p$e^U7Fsjd7u#[VO^Bnd7u$FBIAuhdnV6HBIB!3[$+(EBd]*4[$+'Jg.<R3[$+$)g/0+-lm.a)fL[>#%m3Ihtm3n->[%g/)Zu_?T?q6?TUE*?tT\U/aG1sK!d_Uqn8\g?98\g?98I%>W,_@%2P(4QIOq)Xl8V2+B8V2+3qH"X'BRp<RBT`Mc%BTdJEUIc**C[5rnd3Rsi8!??JUIZ$).hT6Ig<h/Pg<h/Pg6kO\Z&U/f=@\KAXHQ2<=XT>"XHQ1!ek%./XHQ1!f#]0Llsu8ifZ>BN%lsu7bFtuWElsu7jFqR@L4,P;OFV79a3f,+kSOAW2XJ8A8Z&U;*Yc]BdGLY"dktjm:,Z%"#,Z%"%UdH/FP!C%1P!C%1P)MHU,_8#1%,_8#1,TZ/`P6C1+-4/,J-L"&[7(DEUUJ2AsUJ91!N]'IjN])_b=/*[irPBJ-nHJ/*P6C/U-L"&kR3Y<^2N!'-P"@Fn,a4%+P"C<f%aWqaHdRf*Qkp/TdFHXj/kp0`/F:tiR3_<qSF:tlS2MkN`Rj>=82MkN`Rma?A9p/X,'1Apc9d801-HW?Q9d8/bFVsFXP@W1j-6_V!%PDF=D8M]O@PDF=d8OPVm,aie\8]Ws8,_8#!,TZ.uP6C0h>bR058V]@L,_8#1,_8#1,TZ/`P6C/aP6C/aPB<au9d8(a-4/1!-L"W&%R3Ym)R3Ym9,$+,6-^uBf:-+56-_3Z0P>@?M-_Ef2P>NOV8L_ccP>WUW8LY8<Um*.WaX@bfA<[@C1.j=gBU"<q1.h[2)'p/D1.h[2%)'sm*N04T2)'sm*N"X!&6:lp&KG)*r6A](tTd8)^6A]A'TgZ8O:m,N_TgZ,K:a4O`.*8]W;Bjab.1tpBP[rE<.1tpBPR)G18i#b/%PRr!n8d%3n,oLk_9#Nb.-"7mSP)MHT+@;WX&tr&i8Of80&tpq[_b__U,dU68$"53T7'MkOP$o`57'MkP,1t!cafpt+6J+jX&a^j.%AD0U'&a_!2#^-hQ1@-9N#^/$s`&\b^R<:8W`&\b^@\&I@bW6Xg7%JuDTh[pG7\,2FTh[q2:a_st)Kdf-1?t["#^'$;KK=<L1?de`%#^!@E"?L9DR<-eK`&VNXigdB=`&V!I_OR\?@89ip`gj+CEDBPk3%(aPF&#bm3%(apS<Hs93@CjqS<Hr>c:KM-S<Hnrc:KJtk9Q='%c:KJtk9uT$F-9-Njs64JF-9/63CtNbF4*\!3GBf!S@"I'3GKkWS?ro;:0L6/S?ro<:0*3*-`\M&:0*32-`]Y*P?!c3-R2$PP>rgR%aXYE*P>rgRV0*X=A<g]PaXSIt,aAXWP"ILnA<dFBZ:Y6\=X=r-Z:YB`8L4G/Ull-I8L4G/U_8eb;Fr4+U_8eb<f'X#X!FH8<f'X#%X$inM<K^3,X+[R<<$Kmb.`ncU<$Kmb.M:tlQ!CXj<_6noZkBW=>)??/Y9_Rl?AW>CZUD0a>*<kQ[7%Ng=sD`n/P3II=X)YC/.q;\%Q=Sdm/.q;\Q3_[i9/>pGQ3_[i98#Bp,oLn^98#Bp-,c@mP)MJZ-,Q4k'&cSp8]I=>'&ej[M/XiI,i_X/M/XiI,]H8YUr+5'P/,lb%A9Qa*/a74E[3Tue[3TuU[$qlJ4/sUd*R0c**R0b-G;MsEG;MsEG:!)N)t.Ho"Rg#i"Rg#iFM+AO'"i#GE8J-.dc$3uM/_We8^OV.%f[=G'ZQs3SZQs3SZ_X?:bnAH"@YnbGYp@eY@YnJ?Ysbg[=H[)?Ysbg[=X)M?/BP,[=X)M?/.q5ZQ=SXi/0X@*Q3_XH9/>i^QABYr%9>ilJ-.f4+ZR!F@e.U.]e.U^mglfmnE(^>HYY.Bscq?.b68&rB68&rC68(p[$bJg^$bJgb$bI[J:NhT9(NtY^(NrA^?e?ZV?e?[!%TBq_7^T^@a^T^AP^Q;)D!%!t"H]N2=[.bu8FR;66-.1RBFL)/njcZd_8%BlH>F.u,Y,,CO`O2k86s**q,f3aM-!aX=H:^N4e4ZMD%O*XCLKh&gE?$N_LU'm$*8_8Yd]-OuW)!%V#O*4+HK1@^CHLPU76k:@+P-,%NG"M>a[<6^)*po,n$]fIfqX>o"6m!K3P-,=VG"M>b%d4U8>4PD)e+!0e^Ksd.<U:!M%Uhf?p/rA.#jcX<E;(frjP[#C4L0Yu)L0]rS(j:`Q.(_kU%(dcP0^KEM:i_C@(ii3f@)sVq@E9`=%@E9bH./Z#?QXEnu`e@s8"Ok@>j:[EQ=SMNa,Y/I5-bE&)_.X5UE3hD,Oe0VgPs:5Zf\17ui4]LEQ+?k9+3"El6i3.`)/\555=pC[%s7TH.FA$GsaPMC-%tdL.#^Pa5`?bF.R&MAhm9`ae[05`&MSh-UUe\8ROec1?UKQ<Sr*^#N2"eWSLN*Ts78ke;l&@0Q\Kr)#d/E53%^Le*CL*jCJ"po/6=8lf"3T5hi[g=\\qbT+BYeW<-?hqV'Sj>T^6*is(J7OsRRA7,rq8;C*[:[V//A[,brnsW4E57JTV>\OY7SjNa%*GCbkW/A:eb2:E>:hC$^&0Yj-RO+7ko,;?M1=:S%`68kT1JSr,0s_#3Nii9&T8a@Ag9:G5e4n(B=s5f,A8f6RLGXL!`68i5MR<,m%nqUr"0]/[KCc"CX06m8?p"0[6>#@2uU]&=WMXGSn?hm(:?H1%e1J;Nee(B-2&![LHDODdfRY9SdjYCG6fN=nY%CK_1r25XTQ=/V[%:)44gW?mq?[%AV[)Yh34AsQgY'8GsGiUed`ePBD<=b:bKgTUN`/C3%!PK:r\)rEH4@?t:DeKiV>=PE+20&n=\*he!N)V#IrpU0tB%+"1)9T>`9-O+1@8bn?h]Z2Mh;_/,S?$>)kb;48fJ.)h@b.)h>ZUD-?&UD-?&UD-?V8*Q9A8*Q9A8*Q:\*2Qa]R(??3/>ZF2=\>eA%=A#\@=A#]k@k"gK?n&LHJ17mh%]7`J!iFI>!iGT^3ge>G$(0-k&PV;O,a_1S+\ZI4Lo.IM1/2>F`4'd).M59aQ"6-%.M59aPmF4l%8hs"MPmF4n9'5hA/S:8YP0,6d8Z@sdUp<TJ87e%lUp<Sq;HY:`UiJd);HbC+.'8Yk;->3^BNbMQ=j*V(N)<.m_PjOK@8p9!`i,sO%@8p9a0M8Ak;cHeS-n;>e'U;^^0e0;Y(mS)6(o:6\@FVEBTI?q*TP01cphgdgX!Af[X!Af[X/(@rXce2_[??'=CF,CBZq>qDZq>qD%Zq@J=\o<Tq-JUqgKS3PXQ&'AeV34N^Ki3a5k>I03-E/9\ND>?"-Ds7VP>dY7-E2ZCP>`[>d4%Y3P>WU;8LY8.Um,E&8LY8.Um).'%<(\q%Um-[QM^p**gYtt"B%u<?M9r]X.1t8L3[G)L$^D@!D4sfNZn4+,1>8$?)Ke6hJOYL[[a6GEFB`FCLi1Di+KQN:CuGTSQ8O,%%_#qq?[+=[`\5AFR[a6E7h5$8HD_t'Ah.2b+DDFgP2]3p0DR)Pr2]3pYRuENS2]3q$>?Zf"oZk0d_)DZHigYl>nP)JEjr99miCudu%n0XnUo510u,/,X.9#S2m8kJ1"6D]?_>A07WD[VPfbdW9qM#b$3-kYAQ)C68?$]Pc2DP9oO_C[T:1>rue,pM.(8r3PW:anth><)IO%KNi,SLi<_lE*X,P7S+qsN"Qau6AYsqTd1:H6AYsqTgXj':m)YCT1"d):Emm%-cqI6:dW7F-P>G#P9e:B-P>I9PDF8-8M]D'PDF6g%KIA4=,\'S1M(g<J7%BH:P!LIf7&6#B,1=R\8Yi+V6I<h$&a3bhAC/FFM1_Hq,1+^aadePh,0n:W&a*\gABr:D&a*\gLi]jn1?`84%#^"Kd#WgWaR<5f-"?P3]!hF.j$p'e!!hF-?JPJ*p#+]QCJM+'7o;ZU^8Ht_r&qNe9M*NGX,_JiMM+B"`7&6#@P"@$j7&6#A,19%1%aeY+q6INt&&a<hiACARH&a<tm#^!@D1?`84#^!@D"?P3])0E/U"?Pcm,+Wh=6os!H,+WN_O\RgV2<eY8ACARH+mC89LieeO1?g'J%LieeO6orF8M0*c06oqk(,+Vu%9KL9@,b80QO\RN#,+V[GO\RB_810ZJP>3Ta810ZjUm"E68LKckUm"Cpd`EfWUm"Fqda9?Qki@mP%cq,N,l"#q[l"H6%U`6'(jeQs],X=k`Ua$mSOs&T-Lhrl.PGA:$9p,Js9p,Js9p-!.1e@aj<(R3RRNrp;BT`M_BT`M_BTdJ5UBM:+%UIc)oUIimrN[@>ZY,u3/nM+p0a=<;t84Sjh869!%&u;9o&u;9o&u7=IUuNFhP2I<[&ogYr8`lOB&op_oM)ZlH,]c^-M)ZlH7%f`8%P!LIZ7%f`8,1+FWae4hh,1&n-&a60V,gOLW&a*\fLiY=C*c[2e8]Ni[,iY>P,_7t5,TZ"qOp'nqOp'nqP%;ea,72TA,72TA,O$mP%O[PS37hV2a8!5SsN?g4@)G*bc)G*FZC*Z)*C*Z)*C*Xh]W0%5EW0%5E9"9iUG9:Y6E_qc;8RTh,P"[lN,bj'2">e3B,0?(573]mr%+q`sJO^u\X+q`sJOU-$682B@=Obe(a8AmMk,ai_Z8AmN&,ikIHP0>ph,iY=F&ogY^8`lNO&91G\M)Zl@,]c]rM)^jQZ-i;J[gmJD%845I@,bge[P"[l=,bge[&lDC>8`lNo&oipM8RRPs8V]<@,f6'r/'QBbkqGVc,VV`H,VV`HUr+0(P/&%hP/&%hOq)Q?8-3iYU(53`%23Q0D=sUpE=sUqp'(Kt^3E[VqF0\?X3CtItSKs@,3_:RuSKni!:(g,"SK&8n:(E+G-\it":(dk!-\k*_P=(Ku7tj@$P<pJ?8Kl3K%P<pJ?8Ke]0Ul]-68Ke]0UlYk(E_%tLjH'XhE_$<o3@'H';Fj>>)'gDs%$F:F)C,BT$ke+d#"]#i$ke+d#)PSmK-Z(E#)PSmK1)Ar%6'=M]K1)Ar6:0&@+N^:O5pFUr+;*dMOCZSWrXe4&O9fn_82B=<O9foA*?._6@I4.u#p]SC$ke+d#"]#i$ke+d#)PSmK-Z(E#)PSm%Kg_`#6BXnfKnQ7s5pF[t+N^:?5pF\'+;*dIOCZYY+;*dIOGIs582B@AO9fo*8;&uP,RJNI8;&u@,f6&[P&&:`+N^"75side+;*a@%+N]_/5U+9@+;*Z_O<hif*tdPoO,.fH7l'*QO:ZF&7t`kt,7/A<8&RCO,@[28Oj#fL,@[28&M[&W87nCa&M[&WL_qLh,Vr3pL_qLh%7#[<oOr,QpKT)Zh,/hSEabZ-D,0%_G&`[D_AB)_4&`[D_LiK^j1?3&/#][.?KK.X0)0)rPKK/3@7%EV+N&]K8@[ucs0i%F5L7HHu%5u.-0+=DL]6Vd?2+ICZadIMfMOs)2u7$*Tq,07kIacM]L,07kI&`dJ`AB;k6&`faK#]e?`1?;'n+pI%<O,.h^7l'1:O,.h^7t`nU%,8kR.7t`nU,Jou;Oc2<R,N>6c&TLSB8E-0+&TLS>Lc?c/jI1.q7l'7<O-"FG8&RF0,FNY:7moD[,9i]>Ob>d+,=7sV&YVtf84FW]%&Y`%gLeoIC,b[uuLeoIA7&Z;1P#3TL7&Z;1,1K1)af(Ca,1K1)&aJG;ACS^A&aJG;#^(/X''c9Q&9Tg"KK>MG)0I])KK>MGJNB5E%*U7<u"R:`]A4%B^OUcLj7tPk?7tPkN]290AUH&sgUH0UMd2_CQ7roqX7roqX7rtJ9*NbB1*R0^S*R0_,FYlU?F_r.g4!*Ku7#AjE%5b4Ah6+YKrPoq*lOWY[hOWY[hOcFN?7moD;,9i].O\@g9,6XR]&V3^>8-YX/&V3^>Ld3>/,_JkSLd3>/7%f`(P!LI:7%f`),1&n%%8YDh=,0n:M&a*\b>]VOAOUSfT7nC3&7teGb7l'Bs*"hO(*"hR)*(dXJDa_5GDa_AKD^5uL`"=aX]FdF_]TGTFBd9?YBHtB#BHrpl%ToB>*ToFkUdRH"f65pO565pO6_AgVdP;a-A4F/7"cD*=]gNh:<eBVi?o7e<gOfkBJCF"L7[mhR-V)?]?Z>PXi-qe>$6<RJ:>q#$i%849bj7\\(dek"D(7r'B]m&5oBbDt.Ef4@Hf,eE=ZfVliNek"D&8)kh?ltDAHNub?bY/cRR8G(QBF_kr>N#][c]'Li)7%YL%Om'-H%2:D0Nd2Ij*4'ElVB1Ha5la*?D&tpkaO_EiR)sLOOe4.s1UGW[d4B`sII^2EG^T^0q^T^0_rk]Qcs(%+FIpn=I!/<?T!_OCD!CIet%#RkK:&.E>B'F\d<)MA'UXc[(q:a_7P#))rhW2u,t"uV,l_V5p"SWYg-:Yo!<1K'G1lS<QOE-7^\$(",sY>UfG1AD.QO@C]#f.r%:%!r,R5)Sn+Pl5aJr$pLn%RooU&X:5r-2M1SZ_r4</WTegK@^f#M_2YtHI1D35_EBmYN<HRWllKCN0Q5O`KJG`O@?'1dgZlP[@+NE+%?iB&<:QtBZV%ECAf6I^="DQYUZo0VGOZI=^]'544ju,\-a;[D`j0uRT?'d7)cA-Zi8=N"5Do?P!;bWiBJk>i966!b34>_G]NSnIc%R0hA4E5^clLGja0d.no'"J63uJ=&3G8K/ZV=<ko*eL_E_7OAUniA.9ii*=p<(K)3OBcENaD$9+uECME"31]q%L,OW^c6!u[D.GDK%,*qb:^O^:7[#kBu[C54Wi%j2;%eiH>[cbA@I]InN@i>/A7l7EVLhS*D=a5m")o6s7m:b2Z.cqeeHfEaM_5R+-Bd5LUJTGNM`D78m%J86C>^HEl]UnAC`B\l:"b"(ulD*?(4[#s?8k!C"Y^J5Qu#R1VE8(0p7^YrPR#TMl1`jLqTKX0!!)_!r^0XQt*]ePP,Wmg<IhrKc)%SmuKk#]f=9@>uOk8fA:2AW77rP"%2r-&iJ2E^k^Z3?sreP"*Ae8L*5nUliku8L&g9XV%g;ejsC%[?4iG[?4iG[?6KGe4,%de4'R>%=sG%]BoN6hBoN6hBoR3gV)8l>V)9Haar8AUPr9hRar:pejc*f>ar:pebo76ejc(OM8fJ@7V2YbWdRGuaV2YbWe4)i(Bd8J1Z:75[%=sF*J[#kbpBd3\YZk7jgg.2FIU^r$@g5%^\D'WUJZk6b(Zk6b(]TIlpn4&5]n4&5]n4"<c6Q71<6Q71<V2ZaXL,MAUL,MAUL,P2K%)VPHO)W$9(.W6SBPhlZp.W%QfPr=dS8o6s-Pr9hB8fPk`Pr9hB8fJ@1WK!.f)09^a%$`aqL<:J"(`Lsr,@!ba,[=Fr::QBT'&c.q%EPg*@+lC-S8UQ^Y6G/"/6G/"/P4078#k8\]#l,f_,iMJOM!ua.7!OnRP49l97!OnR6G1\aa`N_(,.c/?&_q&ZA@Bl(&_^cT#]6k:%1>8O`#]9-%KJn*#)/\q6KJn*#U78fX6oSg)U78M%d7r=cVOOq)d4N)CPB`i\P3=6.7!+VM,.pbla`N_),.^>b&`'7BA@bA.&Da.A%#]J-\1>bD;+l>U*+lC-U8ULnaKR=/GKR=/GV"%15#k8\a#k8\a8E*ie,NN'B,NN'B,Dg?4NKA);NKA);N?l5l2r]>qD1mEID'T-7%Zk3p'Zk3p'[#mbdcpgPcBd3acBHr@QiJiq<iJiq<iJhr4Rq7R9_Te658@VgRL_FZl1m/,'9,_fec#Q:p\67*J@b`MKKTMZLN=^-:%Ulbej=jdR!2p3*_jCVO>M/kD[&Q*GC2Bp;ge4)4TAniQb>`@$Nb0@:_1?N1P,Jr50CIF\^BoQZMc*Tr.\s_-*82o!9aeYD3)\M;r%X[0#sm)&E]W<'SUM`-oV171!Ed*;!<,gOZa7`;j*g5%^I;]EiKS#MC'F#139EDG4Y!hHD)JPOdP5UUCoPE+@Q5UUD:TT_9s5ptb]%TT_8Xcq,1uTF5UiTF5UiTF5Z`JM+SIJhF\JJhF]u#.i/N8@m/;8@m/;''V_%+mETQ,:$Q.,DgN9NKA8@NKA7g]TGUn=l+suDPf<Y%d*:!.''NqA,6ZgRD5;j(l.SZ0h(3DrTUVd;OE@h9Oj^dMmZ!<MZb-m5DI+RU*hKT*)X0R,+mHi^ERKOtP"6D;Lm'H]&X"c:O[QdB%7S(+P7S(+P7M=rP)Bn@^)Bn@^)G-`g2BpR@)\M>1NF^I/)\M>1NKA7f7Pa4=NJM\^7RT:?,FNYZ7RT:@,6FF;OUO9b,9i\kOWY[X%OcFNN[(dl7/BeA%*PIS/3bfm*\fm1%UiUCK"!+e3!$/J0!$/J0$p%Q:!BOC/!BOs?*U'G]"R2kE"R2kEFJP]&&Yu0[&u;9\dZI;Y%Le&n17&6#*P"@$>7&6#*,1;_lYT.XBY)S6ZdRHVcf1%OYUlC1OdRM<gcpeZ265q*2_AaZ]_Ac(:$ZEsD(YT-\(YVC]?"bGc?"bH/%_@@Y*P<]r<#XK9\#XKhT,]PHL&TTM:&TTM:Oe-X"7M=l0NJMY_7Yj&r,8kQc7Yj&b,Jot@Oc2:l,JotH&ReG_8B.0q&ReGcLbL2l%,\)kg879`NOe<]%OcFJ37Y5[17RT7?,9>lZN<J?VN<J?8r$kD>JHm-h*0d3U&t!`UUn\p;OeCL^#R8Gn)p+>.2^6Dd)\M5nN?l_>%)\M5.N<jUR7Pa/&NJMZ(7`7<$,DgKI7`7;i,N>6#Oj#h",N>6#&TLS"8EQG,%rk@uLc?c!,]bTF&TTM2&TUY'8A^n0&Q16o&Q16o%O[cn.7S():7S():7M=lN)^4C?N<jUR7Pa,%N<jUbXY;,@,\'U+#Vd]D7$s/rOte>$7$s/r,0WUtadA8M,0WUt&a#mKABr:9&a/57%LiXjDjP^D\UiA#_&TTM*&I2T4,7/H8NB$.=)'S4\)+gJ/BnW,eBnW,eBdA6^U_/22X:^%:XH<WHC*V`.Zk7jag.2F=Zk7jag'Btl%CF"O-eqcR=CIFhZ23L6QCIFhZ2'UDh)Tee=2BpSk)\M>qNF^Jb)\M;pN<jXs7M=p\N<jXS7Kbbd,8kUO7Kbbd,6FFCOT[^J,6FF;%&V3^28-U*B&TLS"Lc@nA,\'TlLG1)m7$s/rOtdd,#Vd.L#Vd.P8E*m!,6V:s,6V:s,7SagN=^3*N=^3*N?ll)2F>cE2F>iG2NgTI%g'C7tDhObkD^9ld]FbC>Zk7=2[#r;;cpl*ecpl*ecpeZ2Ul>q,ToBV)ToC>AKf;?BKf;?BKf@Fg0!(1i\WB::\ZeOCF-K-,j?ac)%aFuE:aN5;kN!j?QN!j?QN!j>F0i$.&&Js"(&Js"h6CbCp0i$GY(aj/G1JZY[(aj0RN0?,^)(02fN0?+C`lT.@N0?+C`lT,2j(+-[%`^q*]j62I.EUlRSioH)TEUlT;3-ca*ERI=p3,'UHS@"F&3,0[)S?rkO:>/6*S?*;G:=b44-Z(+R:>1L@-Z)81P;\RI-fm^WP;XW+%8K5d5$Z1QY$Z1QY$Z@:V0"_c_0"_c_0"d;N\^3eO\^3eO\^3eYj?ae/j?ae/j?aeWO=T]+-Ob%SNKA2>N?lZ#2r^&0D1n8aD'WOB%Zk6b"Zk6b"[#p$Pcpl*ecpl*ecpeZ2_AaZ]_AaZ]_Ah`!(Y2.;>Y$+#>Z`5r\WB8nks?;.dY0JDdY0K?:`%Oc;&@Xd;&@YO6Cjna%U+WMZU+WO0KK<fl6CkIqTha<47\-muTha;I;($-)UJBBr:a^$HW09*%;($-IW09(_eB&WNW09+`eBo3IlK!q8eB&XAlK!p-lKF4<%e57.ke-uFi7if""%X$8jJp#R4JosGm;)-!5ArQrZBT3/\W/Yo#UG`adUG`adUGgQ*NljkrNnR%.NnR%E3b]gJS[9!6No!;rS\,Q.%No#R_='E7W["I&0(:T#V,19%%aeY+Y6ILQG6ILQGP"6s;KV/]kKV/]k,_7S\&I2TT,6V:c,7/IcN=^3*N=^3*N?ll)2F>cE2F>cE%2Ng<QDhOVgDhOVgDkuDuZUPksRP[@Z2/C--f;+PI\gECrm$]^sg,3LgiN>`sjB[s=#eVLD,iU[qKZn5_#bfkOO[M?H,GJLX,Jmc#%,FNnPN<jp*NKAOn7PaeV)A2h_)A2k`)ThK42%o:==sMG?UG^K-o;IX:4"l`@)LD$F\qV9>OU,RT)i7[_hFNZ<>oSVsQJ+l_ZID@T%:tE%:Lh*KE7$eq%OkaM<CF$LXBT5EH*OV$4bDt:IFP1qE'0UNg7_0X&.Nd&J7r9Mtm&5nc4a,7Ce70kC6p5_a7WOid]FjhiaW"*L%S\1*7B.%OaI<O%.e7U.G,kot`)c8"6D+(KgBd:0R-Z)8R4F&/djiJH5n-a0QiRbFKd][@0$%GYg+oakJ+oduhOoX.A&J?e)&JD<^%,7/qG)^,?R2aRj0DrcZkSc%*K7aP9J="%i/Qr^XUZk7Di@lU0p&TkOXE.)nEh?`uBO*qIWA7F^B`=[L1nTT1&NaNcOAgEC1[DF$W%&`O)Eon8rS&Z"!35)2!?8+5/q2hIM.b;%$QbSqGu^.*>lUYe';De/K(3%j7JaB82dN>M1UcoXCn9cRU11`(.O"A6XQ1i]=W?e9,L%)_"iQkhsp+i+7-XK@cU^7V]K;(F3o&b8V>s-_f[]i'LSQ0t`Xb8#p\C^G$*<9ntY_pt4$a7L&nO+'V4oaFH"8>8'M'YEl#A,H1Lf%)'k4VqZX(j7W:S+?^iuPdm1;m,&maRZl`!^.=QsVEMWC)2(mqK#]BI([>?-IRp[D"N'<[ubEt7EHArGT"R"Qi9>nf3\pa30E>e*;%__a1(gH'0L&k?]jg(`8$Fg0Hf3AtdYKm/DCCbp6KdNT5m:]W6c;W7uI=Ugie*'l_M,jJ;JZ(!@eGU#([5D)@B`,<sRMopQq,FF5.%+E%Bui,A%N2hLp3kTGiD3SV$Cg$bS**'kK&QT0TO4A5R^+VRB4(>?KU3.b@NP=1RCBepR9N1[>r#(Xf75nYalGpCB1GfOIeb2G-.%>R'&@c,8E\Z11fog@bXH%b+"<,99CUNW_tRNW_u=NcZ\G3t`s<4;''=4OUL!njp!Lnjp!Lnjm@Ah2q];]-G-j\g&4kjc5.pE_"&H%\KdN?E_"&H\K_0UjH0jMaWgkej:MGnmRRP^g^sQem`5sWqXk#N!Ru'Y#h3f`8CVTK&lHOe+]7&9+\ooq8N70)KK'EdKK'Ed,iLT@%&]^m+&^iMkO[RZ[7n?S#,D9dP,714jNtA03NtA03O!L*I4@5E-*[+0&O!Kr^*YD#n)Q`'o*m#gq4@5:T*>(p*Nb"AH*YD!jNsMSH%7l!X^O-$/X7mp7c,8m=u7tadN,Crb(,99D4*=7m,*XS!-*pH5\njn:qnjn:qnjj!`as-s:h2q]:]-A=dl&Gm:l&Gm:l&K"i<;&k[%SFdCj:ATbp-\!C?:B$%tk5pJW-\3O!NWP%K-\4[AP<b9B-\"O?P<U82d3$Jd$\*hc$\*hc$\'EF0)Q;*0)Q;*:'+!2>R2T#S-0H0%SG\Mf2u+]:>PKF1N9YV:,iL?Q&`PD?&`PD?ObC457u4YD7nC/Z7hXcI+<f]1+<f]1+A%4oJ]%j2rWj)`Ij>UY";2>"";2nR!_FS@%#UC[##UH8F7e#W.Y97'U,U?V#,XblC,`-LR8Ar$F%V)"3P0>ll,\3GC&M[&[87ihF&g:!OM%D%c,Vr0s#oP+?7#[<oOr5Ws7#[<o%,0%_Hac)EJ,03=u&`b4!AB7=b&`k:"LiO,!1?BdCOE0t`"?H9&R<%jg6ok&fU7D.DCWaaAacquU,0EJ#&`r)8ABN";&`k:#Li\_M%1?TpF#]u5#"?K+"$$:2Y"?JOg!hC<o9Y,16`qZQIG=]aK2J./(''[7V+mHie+mD<;8Z3#RKW#98`*!ld8V15-,c"^*,c"^*,`-\b%8-lhH8-lhH8.t:++X-3h+W98E]?DEiX:'l<X:'l<X:'k1Yq@:7B3dJBA6h/?$$IJS&9]4Z&9]4Z,hbg6+m_N>.IC?A<f^YkFs2tZ%Fs2tZFs2tnfL[8!m*[rm3rg[kACsHt+me9O#^15Z1@-9KLj"qP6p!scR<F`a838gWU7E9e9KP6[U7E8:d7t0CVO\\>d>eir?mgdV%_bLi$?mge!Y`hJ<@4-nbY`hEug;tM[[$*j$g;tKMmGs@6dnUZMVO]OVd7tU:BIAiddnUs@BIAp1[$+%DBd]$2[$+$)g.<P][$+!(%g;tQOmGsC?g4`$P`XleW8B)K7llJ`m?$IWj?$IWj?&0b_Fs3$1Fs3#.mD:)>ZjVqJ[$+#NJ$\mPc#t,JRH?0\J%ujj\0Dp]\mJWJ%7ZoFb),#-TmN+fX-57!s9'F9K%>'bn^O@Xgh^;L.6UGEa-@pT<*=@qI`]i^i><S7:PttDHjo+/#'\K6P,2/k`!q#JJ.dc^rTUe1X%@#%6MBno4\mCIqnS+Q4;%dX`u"?S^Y@#%6M@>@ATljua=*?n(/*?kfs6R:p>A8H@"#ON'oTH,3_ZpQ+<[$+%DZoa;aMC1$>S7j:4%"PUsB8_WhtDE2AXOX+WgOX+Z(,0>[a&kQK%4;(bO7oEKF7fr#G873GZ8S&n`$*6K>!Hs8E'm>BY^^cJ0fHHDWfHHC`G'G:J:*)u<%*?GNg_]s_TGU20SSP51[l_K[hl[$S;JNC=e-e-6a8^p<Y8^p<Y3MB2'8YSs88YSs88O]1TP!kjGP!kk<c;1CV,lr./8K]$+8L5B0%$)GHbJTSsYQ#t(mO:I[HUr+LXUr+L0FLWT%QMBqI3NPl?"O[`N0dg8<,_^@)P&r_>&!s*8X@TiH"a/jmGK3Q>,*N:T,;Mi!h2"`;%X;c.N`4?PIUp+`)-5#QA-5#QA-7Q#hR7+,LR7+,LRA@&>AJ27#AJ27#AWjnkA.i!GNY+kZO@^qe,a4%+\0R.GQ_]cSR0:q]P<_0>%P01@515T*\QR#EUQfNf\\Km"mQj`3?P+5>rQR#EUR3YWWRH0#^aWu^(aWu^(aWr7`8L=I\E_-mdE_0$-P=q(?P=q(?lZ9.T@N@?u%AK<f<X@"?9G5*<tG5*>u%\X$X+d>sY+d;sgKG%[J:f:\V:BKnP8UqgF8VJ0KM--*.M-uZ68V(1D,_B=u,_B;/,mAH@PR)F]PQ^@$%-Rl8mT1#nVT;9Xcs6rSemF!?omF!?omF!@2[)47'm*[6nm*[71YY1ZXYY1ZXYY1[c^b1>(J6i!sJmJ3u"a2>Z#^.Y]#^.Y]'\FRn%Lik/2LiitL"a)8Y#^%S\#^%S\'\":jJ@]b07iaofAK=*o@#%MZm-mRrljud>*C:(:6R\q<6RWQ5n4B8n5"VRk4peT[:BKnP8Lj)r%8V!@b&m0oc;H\cO!p^Ci?l_R*AY"JeTam[teDZTjeDZUA3d_Q:LJMq,FVlD>FXSQ/%]'<XKi:l8LJn9<O@fMDUlrk\U_5YB<!)6E%8dabBP^kca&ho)>;DFM5M)^hsM)^hs8`<o8-/r/j-/r0%-&$ChQ&'K1Pm$9u.4Lc[VaR%JVkhL&s):R;kL(dkkAX%H\TCFNk0b[j%kL(dkkL(e.S4fhLS4fhLS4fiWE"8im0UGOk0UGO+_-BSY_H]\Z_H]\Z"`l,XLiY#1LiY#1'[W[U,1*/c,1*/c;F$":!pIc]*-=^t%'m)tm!Zb#BTYi4XTL110F@[^.%]Q7U%]Mjh_^PV.3$f;]3$j(bVZbH,PZ6)iPX%:*&l=?_;Gi3K!pYk>5TN`o73,9_=GKfVlYoHG%lYoI(*DQpB_^W.>3inLe3j]N%LK4KBn4G1tn4K>o@L9D//?--H/-0sN-/]9<Uu5!S$+Rl'!I&c7'mJo-#^>Nu#^>Nu'\oNd,2B"r%,2B"s;K.t3M/\ej8`257P(L=<8qahK8ik,njcpP8V,nkriKX[ml'2t<V,nkrV,m`dn4G1u&50fEGECKtLKIGoLKGbWiK_3jm[1UW%hBA3#42_bVLKIH"LKFWH&51q%@S,Z%@L9\7/:i#$-'`Ze99OM>0nOTmQCMnAYlrj9=-BrVF4bN[:)1c?4,G7T4,G72g.<h-mI3`@%*F;=6h0'4qBA`D0]FnV-=&NI^<s%_"97S$l8VJ0o$*ZcJ!Hs8F'm>BZJfS/(YequjY`i,ilgRMS*F?inetlMI@@(^8ZqIe0gne4Q%H'`CT^e;3@ih]mXOdC(pbY,JLkbVN^W0_B.ge5*Zn>0>ead6n%aEP-?6Jpaf'_WPbM;WTf-)+bh-&$f'>U'(dE_5chE(^N<dk)a"%__!%g__%kX*c;;ShEeUVpi&l@^kZ.2^fG=Zj'(6$3j)HqNF=DZ$,]s-Ouf\0>bY(ID@%aSgle,C6S9O9LKm.Q&%SL5n;p:6iG"B@%"qS8?B(1mTaP\5.OMO::W>Rh?-(2S2NY*-kaX*i!T&^N)G]HG4LF9RlPf&\iOuYYH-(2Z7>]S!G8M4FR/%6e!4h2l:BMWM;7XK/K%1>7pr;?;SX!WZ.OJUf29<!9('!X"QX?sq,''nRm$Lk<,_:b^^gMSXC-!+EGbO>,LR]-r'BG)7N+9IZubM'n^g54'![ZaCb=P!K35%B:g2fM']/QoY<)a5B#S8?"/<M2h&X*&kd`!o:0iXj\o,nm^_WVk;IKfYtHX9[VmU]=MAX6"CcDn?tH`==s%9ZQ<B]==FS3fgdTK#%b9cQ%o5rL']3JfJ*.%u;QZrRE+&aes"O9'iKt(ACN+%MbQaAud_>TgGaY;T)p)uW;NU`XK"RBkfL?t)^/=$\RJ+JCr@VJ]o\I#IX%;lT-'+g8hjYMk/E=5p2ZP:Yd[GfEcg3T66*HIX3B]TQ]^JKJ3Tk>H:9jH\B:[`=eFM1*FO#K.8$="PkK%*D@+EtM(3#0qRA-$G@4%j%%lTZ01%,(Wn7BJ+hJ&YJgFQ*q%#`=^9:!Tp=9Zem9T(Q.Xiq*#jTVqJVa3^)tCOD*hJWZ$1(lVYi$[qU5#SH%]1,DlmsCU&nlO%&rt#YQrRU6r]VrKPurB:6`b:.`7j9o#VU(\=@.&pf$m:rX(;SXBo9\!8#9;&[1`A!I7pVO:gk_P8c,gr5$uLT&*#m3<AH,Qg9=2(%Z83A!M5<Wm0#B*Cr3J'H0<:oIfu6GZ9K]I<8sn!uloXo!Tp=9fVcX_b;?e9PWj#+^/%p*RZ%=J2g%7#m,<6oH<_4K7<_4K7<lkZA%Z:Yb'Z:Yb'Z:ZT6-']`C-']`C-'au;.]W]6L/a<UPuMe`W2,U;W2,U;W2,Ri7jXEG7jXEG80sOk5Ur`Y5q8iZ5q8qr"B&AK#uXnP%J/#%p3"%#6.6\%``@%W1`@$54mZW/uI$0@aHkJ,j:BF#U8Ld4"8\h9X&h&W6;CRK"!_"E"#bq)>'r(IK5STgnLuOU4La%HO;<]>[%<'!T>-oqY?/OtUK6<kk:#Xp'@U"CV5'UtmB'Uo5Y@Zu==fd)iUfH_"BSHOP=P>m40P6dl7,`,@N,U\8"9p,XE9p,XE9l_FkfH^c"%fd$l#fd%qqasK]1p,SHV!"GKpnl%G<nl%G<nl%Hg?%-7H<4ZM%5W<Klk_;f0l%Vn6h81LiD:g+fD3@IU)_q_56RJdG_^5uLO@`iL%A<Mg.A.m7D9ENq08LiGU8O+4M$##Mr;TXYe!nei_!&iLUQ#!Zs^`#*;=MlI'c6A+LL.;<rn45%[n4:>5*XQAp,H54k,CsZU,`iIr%Ull1J"L926J2W60Q#)7%O:@=?BTkqaabE:eg$hNT)]hQo)[Zj]6R)VKBI&j[BI'ga*$b.^EJ^Ks%>b4r@?J>`/<\.6=X9XLMZgCq%O]8btOh`k3'%hq.;V?do,.:pB^c!a,au1d`i.aZ%gos=!gos>B)\ra%_]l(%_]jYLdR\m-)G-VA((#*#,(XW6,^8L-78iB)70;;L%8>$n;8Ym@A$$='/JT"X9Kl9L-!"Ohg^`eh>^gW?2E(D5S%Z-to%Z(>*+d##L,a(bZ,SCBLRgt?q80epi80f;fM$1h,O]9D1O[(oX%&h&N(17SI[5n8AIaPi1ZaPi0[3W'I3-\%pI%Y"W$iK(c6r/o,]r"0d$5Q]sW81N[38:VZ]M'.R<;CNuC"N]P_!'0t>!]ea@+GW,^%jNpCHjNpDI>WIPI#2)u="QYY7J/n7gOM`-=OM`,jEnDU5%XY!L%XS?$ToVH!oT;a+oFXq1HN_K"O&X81O$G_Y,<u`cUd>Q<"NY#4%!'0D.$9@Gb+GW,^jj6L)jfh7J*;0Z&_]H?]3UDl#3U@>+LHP_#YX^2)YXb?+p'?o#*\!=@*eA@Q,>\kqUf%\L7$L%[JTAgVQ#aqj%:_%aRarugFarug23TLc#LHJH`LHGY"O@Pr`p.2#"p./?Gg1m40*;0ZmM+\g#jmYa&Eq2[pPj:*k6Md&Q4boQ?OV?j;N?mVs,]QX5%]TElgjGbGG,`X/2,`\B;-ZLCT-ZK:1aW!6+:>SN>:>SN>:>SO<S<T)1S@"ESS@"CljeRk]jc3hanN`:-:6^r!P*D.fP*G9n!D66b%ejr\6ejr]aXcX:WA;qkpUlE/L[#rKjZk5#&CBVXcNE!o+NPINT&Klid;B^fQ!p$RTJ/m-2KcJYLO@'rfEmdDaj02!\*7bCS_]&=T%j(+.>(aj)E)&Ljp,#6_1$$!7?&ok3H&ok3H.cM_5,iU)/,iU)/S.I&`"N3kM8]41=3?_/G80T[^OX-HmOV?\!N?mI.N?mI.NLU8%%Bd=!4Bd=#:B,u3PjM@m\9?jkK,Diq77Ne4S&I:<8o]ebCnG:O)3.);DLG&_gn3nhdn3oS^^'KP4(TEA2(P-Q3,;9U9UbWEg"NDUD%LiN26Q#ZRC0FhFm`o2gi`h@^o3-5`LLFuIBLFrYgatZl:ZE,Fl8JZkrfHLk:>GMlA>6MfOMa07<OifY"&Jum$,S;D0jFfMW+s7BH%*fF"-/TO1JClq,UClq,UCloCjA;__mA;__mA;crh-X.i.-X@u0-XEN'::<\K::<\KY0SimM/e/aOik1"[Kqg2A;^Gu@E]QC+ZIIX%!HNg/&Kj$R(+G=a,`;Z56*^cX)^L>@a:5FD"M$h(#`ouNMc@b,+cF.G6*^cX)^L>@a:0OMK%qJO"NV%874R@&aW`t[DumL8[Rc,-%+Bp,+.pE.t%C/EWZR@$?%Iuo[g`TCg;Jqj-\o9dEHjIe&njFtg#'hCXDO?X+hKB*K+r,-N4:r\p8/))FLa!RSLa#(o;+-M`'<.(W%-N`>t6suNIOb,P,%hOLC!ohQp.cSfC5[6<=C^8s_87`d(#`uq:!HM9d'lmD#5RpEiaC0p)aC0o*\NuYiPT-ET<6>Zu6q"R//.j!`%a:bJ6)e=d*\KNL9(cTMKWJhd,M86VeQ3`EgA;O:*%:P*D\3ZPhL`=@h.ArPB?9e\RL,%l-*H?]_Oh6Fe&ug])&cluS+s8KhOU='!%&HIS4!oRUG'YY`I^c*MNpkC%lq'Ja&GXE)EDb)&eDb))A%7p]:+c014+c3un,SBg+,Z=Gm,Qckb7,T#M8ECeV#^jN&JT"X7_c[N_%hrKQC2uJbp2uF6^L*$KSn3\\_n3c+QIL(>=&#jr?*s1:17)0an8AuO"#^A]J&`3"E.c0Y^i#@+NI)?IDJ4&](E9JGF%R$Th%Qss1%Q".a5+>/FK^`eI53:%1VLE07nLE-HSYX8C1G";cVFpNUc%fpY5+Vet[+T`X,#_^)*WJ&/!JT06b+:^K/+q?[;`*nFO3:)`a3:%1n%LE6NWcpJ0#YX;e<FpO&E%_9bBm#]@Lljt"h*<P9*6Rq3%6_GEB#aE4:.@<I4!HZ=*?k,2m@SV*&0S^VLk)_q[k)_sG*-)=P6Op)_%6Oj-<a<=q$3M^*o3<[PLLO_DOOGZ'b&28k[!p6^SL9h^@bfL4nF*JiCF*Jj9%PK(^-SOP63I)d)\Lq#)R$/>,_OS9#jIF/MjBS%8%&dRSFL*Yq-L;5fp+XbRW$VAXc$VAXc$`TY[dZL&`(6Y2O(38E)[#jA(E=?[eEi3XT.3pVa<_-,k5K5'B3E[Ls3E[Ls3E[LQb/k!A%EbHUm%P=JSDECPUI7l'naC0d%aC0c&3NNc7LD<]1LD9mOYX3j[<_.oa<X=dS$NY9]+U)nl6=:d6#`QY.\]_Li67V'E$A!53Kn-_@%67V0H$3>6_Kg<5V643!U$A!=KK`J`L67VBN$5)`)$3>B#KiI%TKg<;869njL+dI=%K`JfN6D,At8>TWb+^ct"&@e'-8-L)98B,kZ%68H9='gd9q+b]Wn:sB))q&lR8:Hh;Z@)E5knZ.&!e+cr/$o!'o&!Fh3q&lToC\T#4HBf&).67bYV\G\TOA+%n#U)Va+68Z\P7Ng*%3Xo`Cd)cNl)*4`:RA#fSOr6=F+K#X=FHF_n*QRY$5XGZ8V<B1WA<'DC8ET,HK:Ht(Z9^69-Q==PFL"2-3BGh93II)%P0ohBOAg6K%*JEWO2Fp;]Z9]u8YX&7rg)uJ1D30XhZpA(A2@/YB)l1>(D%Pod%KcT,#:]F@)[$/<%0?RZ#.]Z-#Af%"f\W2lPsOc3^0aeCZ'!Xc%lnm.;I$PN+mXj)ADEh)3+1q2/.Z"&j1?VHC$Y#`2O,OIprp7<-/r9J:7JjS;2PQ`$,[r=/L7Nl(df/%Td$S2!Nm\h-`ZTod^ibN\%EgK)GTA'IodrH>Ea1<G!=<3Qa@\RPlJ")F,>"?G*\-laj)&n7fK%MJ@lAW=t2F9E@jj:?5@@o0.%K(X45.Mf%DO?M),_Xf_2CU("%`.#W/:`(A:(\As/,C*U)*7>,_S3o65&`T4=ZOl-\P+bYp`6Pa/]d\Weea/)!&jgD>B"MCnK\2nKD1N7-J$rG'Imub\h'ICp#U+@-%D,(H``5deVcaXQrT5Cl'Ce!/#NX^:g6L<A7e$2!V(.2#=n0fIRBC-o&8r1/*mEtJ\T'N`/>[$;-X2W%n8g1mu##9UG*oF-/]q>7H%Cc,\*muTaI6g!qak(HhER+bV]6EHSX@"T,%c#E,l6PFC$2EJ=!<1K&!O$/TcK\0[]7<"A&iWK1)Dd3XS6YO4TQU35H@KVd@5:8\@%*4ps8'4QIXU9V6B@X47'fPAR!&GrPO4m@W%c="F"l2Arr,O/oDn=mDi%8M`Xfg6dN&A&&9ZCI^%qokd'U_*Fp&f^^m'p\B,p]sVc%"f[`J"K@Us5Un#>"B$*\J5ej+JlG(XM52mnP,'j"P,'j":*c):OuNms,\\_Sj?uoq+\>T]+\>T]+X`^N#t^RX#m$qZ6;BM*&X#,=%&X#,=&TYafN0(uWN"Brc&Q3V+('78$6Js;!8ED:,#X!5_"IS2&'UYVK!)p69@#>^t@>Yg%9VmHY;RDP.;R@!;.P1dfie:?rie;n\%]F[ns(K++fecAAhL-SXn+Vgf/+b2D1+HW=P<03i/!)h;X5`-IX5`-E\823I3WQ^IH;9TS2MAZIc0gdE]0gbpiC.NqUC<-^WTn^?[%R3B[LR3<r<L)H-kPo5`%Po4VZW6C@AW6C@ABUBqjMFn=LMFn=LMFn>g6W)'h_DoIF(l&qP`o2VN`o2W-EM8(O34+c>3-cYI%PIt#%iIt7HiIq7k`"32%0r+j\0a,98L&a3OO:!tc&-.J&,/D;.WI2SkJT(*G^mhuu8iM#=^^Vq"\D`-@\06V-2s_+6L)j1NL)g?NYX@=f%G"CR2EX7%[%Y8Q>+dI!;Ona.7+bp%WaWZpfa<C$^3<[.>%]Oin%Y8QN+n,q&V"+u&"2:Ia!''V48iZGS#a`RCi=JC,i=JC"*.eHL%6P(]"P90kan3[0qIRkb)IL(VE%tS]p+dI$A+V5,L"Mu=<<5Kf7#]]V_+:^W3+q?g?`o2]g3;el\3;a=)-U.aPiJ1CP+c*on";)K+%+EE6Wp`Y?2kTMVi4[b7H%]PE)%M@`_6_GE>8>R;L#aiL>!HZm:'m&"N?k,=&bb9ekcCp$/3V3kBLE9>RLE6N[cpP`3m#VQ8ljuF;%*<PK06RqB*6XUpX#ctoRWN;:-!pX_m5TPkU73.BoW5B2JF`KkWktjbj*Jt,u6P6;n6P4lk-mF`_7AQXf70M,6Lk%N+Oif^F,+oE9%"OuCd<7E(9J3"qf:kp;o;26CulLGcY*L]Mf*L[846PBKCBHdV&=<asZ9*EgSM,`&7M82/'&Qjf7;H\c$!pe3$?lb\,AK@4q==6`E%e7"25e7"2a3\1k>LF#hqLF!#eYXDk>Q:PR-RL#u^'7k:>,'R.E,uRj#,Qd:n7)V,+Oif^)&[;g7"P09&<7^#a^cEGI=GJ,!=be4'%l]=MB*Kis)*Kg]06P=rm80X=A80Y8J8OTYt&ZMkL&V5'a,-VPIUp:J#"P1[,!Hg@G'm5<VYRXSW=XR//`4@R2Y[Cb(,)J@K,*d9`%7?VfL!G,nLLa"4r8JFbG8JFbG8JF1Y:81:R:81:R:8Z)=FYZCKFYZCKFYZB\XHVe/XHP,sXHP,S@\$J\A0&^@Fco0gXHP2uXHP2u%XQsrW17'*QKskB[>`iQf]-8WNaV@CqaVBAK\0@2[\0@"E=Tm.rMcA+JMhlJb,+oEIUnS?#"OuCfJ3$qtME4uS:kpP&lK!h%dNON6%3b/gnLFdJ4FE0f"l(j1^ks?*cF>?9[TT^f+kTl$2kTl%U5UTJU5poSV5poUl"?Mqp#s,%0#s,%0-dYF"8^N/@P+7^cEoNTgOlW$3%&ND.:jMX'H,0;j5,0@AZ=2M+E3-]jlE_`K&JhB`Z'Bc0L,j0nm==cQf?_h]P?Ne[5MZ>ecOTIRc&O;+(!pJ!".d>;K+<A$!UdGrt%UdGrLFQap1%UZ#p%UT@eiJTr^I$%#^A.M4d0EUJM7OmX67NbtX6_oo$;F)[A"O<^"^c@XA_E!Pe3/93ik:f@TkqGRLSW&[6SW&[E%k[]VtkTDLNP;7.[SWj^O-Y"Df-Y)3?3Z0.K3Z0.K3Z0.id)d+rd)d+rd)d+bO\X%iP"s.jP-3,>E[;aG80K"j#c'g)&aJjS.dHLl%KK=2e:kpZ$;26e+lL75-*PP'5*PMfX6PoiH#U:(,&k3ua_?d)-(oaH$(]eab,=3Eb84=Q5#cK72dX=VkhL6N[ier=JHkB2102br.%1]m!I7UR7f87e?n&Q"6?!p[!Z$L3^B5TS8YW'_K&W'_I(F\!aM%V_`5%VZ'q+cV"5XHAB$=X0"<CBW)-)QBAsq#GMM,Cg8@Uk0(n%"OQ6b"?OJ`8ijm&:kq"3l4?GmlL78.*Sq(#_],SR_]&W!GU'F&DksZKDZnW_*!(2<,8G?W,=7s6&P.[9;FuX&!pT2D+<B<0-(V[\%5_h9"kjV%kkR^5a*T@?t6QEW=3kURV3j]JaLGg@'Kf)a_LG^:"+cV"48L'L@=<gWPCBVdgNE"'B)?Fkl,<u`UUd>Q."No-iTcDcW%V&\1pPX?B%jfh3(jfh4I*7bC[_]#M=lXc&@\R*hmPj;n?<6Fl38"a,%5d4qfE^qV?qDG$$Vd(m!"NpCX7ge@(W?Y6BQT>30HDr-S%Edal25d$G7!p"[,,8G74e.EhT9-"%R4[Y;4\XlKQ.+^86&`n>L,8G:5`"+QR9-++T^#Y<5\R+h4R*/tFF1q4.MRd'i#ajqe@m4bN%T/kH)oWh!&>efAoY@F`%4]4#db8p\*^$H=bf?557R-S=EJ@Q`\DE2(kqFK^Q07?6YlXc+W\mG)$"^Nd."OQhI7fZgJH_c7rQTYE7%HJ'O)Y*V:L8_6TWJTSTt&P1O"3C^0I_]C8&6QUf#a<MlLmRUn0mYFu#3WeVD7k3kE7t;WJ#dD2eWN_RJ!pl"=J0"2OKcT^iYX9H4%G/tmCG/toD%XCIH_]>_\_]8c$\0Jd!GGN(cG6HRWNW;/rOU=/Q&n!)>"P@.E<7kW@!':UPKUiO7$9JP>$+oW@ZGTE=aU*,'8<S-/%8<S/P0kHKSP<b;<P<b;<P<j5`SIC[WSIC[WSICYpmA,4WmA,ghmA,i6BIAKZBu_s$>t?4gfL[8YfS)_VXQsrS17+W;b2[#<T6%`_%3]SH5f#](dFZ:YN%YpjcDEE$0R_/r^6iuY881Nnd8;'#D&l=?N;Gi3:!pX_q5TL>+73)jEW5BbZFZ:W]Fco9<*>/[S6R''.\o^IM%l;AdVFfCH.G%m%;g8.(Zgnd7;mnt:-^e9:_ih\pBo$SY[bY*QklD6fKp/3'5gd<69H`<),^/RWQq,/@:IAr<aI2F5pI;+cC^GJKS%?Q(1)Ii'FKlcC9k=AK.C.Fs\PP-Nl[[KuTfOdq"dGpGDG%?Dc)[.6cQLfXBk0qae$Oonm%,c:Z[BI#U0Pt$q94)#t<e=AFZ9\i8b%ajckDP#LX@*_E6s1qFiO-]d>Q\W[/ZR6-6NRCSMPEm!0/,g"7N`uoFNQ/n1@P=h"K4/jKn]9>ibF*BB213Y+0,]e/b8PZfXR3Xec%Pt@.$SkP;GUaM?O,<`"O)<j^=WVAh,&cU3(JU_Bs;uide!Wb#I+CLW`'nL(^^d(R+(mlXAKj^o+?nbRn31)2;*=tDFPGAS9kbOA`%0mB*:M:$Mu/kK[rGug)`9@?6M2.[C.E7QmXOtJNLqN6k23m4=8.?dliqA^!"kGW7s'U*'W&tK4Ra_ls(BhFSbSQV<@Z8,#*RC!Od%0M0udpqsupBn%2mRO#K]2[u-"2A82*a0m0ME3]nMI`,5!Hc<T[9bNqV?Fi-kP3pQ_%=RlabIXK?Z<Ci8IY]98PNZ+2%$jH45-lb/%,dD78C,$8kXIF$=`fKnU>OZOJ$:L'-EHR'_2BH7I+\WLf='4,g-AaT0hZ?1ma_"uH2XrS=8?#Mq&!f%D2W*bu:Qo<fJ)EO9PJlmP%Q2G'RCqeBKO=#enKY.%rP&.iCf8q?$p*:P:-HU-ENXa%TCn^m3g5j0HP2.KcjtoZrmEI4cA<L'FNe-FS`oP$M9G/kbZ-Jcp@qes_%&m5'`8[<[Ijk*n84o)5HHf?ADHi5nj>-^RIo.%('8ZZL+1HuO%1(3"&6R6AAEj7\MOefIaQ2AaX87FmY0HD?o`P:5LLa7CF52X].%9m'6;Ue,$H`Aeqd8_IT)9bMdbp\?L73j%+s8^`=9W1OB[UjF:I/4>ZH!p'.g8\-C8WD:U)_lt+)M1%n+NHhF&qt%%?%m)t'GE\hS%'U8f_U65LS>`oFl>S9;Z9EIbI8Ld;o8Kb!COsI#;P(TPc8J7q0OsEb5P+628P9ailP9ailPN5,1R3Y@&R3[VfW?`j]8gOM91.`+V%1.`rj-'BNK-'EdW7$<F+6kXHr8-2R!8LdLJ8`6S+,et+VUr!h0"INY]!)lRS$<'V2?n.?CQ=?"VQ=?#m;OJf''U,>e'U&Za@Zl7>%9Tk924:k==P6@&k,cMp*,QX^]&H\bq,Sd,B,_-Sm"H[)U'Tf1`,*8Zn,*68s'TT%^&faW.6l\p`Ujt9j&qMl.&jV=F;F)dp"HHrS%^emdgb#+QP?kee-N+.rLN+.qUUPL1'<$FnX'$3HcJYIrG:_]&Q%Rnhl.?$ob7#Xd(7#Xd*UbFE,&i!-:M$TG'8Kf'/M#`<)!oT/3%&oa3`!"P1q_T=(&JAWW5E0qmN%[3[i%[.%2@?LUMW?daIW$LAl9G6hAPGHQ"+pi3U,QVe=,Sb3Q,eskO"LoV<<4F*7!&m:YpkD=;%q1_HBh_7X[)^\/<gRP=F"Q(n)!1Z`Gau<!,pkD?Ai+/!M^1!2?2bXkZL.P;=L'7Y90M)6a-:oL'-4,>eNY-r^,cQI7,_9p%,S1HL%U_"$"7"@po7"@poU_#.QOs""e,U-KN,_^1dP)+'+P)+'+Oqbd080Z!K8Ku*L8Q$+d-A`S+-A`S+-:qWNRO#^/6kUXq7?YNt'M66Q%'M66Q'M7^H/kqMG\5Z&<\5Z&<\9(:Lj3f4cj&.39j\dESPY7E4QpW2$F3#V`3D:&>LIhR00M*bW0M11B-4-3[,cR<O,_:$(,]F6Y%Uk0)A7%hFCJTR8)"a,VHYRZcuefg2Uek%+fFbh<9%[!Q]%ZpnD+d.@:M'S@.Qm@b'P6B<BP#Tk<P!D'%&kIdL;Gi3@!pVI25TM1C%AXuL-:kqUDl7bdZlEEN=*@;)k_^)4[_^#8*a"[X<Qm<DhQmA=7P6BBDOqcEB8Ku`^8Ku`^8Q&ZW-:tEo71ujX7?YO!'M66S'M66S%'M/Yt;Buk?0M-r/1eA&>dNfFidNfFidNg9?99UVtQQh8gQQf"F'$<Nd&aN=?&aN=?\\l!88IFc],n]H@,n]Ik,q5ogQUIoJR7+,L%RA@&>AJ26XR0;(aP9fHJ8RNPc$*;#iWN<u_JT[>*YRZkmZ4<'$emX`W3`M9b3`H`s%[.%H@?M>U+d0W%M'S`(Oee]]OTa5YOsK?=%P+5W%OX+'G,"\M(,0>[a1.dXO*E3g?_B_.8:*rQ,:*rQ,:+"'hFYZN$FYZN$FYZN`W09f9XHQ5=XHQ4r@\#'3A=ZDWA=ZDW'C01l%,jY"<@\$2U'C01l,jT!(,jY:HZ6\`i8RNPc$*4MuUll4O7&30q&a<1=.ATV!7&3J<7&3J<Ul[2t&s4e@&tppPP(L8%8VFZ38VFZ3%8IFb2,RMts80ZP,P&r(BCt8=5)f1BW,$g'OG=dQ];FuX9!pP##lN'%OOpX6T&jV4G!pG_;.d2sc!1dY`"J'(d"*?:i&p,m#&p,m#%:8!eBP+W2H,WR69jMX'H,fr'7,fr'G,U^l/-%U+m8Wn-M8LimKOsK39OsK6X,WTj>,"ZfmJ768S7$>\Q6kVJ78-7ud8LipX8H9bX%$)#0]WMIEWJTR8)O:IJMOq*ZYdUA;(3_Y]/3_U/WLIhR30M*bYYWs<O-4-Kc,cRTW,_:'X0nOL&8Liq7P/'(O&ibY<;E1!iM)^hK%M)^hK8KhB.,XFIZ&jV4C;F-(/!pC1e!$*7T"W\cnTYi#UFI4<gFI4>(%[.%B@?OU:@?Ln<La7K\Oee-MOTa)UP!HTB8'*.,V+FQU%QR[h_QR[hgQS(iq?+M:J?-4EZ?-4DrFX`L[FiYi$%[eS>LIhR40M+MM-:pXs9G0mO8HS028Lj!Z8O+:C$)g3;WMi01&aGBfVuq10%,R&=H,bPX0"OnTX<7W4U^cFjr=GKFF=XT=7e01!*3^f-g3_U/_LIhR40M*bZ0M+MM-4-Wg,cR`[,QW%T,bPX2UnUU2$)GHaJTNY=%.d4*%!$*BmTYi%STYi#UFN6*;FI4>=FI4>H%[.%F@?M>SV+Dl\V+Dl\V+FQ]QR5:s/k$DX/k(r?\eI`S3^aUS/k(qT\eI_h3_U0K%/kqKq\hluH\hluH\hltckqG[1F=E@YF=EAp-^uYZXTZ3L8HcU=8a_*]9p,Rh<(R5(<(R3R\Kh?"l&l<n.?b$Ya<ZI[.?fR.a<XRl%R3X4/P6As8OoRL9OpX3C&h$9'*L+GeWKb:GJT@,':_&bd;@\s[Pf"btEgS,+Eeku;%Zpn:+d,gI+d,)NM'P=rOeb;ROT`fMP!D#q%P"I`.&h&N,!p)+-.ck3(!'*^c+GWNd+brVjj=j/U*%"72*$tuV_^'eRQm<Df=<Lu]P6B*<P#TY6P(:+'(kF\@P);7n&ho)4!p21.%$Kfb^&a%Le&a%Le.@<bl,VYQ/M(k8?8\nYh,f3fD,iW'd,_^:gP'#sEKLmB7V+FQMQR7PSQR7PSQR59)?(*$)\eI_(\eI^Cku&c=%ku&c=ku&e;6b5*G$L(G7&a<1>&a@^i.BH1/7''%L7''%LUqeTo'#>'G"P=l],j]')!'<je@#%<O@>@DUlnD"]*@=@3*@;)s_^#8+%W$E+$W$Hs8-4-oo,Uorb,QW(E,esnPUr!V("P?9k!Hs8E'm>BY^^cJP@4.2u"?W"s$+g["$[+9s:9]pRP-gEEP-jPBZ7*)D8WpHE%8WpHE8TLPr9Tl3B9Tl3B9Tg(VA:Z#nA<J5*A<NHr-^,fiQcB[)_B_.X:*rQL/khF=?(W@-A0!!'XMZ<7FdOG>FdOGj\eI`S\eI^C%lOZX@\eI_h\eI^Cl;Al>lI$pilI$q,W(W=BW(W=BW(W>MTIrs%5[B6m6=#Ho"a,VH,$g'O,$g'OG=ZqF,R&=G8g;h,.Z%PW\0QcO%LJ&iH*AWIrGK;$5G_\s:ih]<Mnkpf+k+tWNp!P)dHYJXBmU;9o]ei:\?^`7*Hteao^,/Dh+"Bin?`GB'?^`7e027U]5=CZnod#]2%X='.k'^J=9a]L4LVI31DaXPl+8<Q?o&4pn1.ib*LZsf-YJ6"!g%VTF:S-H?/P2pjg-:t*&A<NH\G;;`FFXN@u;g0ug:8p=C,al6%%iD!qPA<NH<GHsIhF!m.s1NtTG:7423,al3d@jlCGPN7t>P=^qJ4..@^]9>faF*EusjR+]naPC9feD)&kM$C>C,Xcs7,W4";,U(T'%,U(T',UrL]O[St+9G6ma0M)TO&!KBa9TqjI4A:oi^r%E(#,Xp8"s+s[J`%]7#_Rn'+q>Y<anJf=r&pMpp9"9XifspY+?,h'P/6j%%lK0YmDN32EZ1(?iX)Qq$Y'aJjk8gTU@#kqaPN(tq<\gV%l6g'<@`r+R955c*FlUn8I(/Gin\fnA5@]1ZA<oer05k>t+$N3];:7cU%/,A+)GeVb<R[K1!8tITJ4]LiHi_u@15L]H;H]t?r6B%6b2;7c/o0OuY&a7\>`#^4*j"o"qQIoHf\Ae_)Y*R^ugS0\6>[f?uCXZ59%-(VFhgHZ+Z`;6soqrOt*m[&$_-(Ul0I=i$/-.^>nX06G'nEibQ3/h(i\Q;dS.1,sG452(KGI8PE<"Z<VYa.0VrNT9m4,7[t+'N1+%+58S%^>j[!:Ql5r9"89W^+js*nfO'(@WuVZOij=cpn)Z!p"m5^M5O,sIOI*)C#&03p"6@Aoau!Gil6T;?FHbqd72=Q=[Zc1=ilk1%qiJa&-'kaeo@tN?kUL8u,-f\M(.f&1.X>LU5>H($`+>b<&53;/MsHD*8d<JSO2mY?hS,l>6rJbropn95O^V]>j4pR1''ngcQ-$>-%@UcrofdqmmPL1IS^,iN=Hg;TO"eh<B/d+kIR#Ip;o]Nn[`n3Ha_o1[B[!@cQ-C2gskA56XR#G('Q:?`09]rfr(aakcNnG7Ymm[+j%b?fu<OV*J-eU-%4nPd6b'O"]h3Mp7phm)<r@U`kPj95LuMTK57VRj66elof`PFqdJfs@khrTfqs:[M54X,D"MY?[<FY?[<FY?[;*%I-%(&?`>F[?`>G$qFX1JqFX1JqFX1:d8r4u,1u%:D=ds_g"<)ER#Og*0H6L3?oBpB#\IQ[&Br-@0USD*$A7$a"9qLh3>a:hjih*M%.0kL%Ua1S4;GIWi9'K5D8I4@O<!_NZ,_TGo8HNCtS-Y(:Op&cr8HL-5'E[<j,_78<,_3-t:&maVZ!6>%*O<S>pmX@8'`R5)-fT(4%E$G;D%OZtF\NbrGb75nN?T'kmoZ[h?7,R#)6/UJUUsKo07J+PkJ\G58Q+go\cke8;qFXD[n3otN^3D*B(GDW5(G>sgih[oKje\L2%)dWm@Q'RU&Q'QHBDeLTA?>1k1?>1i9p.@tLp<$$"p4eoS6Ee%d7'F7f7'F6;cqCa)QVr*aQNHXF;W&R%9'%("MKfq@$FE/nWO.kT%!pn93J/qfcKcOb4YR<6u9%^Dh8RYomE?`uq*[bE&mVu-,Q[>6YFh,PL=N;a9#O6>j';8058s2qaapE0Q;j)4S.EOUBPS<6L;n=ea%P&mQNQ#ilQaZ8.@6lg<j$$FlLM)t9n6lg_K5ok8DU(0C6=XQMsKK9O,6sX\R,1a$P8O6X"Fs>GtAg]oNDK\oSQQ)1qFh-0sYV,Z2%.Bq"/:'A2h&-9Dul_M<+6Ue4H:]Y_F.M[+^<+$`$$EV-AWNa9:!Hok@^^`f0_@B!<fV,5D3u!qe3trFW%RUER@Am/Z@An]<$l*`:%Ti,lcT`XYXW'EEYQ&7X;'l\r&!q&lamc"^FV;_tR"l,fMJ3+I1ME;Lei=83Yi*iQ`i*iQL4:Ds\LS7V&LSP"A>Y8.[&U&&9;NR7"%SHsMOh2.5[gRT&>j`W"<?>as2jQ1h<#P2uJ'/:"h-)$*jEhXVH8n&<.-*`6)El+DIPqFAJU`PgoV&kpp;@cJJW@(L'"?f/<KH@!_%64[(m5S$d>TnfY2d)/jD;%HeUWL*LRLjHW#8\lJFSqq^'mtn!0qjnMejdmcm?LE.QeB;])$MAGo'2e3X6r5PG4XnlJ<Y>"D<M1D9%8u3T7$J7^H!IMm;'mn"O?k6HFlsZqolsZrF4_tk;LTOIZLTMce8QLCga=<I$a=:!s=U"(6X&S@-X$Aga'sNIq;R)"Z!qriu^`Kr,%?0l"#<:"%oJ3@]`Y_T>YZ%oG*lliE[4_0h84_,;3LTCRNOB!e(n5[8qq^F^c'%kBu:C?f9k7_8WG<QW4Ep&X<^"iEOfZTg]KY?1;%jM5*iHm7q9X!IBM<_h:7=\7u%=\7m%Xdl>F[F1nTEaV\[apED80cAUOA*'ATPa+&ujK'?RlOqU^?<A_CHBM;=lH*3iW$cHD9KdYO%#PH^N"mW>r8u3S5TR]265QQ4JJPrbnp*F+-/Pq*`G!N%Z@g<^PQ\Q.GfE%gX:YlH2PI?Y,lP\+bm)`I'm)`I'm('TGJtBW?KV$*s%TSL$TTng,ZoFP)S*o]eG*o`'MLUR?Xn5_%3n5c2'h?qcM>H-,i>Ch*V.o9%$8qe>G$ID.F!IBPPhgh<:PnWd8XsEX+>Y4'L>WFN7%iX3nn\!"t![rPrL]Tm$!]Tm$!]Tj0%Uol!7CaRHJ6"1n)TN('Y#n"o*-7C!t9i*>1fE;B=YmCcY@i(A]4>oJ+Gu@]RjN1[f,>\$U%JNW0I#P5f>3?q<$9:+p9+qJmo+qJlDOb^T4bemaI0b8[YR>8P?bX5bed)03^kTR/UoIsBBcpM55kiH\1JmRl";P9AgTa5tT)iC;T%]:fr&j\@.S?LEO\d*'[1$M8?p'LD1I6pQgX:^ZfiYR#Lk/0GIUV'6G("luA]J34O3$9](=TI5L@R4!dO`&p%2aZRs0R4!dO`&p%2%0M`$K1/A8#M0W!$P'Kr-P'Kr-:<\p=P0B--P0B--Ee9l&Q@thLQ@rSj3;O%H*0ppp*#>3&_ZKLM==Wu_=@>:d(9!#*;Q5Gg!qfAl%TH4G5V&gB[e8oEEkAl3$\K=G;*rDW:HFY,TW0dCT'^Fe/.&(&9LEc$FL+!<"E^(78%uVa5LW4A/*[46T&!J<=LWXYS*\L*P(/&*I%NMU)[)G<s=O!Uc\aE"!r-;.5IPpNDbb>P9ob*(8lAP)/1Z^dtLc'$T"NDW*Wg_ckaO,[!>^"aGncspRM_S"[R7*Ni6;1a)(01oYZ%mY`:O*JXp_jh<,HHIsdC*\n,Q6Y<=I_e+IGfITi0S#'!nRg&)NZ[b2\QARhI(9f0W"mVef<9g0`LjH@0J0$UAKcW,[d)0GrHIsb`%HEp[]*]a\Q6YECB6YCsqkU\CuS`MKqcrhjicrj`t3Xa.>SYZr0SOLK7Aq>34=XrpF=TBL$$c'YlWPF_E!q/Hhl'$>%2+lh5DN,ju%jjkg]?>ba#J<sK8#^Em;ML_%?UE%(mX\f3`KU)`^7`u*_3%YG!Um;-)<m(eoBIt5k9C`RfV=G+k-%Uj"P/+tL3<9Yi-%Uj%P/'G#%.DV.tP.X.t8`&F6S9ThAP.\t$;T-3&,Gjl^pIGncEfUn80DA!d`68*RNg9+OeHk0r(+Fr^\ODC3G8qf_QWp7"iZY`=\ZM$,j+;N#%/X:R:/J&Gt"l^]6<8o(05Wm7+LkjY]M20acnM"04*bJ&6*bL=lLY)\"&6gXU&6iN`@LLCICoPWGC]SjL/O0iQV*Y^!"mBC'!'SPl%]?nH3WR/P!!IC+b5S(2t@Loe6fL'HUH\a8=H\a7m&$Z<++gtA<a_cTU<j!Fm$GjF2-)GQ6G=`D@EgIJ[06]u:griu$`4aqP7GQ('%;@`-V/h,d$DG,!\\`LamoTnPZIS4\l_<&Tu%$qI5-+Sfd;RqS<P2*rm3OgHMjifm`/I2$]KXA6:_khBLK$+0Y)(l0h\t&(7i032A%J<0(q!$Bsl<:I.u$K,F+'Yqb4.2@5HFTV?j/k+].\!.4`G"Vj`GmJss];8Kpa`2lYTsuBAH:B^pHZE@(HZE@(HZE@dfTY=sp5iOp%*g018Sg5,NLZAO0OBa:.OBb1:*#GQ/j&2k3ir\mm>bE-u9;N\i$e.OaJU0j>Q$STuJ0'j]cpMia$b_d0.eQ\[!IIe5K=uA3.eh_<%ff]C\n@@NkU[ji6:adq2IBL(RT"b^-V;_RS;K8].9?RM<RH:0BL&g/:?V2JLm[#+!*rDc>J]E3gKn3jHKPW7H*rDdiK"5=46,@'G%'O`[IQfMOh/gh2S\f:aD9U?t(Pj39!!9Le6O8=ML&YLtI;ZnMnjV[R.W?3?kW@-j@DjW/tJ6/bo1#S>_;?sk.\fBa9\LpC<:U8/(%b9u$j9;XjT3$&aE\T(6do!*0A=[(O:,l-(PV'c#F-XaB!m@0gi+5<[B*$<q4OQ/.MAM,u,`]#cskF9(/"`[g'b9tp'Pi\+qP$'uj%/t(gbluL8>8Tr5GY&'G`ra`X2U-I<`)?%[#allO/9B@;)M`@*0$Qr-rV33ND(Js>$92$W:$e'9u0PmpnK(.\pJ1s]a9#<Dj?t#KV%^bAKLn#^F&IadDjQ;(_d`;JG(J+_iO*.Rp2rnH9mJ,@t!4PQKXrUVtOs/#[gGO9T;IN0I0jS<_$]WQbSg!@F?^ZiB*X'be6J,&mW%0ABo!qj[N0FrUGCQTtAFT>14"\c(^Urk.tYIe;j-s8CKkfBoa_\'o[#i\t5ZHiB:9@(XBrTAKC`ZerH@q>&e.IKP<pJ+J`)h]72Z%s*1F\rRX:5a'\j]k_<H(j5BqYk!&dXbk;k5s)%f248[&OIm'&9>n?Z+V_>fFUV6I#4^WL5oTap$SYCPq5@8@ef5cZ7^Zr#ZIK$_%%J,_iRgjRe(rq7X^i]Ur1s,"(rn!(S3rXVf>rp$O#:LF._jk"G>4mE"EK:IS'KmS=Dhu)m50-:)UiO>EO0=(9+J(;$Zo9\0W]"biN%jnSTIhhZdVo=2@fs5X&jrl:(=k&%bPs1/0g`TQ]=GQ7L)CY*h@^O,t>\%d96s$cFj%t58@GDnbpJ,F'F8,N$BqoAa,li)7t.R*?%%^%oqQGlI'c:YpKtqX\lJ5C)k7#(.4ts7Q&CG@00U9rBX/Ujhghf5H01FW8.ZH[bDmM4_?I:2o9TE#n[Z_;"-[IJr_g[`A,+pf.as%?Gc$3?iBT&G>E_gr.:9@IeSJ%b3M"$Gk^4RZhNFi```#CIs^_VP"Riaq87E[:V-AYlhSfSYFbdmgZSV&ldi!ek\T^8rM)fAs)oIi%C>=&.oX_e5HMtQi<BDN(dKb8qIduRd\'LZG_qV(rrpIb3$SLM'lhCaPn_Op@cMc"Scegp7pZDI+62BY5CC<@ToBOLX?bL].8Q3,.%Tl*5rgCWX.KR.^m&F0/:<SrO-=2DI$hEGdRp<0)CH1BF%&9S//W;E(:D%QA;#>t5nO`"[-.r4dd1":%Kp"e?=D%-)#7?RU%U<*-0%msO-gQAGS5U<)6)J&_0_`EiT*+2@aEG>B;5MXSm.s!?/!>YDtZo>MMQ4b%)lrV$'MQb?O'hb5Y;lrVq*mN5hbIR2?[q8^R=?#]'F%j<[%jpQ*scs4Q/EJ#!*0S5/V#B`".*RZI+=IeN^,DkGcIHpA,>TuL1Fi">m+-ZC"ArL%Taj*lH]dn:LJqmB0Q9qT3(e+a5D0R[/?%i;UR9/N%K?%GXh`J)3UF\(&2.Kr)9.^pUS2mGXoH/i`N.C>aD!`ER*83hF5@2=L^<^b%G5*uc&FAcMP9rStZE)SFtn&!QthV[n%g%Fm^<qh1`bAJ%_X)W-n7rm^nXKq<dcTDgq^M(7]9^bDYf*bE%d(l/)/f8mHMTTHh2CiD9JNs.c97eBdNSh4s]D+$Hq&hRXf^rj2?*%R/bbAD^aN?n?mN85FgW`@NcPPi5O;3p_>o>q1kkt]`0J8E:2Q2\!N*OienoV9"t/mjbqab\+XH1?U"A?-1OS&jp/Yeq`:>/Eq5Rr%ge[j^CV'-1O&1pb_'=8@9Ds8:o'$=cDl<&Qn>gj3r6(F&0/.mJIfB/$G;%h-("LLLDgm?@b0Q]0n`'6=.h4'=^3oqPh;;Pem?Ff'%UbU!?f.UH9ng[qkORTOif!U7`[qtrN5)PEK\_e1e\Ya!;N/I%Qrq_%]re"u/QfkKRephqs'*`s.g;>d+m/(j5&#<cDg@\`g]DbR8%^"W1.s82FQa88Zg^@U<I,PRi,qoXc]WDD,kf.VC;s6%FIm4Z!8n%6/WlMX44oqu_8]_gNckO1$Z-iW]5["jigs)-ZOD+=+TUNn^Q%RLcq'o/<@hS'emnBRZUtAojD.pS5pcghdhu2N)kNQ.R)=e,/`6[opr0/EUdbo33j02N)i4Z-$o!o:`"$Y;?E/S&N%;B)VO`0>@5X%JqY,H[Uifl!E\0g+83Y7rL#r7W1UeLh1G1K(HdOmr4iQPW'<Iqq=;cPm_,omVEME'J,JZXb=cm.GJAW]%kCi"0A:+"K)"j-jUXS-%^V<#/qX#(N,/3P]cJQ@4P<SK:3Bu_L;@qkY^O?"Wq<K+[U-JZT)o92^m@,3rrl(@ncen]bmISYRo]GPifC,72\E0,Bi"b&<9\5YE%\u7^(-(AeoVXOCkDTSbkM.HJMrcsm/s80d9Y:j$_.DPYo?`<)cX*FWLrSb%M8,;F?bB!OJ$Qk<*dmXX2rBLN#IiIFbIo85qJ6qQF%^3op]Oo"Gm;)/'co+h!Y9qKqt)2iG4`((Y/?$oq-p[;It=QI)!fC9Lr+jbI@!qIMt@;`W6>OLKTcMuqc/sN>kgk?@YT#/#!/oJ4X%>OLL:]=?rTDRk[0mc#lFGOb6"%.PE)=hlW^njAqb0/O6Qj^'!++kY=+^#.q>>\thPVX/g1`r5JI]75,&ik;=m#Lp%4Y/e02<rImA%5^J!,I8ff'`i3=GWdhi7"#j6[esB[rQ[Jp.c[<4smV4hjMkc32mE9CjcJ4_Vq7c=oXY5$OIG)N+&AGdr]Ic-bd0Y2r?iKP]S9[5%%YXd]\m]UoX\_m,4r4(AJ;"iN=p\]ft>8hrJ`_oIe[e&YU\Xgs^l*bK(q>7e]%t"u`Df1%<bs1"43&[^^ps%i-QTj<a0!9@rapUuC%e)-D\UR&:cQTtE9OrC+!hYlu=HKFqU7nHC'&qp;rRmd"+L_%tN\D/Z]:_(Li<le_Bgi`?UjD3!Ho\Cg+J#-;!a2:>Ys1e"equ?U,%UO[i>oAWfnpD;_6ImR^o[h?DND5uf'-eY];<F=T&Y-pcK+shWGZA2Z;_tST2De0FiYV1>_,KoP;-NBn,*j4W(rrBHU&)cm5W_T_"%lK$pTS35_ePO9*_34\)g*_+,jYdXRU<bq9Tpqo5mqL.o1"&P/!]3p'aI<kS[gY[DWo(hSZQ=>ZB\aN:4jH"7#%mPEGh0TI3^OGk%%ce^h`r?VjLeF.kU96pKu([k\CHhKX*f@ap9g:t=GH-%A'^AQqOf-fDQdr<'IqUP2PJ,B.nIGGgl"^UMdYCEp8p##0>_)2]>5*6ia%7I[nB7,M?l!rk0+\db9L_l)8Yl-1NlVu'tZg[OHY%A1@Zqm8fE07Wu``<FG>g]gSV:nrCW5^h,_eGTpA2LbLAcf6p4\pO:_n^D@Q%o[0/ij8S"tTIr;"CE5deT>2</P&#:bA#SKjj4NVRn*>@=K;Sr9Ge39Wrp^4eT1H6O9fKha@E"^#V:e%_VL?qp^4$"VAYZ$$Ds.^9%<kW5=2f8Q+Uh*oIH1SS:q;8i4qWr_2kYZa"k0'[K?G-0qJ%6g:FlaP?AXhI[/RpFqrU5csO46SshHmAje3^nGh:'^-r8FOaq]5MI%qrp?*R]\V+HQf2f2=1*2:<d)QW@m%liE@[Qklk<TRND/6idN[]&*i`IDSGWC+8hic>7g)YmEKudA%?Q\S(!]gpr2#hm`EL1hL@1"%b3jWfGWoTID9qs/S:c"i%s1C8:M+gb:H_7Z/]r;3\j#,JI%P*IFc0?c`JEUkYhT;G:M:?W:F9QH7#Gr%q[)-m^:2&e:KMSk:\\,I%okcqPgO@#sl-sYK$/bTb>@7):LNchSTA?ph^3+!Ocs=E;Y3`U"m\ea'4e+(gT2j?`.=OM0,J:.^qbZ_[%sJ'ckg=l@$^KMZd)#kl%W]u?B?8%]$]e-hd&Jn``/R!F*.":ir*U8(Yr2Lq<&+)m%q@f(m%uA'ZTg-(o"@)2D^Mj"Qr8c]Bo`)K&BRK7n%\R.BH2Fp4eW?r=%jaUI2dO,X>g_LC0V?ZV;T:jR*"/S.EoWh6da,jA<i'4q)p`I4!>Dgm9rI=\ieeS->^i[PZ@$aCP=3I@CU"4?Dnb[I-X)I%UM-*j6%0`!.5<:A^2g(4$\rUPm0Du]gUgJ8qpnjE$h%qcsTh:(7dE91/l\/QLFT<7k2r,3CKJkf\PGg#Q'rVG3^4s2>&!cQMNohkJI;gk#3%iV"mPd!)JhFKtJ%O&_q46OFK:s6]4&f3`rG_4'T>o1n&N7t19_Lmu,Z7WGi8KC9N"?L8m"Q9G$<:#%7tIf/cu&(%g.cA:IAEpctp%pO1TRr=HaAiGUgkgFdUJh>ZqoI]qLS5Fa'Gs&Hg^qY?&Q08MpihUP+8=5$;3J,=\V4OB,bB5cXUq7AR=hu*3I\^DFl/n*9#(WiWQ%YPQ8;)l%;0qH3.VnbcJ_^(],0J(sUGpM[ZSn%!5k^[73]s$69r>CSMRIJ`bTs8>*(e/qk$]^=VMmB>f=$`ZCn4V##qOR$*-b>4cj%p62Eus89jZV\^ldqWS382^!O@$Q)*5+FO<F^,HJV0_?H)#5=%!f@ts3h0S+=g[G<JhRu<W\QH3688\(:W@FOcg)(WjiEn6`4opAq%'(TB[HLBAhDQA#0`)Sq2$cY*6<BNJ#o=2P/i(nV2osOWegQMNtq^h3G^2q'g^>aaYqKhHm+*(0O5#J-"c2I9Y:LCkcrpglO?Trs_%d9-465Om^q>je5mqp(Q$c(FcE]u8gBq!-%h:S0e"p&+KpT0</D!Hf-L_LbRu\US"5]tMD`kC3BC`<EsJ[IX#nJa1WArj+ifkIoJl%>G18:IEV%#"C?!s^]3)m^Qi.kfkYHd(MmCQ""u`T/Zn5p\'L]Hn,"nt?bCWer,SqMH2/&Dk5C;(h4"e(PrDe?,(B(Uc)V6?]RT7b%htd"hDe0:6Je^!!9-:mO^]3YMoDH(a5YPP^n2%j5s7#ZApKpAT,MkS3HWato?i8h`o('cck>1R(%/JT*Qd:-SjoT+pI.Mttb6<=7%ECK\MJ*uKKhdtX>qF=(X^V7IlGl$d[f<;pf'/TRZK$&:%psm$*m_e\o0Bi#R?bCaUqb&Oh^\O#/q5:E']Xm1Ds$0?>"'t`df`NjZ%\DZ/GIk^D3`tFHB>8bA]%-#TO]aqU]idu6dHLb<-rbFsKD)[YoYCj?%B6%#.`r039PnubLHbb=H(S(BqpD+:N&E4l-Fgj\n>9Uq?%Hn_0Z+iL\l>R5>c\R0i)nL52>oX@/ClQk#e#@%OS_7<p&/&)fcr!*QPY'LlCiRDjP!eH8:_N4?=*o]*>QW0[7meca.hnMt]r;k^I%+797qdP$+Fl__Y,;9Q<>O5X0X1u=OkI9utumAlV%,0N(I`NQ7\j4$Mf\h-9rj4'&e2bmX)Vn-5ph:V]iro:mjC>IJ!r:^#./)%Rh%\+<Y-FXu1W'lEoKU9/40ft%r2^O?+Hc$R-Z#N>u3:[VT:qe?SV94#Z.,P]1<R;[i9q_$tT)KqJ:pSQU)"b!t>h$:Z](U$&Qrl'fI%n)(d`'&h$s:Z)-<-"JN5rQCE0+(Qu!GM<VcH>A*cWG'#oU"!H?f!lebM>1.:rl;bMp#!I^4HkWqd;5HQqWDd's%>Gl]69FZO5o8m%fFeM`00]:/QTBm$eM$psl8NWfIeMC.>.X6`rSpsPhm`Wh^KT6grH\1g3d:VgZgQ5%g])d!LX3\Ps6Ca)lY#%;DOoqh;>4VRVnV'B%J#rU[9WOF+52"\?FGkReIuO*/iR'=G0YN>\J,..YL]=FRa8]fprSc/rk\#tUhuBm,oXXptJ,Sa(\urr7@2RQcgU+(YQ>N$3]s<^.%rlI9EZ[Fr!R?hE2oQ]3'q8kfPA,C6&T1nRVZk(c:I*rJaoOs`+ouT+ol_A*AJG%#HDLMDln"5R951t.hmR]XEH[L$oT3p1th)Gl;%g$iMi(]F7m4mDihYi!t@]2/$npop6640*dC^NCRq_stjq&%eCtnt[:;d/etLgY2CAJ@->CqsMo3dr&k]X196YpB/XWPC7--h0sNo%12lRXquG4@AFHDC5+^KM`W;t8aY:aQZsP_7ro#t(Bif$CYhb8K?""^\Bb+qN>J#)TQGKb4g"Ph2([dni_n>4@\m_2i)>&!^_t!?i%PC?]uq!Qj3rnV:512XWdK<6//lhq0fl,gAVFplmsa_5<%=0OfTAj=):4DC,sVlJY3DFM1(ISP='JaM[gVqXkO:AX?^qtn3YfH*IC%8cNP;r*clQ[hluc<"EC/f>8ST?@I5$H[@R8j*'(#p?UW&)3=L'k,#abgYf9^d,($rd!<([`<"\6S(HL,YkCjn?0^9Qa)8<RY5=E.%>5YD/p7L+'DsQ%^Ro'E(n&)dkrbf4"d]\kkTjc`rG[6&4T61IB%J>#KH[D<5qUmP",20^J#CeRW]*nQYc(j*n2-N^9pK]@ZBs5W8%0)!/h?QAf`hV.!.]QLTj@I/)Sk4ZaRMYG]!>-$5t))%LCn"Cj%db8VCp2,WKh&[="f$YK&50%qc9AH#IM[&C)[dTQ6Qa?96BJ%IJ%@[t9kDZ;i=6f5@mdbD<Kit=:ejUBipR$TDMT^2;GO10ToNUbgR#[ebBmA1]pG\OU#o':&:AEc/Pk1]6JCQs.XN=10I@-u*k/KVk$%UgJ:&AdC-"[sQceiHRG?'<p4KlF!B5fUK,BG?at2[lA'5R%aJ&49T;%]H6GNm3^Q-mIaQcB[W@G(/HhQClN?%p=50fo_kA"ptEcD%;gX`#c$c2ViAPTNR8E:e[`?hfG1kX([>*Z$fk8!'m1jP8_VV&-Hnt)YhP4tmRl(`DZZ]t'`Chn$p=:-WpLR_'Xkh^7l%Z^RY5QBk%IC]iFI[dg`!<(OhHfi&U&Uh="fc9.g;/V$NXn?nE_8GMOFOu<(\Aqf<cHE!ofCf[XeE=(U3O?`O?14,piNL2!DVk"8[DVcrNU9K%%l_qfb#<p1Oi]BkF8Q*!Xqqb3!T).*,pF)'U&"Pb3U#/p/OXZktqlnfn4uff:m_QHf?GWm0PrQ1Vd:2Whf#YF@Mn]b>hVOu8$/>q^%[,/'MboU^`Eo6;&VfuZf-U7F7[6Cq+GL(_@CN@>V0B<sOBcf64XRd)'NSao1>'osQoOP(PDL6.jIVK=b!a5E1?#B)N)F\;@I;.kS%]goGP5I&c_2&>NFDq+5FmpOnrZu>i2]$*J*p7ZJL*(>SF2!r3Ki-Su,k3p(4/4f2'WZ0rAc0]PjI#!jEIIGoto9ui0YI9qT3bs(Y%]VfO(lZu(ed-\^TUt#R1G2uERDm.hPn%.4uaf_\X:G#DKO5&]iQYU]'ZY8E7D.Pi;TZJ<4*j<J!/T9nXVeq;<Zuq@^EG@t8\7r)*%D%CO7LFXH`djSi%L/^7>X`(,oQke9BLS923a5!#,M`7GSH@BGm4n`O:5&;sq3b/?HG.Qf/mQ!.W)(cn5rFr^kir,*ifG`L(cR2,!%%=qH.hg.,+6i>H8HQ(l[[^`70;_o&/gV1X^*i0%LkMB^!p7[0tGAgX4.*ep%S&P3M2k]Td!3@d),A81-B"17Tgj\"l3])RT)XK7c%RQj/0+!F#;*<_b'4lS?_?rsnbCE-_%eq:<25@1cIaQN:TDjkm0F*fUC6$%<M+%PaNK$f3m>>VVJU2/A1,<hKM+[V,h$D+-?6DDJa%G$!gN"'_tCHDE[sKO_-\HfR*rXh/@Z;W--_US1oP*9O)U<nnU05H[<0IYrsV'Y@NZU@[q@C=`o4e57$dnEfN96/(#/gO0Ud:C77D%'Xfk[M`pM)nH."rWlO)%lRP0eSR,eBh>Lh*"@S>+2[h>+2_t^V2`p-+&UL(i%/ARo*oc52NQ_`d)Pc\d28$)8UD6-LIO!Q8GYcG\%2<=H/(_:+LL)Zr_kW@O%1ajb#Bg);4k;tJafV2=7a*%SiX+aCL$4m"G1:FZ7m$Dr!VaZ_q]9U!8E4\,?\)aNrIV5:d8*2J!kHi1n%pL7g\I#j<2maWBI<$PBZNFNr<E9'gP_kH:#)Y\u#MUpn`00\`X8^D9l@il_a!G7@@HErn5R6%hnVJ28^]JJ8Y+3"SRr9]>9G2@O`%hgLIN^2\#Wr>Ahof!Vo(XZis.o[_\](>=#Bje-"eq]#(Y\`[bCZEs(ga@_!4Ss[)AlN"MP1><YET=cgjrMB5qd?+((T8oTSVqeGd%O$6D]jsrkJ/_HKNA&#3eN..2EIs15AC)AkpGP0cKB,K'a35jaPh4TR6-J][anRu$4!15nt[lBn>]"LXo[Sq:4]T_a%n145=UgN.F%ZWEss32f:$lZth+rO*JUmc?,"_HK=s?me-=+4KsE&o)O?!4>m(h!!T)Q!m?N`EVYhW)jpQ=5dX8J'XF0j#)[+G5!k.VmcA)BgGp8%j0Da4K0'O6X`9>LjOSeS`J:7kq]!-1NEXNQi,cB;H-fj+J9^]`m^C+05=2_#_?Cl*l_sNXi\&kKFe73$6dZ$!"eoGSB\gJRP8B(,%KO&Q8GU,rGqrSXq0_F*YaO<?Hk3!higCjIu7E!KY^5MGLC8F?I_jr?9`=_.g4dre((5_@hmJfP\:.:4e<$0n@?ooI?DLZC(mRtk@%B@^8D(1$#90r9ROXeuU2\*s1\ZO_+VgQ0DMZ+\rd#GlHqdF$gj@-tRrKO9G(=o7@FNQ'bQU%Fm9ar'<_0JKpNo,BuC\>[3m0<Yi\%3ORBVqViT#pp9]T\DDtfHP63B0P36"O7X^KI09at:F<Hgef*V@i3>Dbm)1!X&nSJ3)hW:o8],_0XuCiPm4rof)_*&u2m@XJcLY^f%[UV:Li<UuiGf`(2p%U)0h:h[oh&+Y]UCm<(+6<e?)`ChqpIq.5\9QqMIEFlW6cl?_kT$>G72_.KLNYUIZDcG\'Vj&enK;jdPZTm(%Ta9rMbWN#tfE_H!='=,7>Ag;I']p/n*&5n"ENbA"`pERBSF+*^8=$Jc,L=ALa,%8'000J)@U-90,i9)?;*]5q2S<5rbq2JV2+$)n%j$'W5LU7XQ[tj;6[Wk@:RRZkJ4cdl1P.gInLLkYZmCeL6?lbrIY._?_Sk[4RB66Vc*Er''2nt.a]klF?M,nCTT)!+C%e]52@6m!C%1pikF'uBbe?'Lmh\*G0=j&u'5if^&kHD[e)qWu])8o9^!;=M?.U$9:.)A+LukeG6rY%(]NB=>4HA=[@EIQReuB/Wk,1ToCP`p@oI%[D6c!e9aWIa$/h_*XIt)fc"i4"u]p/>C^/>[BO=MPgA%&;>7=aMg^!8=3HG[C7^`GoU,%]kI^I,7sS>Q#9GfG,AnA?46bmY1opl2%nMK!qR)US$,E8>M@9OB.^MFu_Z1q_2pXB6dlI6_oqJfEe@^^iRTA&Mn.](g"mS@VQ>GQALa?J5WG'i]T@'fS\IVKW6%m@1,_pY<)%'#U/*Y'l31FOl-=dQ>CT[J-k31u.U8C>@cffT[(jg.%FVin$VeU("9[p"CoP`ARDr-=2K$H?PEkS!;X\HiW?W?b:Xl/aVm8o:XII%1H%:5hTXZFb<G01DM4*'cJA5OiN'<,3t2^-@SG3%*ZU6l-1q!;\+e^*=<DXE7Z]TM]>>_GT6nL41"M>OYgH-3\Me=N6T<\Oc2N])%e%WH$h^V=-MmYco2n(;e@bL^IF-sP_M2l`a3fT)aQ#,6c5)H%<H8UFMmA#+KQ5Jk.h<ZN?%e&fDRjVeMrH5j/agJiL1H4\;n!fJ=%7LT6=AY<KQON'_1Zj]:7ej*ji#2,6'Ku=RW[_>OI%:d.C1G)!p`la#B>7PiQEEAlSgkQk=NI#aG)/\0Op?Qnf*Hg%t0cb(h4masr%A>IVV]FhhgBGa1#c>4RuOh.b!fY#tA;9>tn:7CGjYt@[GA"_rnd@YThjOV:orM5S''KBbXH0sXD=&Sd9J9gmu@5NXrRp**dI=<EB%@jFa;(n)BmL1(gB>.:nRN&hEgWO8C7nSbI^^&gH%4O8ij$u>RSYio*U@L-:Dpmp"a4%Tg7(409u0=3.CB6`PSLbO!/6q5%7*b4[W%6%lO!o+6HrH2TYfY[9A6ONs#K_r0RpBoEX*I+[@G-G`UUGCuu<PI")_gG4SD2qtX%1$5r!6eS:bE-t'N8'%t2S;!Mg:DK$nl%TI3%pD>&9pAD":d]Rj=o@o_`m+9Y=J,>5JpU&nLNU6S+IJt^b>U-H0a=2/Y7jqnmYXC#o3Kl>fF!$3,95^rRjPV`k76#2FA:G9IL[CuD%9d&R(I,#rl%EIGs.4DQPUU;D/S8=;M%s_r$Qpr0Eg9=hU9YPs6I.[J)7rId@lgV@rj7n`aS*]As);.J>X8:q+kk>@#VciNr@j<'_%DgCCg6Y-k8%q-[lAFHQ0+77?K&Ihs2mTnpbDorV>\$X\iqhHb:l$?4DP(8b::=aC]EE4u5Sp_r)Ye[igf_Z4%NY;Y"(iE$53[6N>%_A554G!AIYPIG3bmDJYL?(!?\>TJ4i3S?rG*KJ8<#$1W2cfkR*`Q([<W/6TQ&Ld4U$pp!BIGW:?+,61l,@U"#<'Q:YO6NAb_l!.#%HlU$$8W/B`T*2S,\qkn1^@%2?30n7Cp)%"X9HDh;UH,5q9=EAl4mgjH>T[Y)'YjB#dA9tU/])9BBkZe6*OX^c4n:Fi1et0,QBT@^%dh\=2hM?("INd1BQ9'r'S[lom@tR&860OjOaH6.5;5b'smNXXaetKg`ViS.0L+,U"h&a+BD_XGDl.9_rl=&1qWAck"J5%'\n(NM`%I'sQPBN(M]pRgEgG-5?B,HXHW8698C+%qRIXBV8TSV>C27dnr:2(NVf+B?1WBD+rM/r%ah2L#0"fpo_'B(h*d3Q_qXldRK'1p>%,%/3Rt?'S(Mt5VL)c1Dl75Dp_]tY2?TM@Tq*M*:m>,Kh+HBRE+c2XIIbtCRRA(g>-<=nJ@--ilq,SPFhu[UUOe5XMen$K*X-=/lM=r%QnFNNLsmsTm84T>&\'C7m9/>q?JA`l^DLO.*u!7B_>>4#60Deu4:M69dETY7cXIbfM+2)iN>ZE!:g(N7'0idF@i&i!:99Fu4QN#m%9P02b#J]frY<2'\mDpedQA*dJ2/Z8[9Rp5]WPj43q^0@na,@PnnttRt[N;c[0hq#*AB/eO,r'3]Z-A7pZR3]HbH"dDf%Z0hm])uf%]<=C9_/X,M:aRi6dFDDOfR*?S7B[b6)qbD\4MA(J>]Q2IZnMCJJ<-+GS#5F,Pk/Uh(rhZQMVbr54I<IWa+mlG_Ri,7^W^?UfbLe0%O7XQr(a*/Xp*&,E,6m)'*ODhE;IKT/[t4[N/=GMp9?a<ta>UNmG60*DRJXBWA6k5BZA[Qg`ZWk,]i)eZD2`9nb8A,m:%)2I]j$>(%UGoF`ctCs?pt:jZZa1dj3NJUk526B;]or&q(s?90-8RfBnrNaGI-eu-Z1hU;B<Xf]jKk&tYkBIN,OcS<1hn[q#MCgM[-<`k=3)8]%dtc+$>r((AAB1WuN<uIrNX<(*jH'Rq;;,fN"4^]+'\;=_X-ED5TY"`(UV2?J"mPIcJZT`0@bZFR?SDkcf#[3um&L=0(@A5VdaC2[%[Ets3H=c*XBNS1T8'M94CQ-Q@hs7a/Z80,,T:D@H#^lo;jF<\g]s'6c1biEK+-,*SEPIrnVh)9oM%=f'&+Zm2#3Iq<9O#N!4!k]>%obb"$jQV'CCl`eB[@_m%,LY:$o4?$AYH;J.o#/E*(s5@jPb1_..oMm#`qOGGbFI@MGrhR#^LU0L;2O6<nd$'ZWuQt)Qf[fT04\h)%lIX8YB2r2P7MKA"<\+fEn<EM_2IjLK=%cXd9#Kq_4J/I/lmlYc>$nX*N'gBTo.9d;X=<bM]?OH'H%[II[c=l%j=gJ7jW*b*UO)f[%f%W[=VHq1Qo2h7C*$TImGM'nSp7Wk^M6Ku\kNsgp`Q#*lo-+<17P-Xm>?8KCNuRuq)l$;XbaoH*;et<_2auec-I9.i`HdZDB#RUd%Q#;%fm4BE8b]"V%lI.H-4OYeap$FWE1[.LKfm`\Rd?A,]Pj-6qeB+bK\mn^m7BN)pDdLQZ9)0@NGd^u3T"75s)ZU>[gN4K9<EZ6,%*bA_L#hFIt?sQmQ1KL(1;.fubk'iWPB+=!ZEP;,iJfMbjUmjC85Y[m\Ge7;VU:",=B3J(c7rQrFRd^!\]Sdta,B-p>qE0Klp'u6:%GW0S!U@1:Z@38")fj_?CT!knoZd8!kL"Mm[mop0VrBfl$>-'-q9962;$i2eQof6C@H2\(;pHAq>)n(dpc7WY^,5*TG6&XiB]>u7%%ELB%@Hg0]beMQT\;lb@50n22o\mi#(Ds]BT2eP3hD,/"CDIrs`FTs=CZ0N8$8;Ob3;]f1;X*)NZOP+Y@;&3qWNo7Iun2\gsE%bh0%/`YV\rXQ+]P_J99BZ8b4)_ZB':2[7]lTh2CD.S7'g%]CVVdX:W9nZWW@IEH?kqcVMQXKVs7dl"Q2?"'"Oo=(-4+o]5#Wm'B1\I9u%VV.c>O6XAofi*0>-R4MS_3[u5kM(Ua-/SEG3BBHK#kJ<8/3>dY]#1NVL+PT*^$Of3B%eJ$IbZdJApK*Df:AYG@(&pl?elV6ffh!q%%@K_C3;Yh!<fUB'S_]*=hDFi%0$Fg\bs%\-KC'LY`#O\V`Zjs(&Lkh8OcRhR>CfdJ1IcTQ=6E"<MSV(0@_#YEr/q#<JBL!c^@0,/%pHA(E+sZ6bHRi(dBu4:g%\O87*/I?ITCSYQZ''PH0kYVCJTI<qpGl;*c!=@B=VY#Ip.;CK&cG%g@q&]bkSg^12-q*(d;1gKGmdYc%jCM7jB=MMCTpi3rp\Z^%-UhKOp'fk0FW[_oqT!ps\Hh,h;K9.0dACrO74F:C*@%]^N)>JqDItE4<k$oAM/Du:Uh-p?EqDPt+a'PH%HT*jC9%$6]fjO'CK<rEOYN5>,(!6DG$(Z?Ei['"Xo7U.XC>#s=hr$:(Gr&"d8%Z%(7p`Rsgm<N/J>Tg.C/@annS72PijOoIMtC&l%kQOcBS22GIIE*J;OjM+gSCX]dboF=5H*mi9XtuL/<S1[@:,06[?(XMeI*b/'RD,=WK%2+"Rdb7j;MBth)gn/o+1>tZ,CA#uWgba^%GU#Fs#3EpKmUWSep:.0#CKl2EZ.K2Gb%*&9&qaPl-XEK@7WgU/H,rSSdR`b!@Pm=gRloTBCds!^<0tD'I;#=EpS%0kTq$>/%F"_;%;.=kW24)\JU<JNqf(OH^Y6qthrJW%@>0f3q$sT6jQ%F8Y3b:dkNAK=V0LCOX*L,U<eimh4ilLg](.B<lN"Gs/<kd=lF8<=oBZa!:%'LEkHDq_^oT1b'd0=lSLhhNWSNcJU@5te!rbmoVNS4+m==5[1&l9Rnp[@Lb]l<`L<!YVOQfJ_PX&*iVD[QN%G^Lc5q"m8OWYfJT7%r\uHb%`V]k??^GG,E<4M7WmN[_^H8>WArFLkW,LT!cO3KggWVLDV'7c\$`JS)`@B[Z24jmR^Z$@1QP5('5mue2$U!^m'p2/](e*f%G=2n&,#J+-&tI\RFkL>eQ%@+dAN&RS*r,B`_F-u!$$WG-hj(G0jquSi=([<V9uT&7^(%c&5fmZ>UVEGt;73iM`C0L/muH*+#bR:U%`h8p6eEB3#+88qcRs3D)LrG9^:Ne@jXGlruZe2oE71(pon)Km!D;4'.G+3T^=\:APkn\QW1+h@$;=]%2T<tD6<"`Dn<Gf9Xr?gQe%ol6RUdM1-fkHN[rb=%0<;Q\>NO!A/Reh*un<R!Y8+FK%lVc@*s=mB*=!G5af8%13%37$*U>DB!o]q;_!qbaK(DEaK$`,2;>^V-+0%AERtECB:r[GnrZJMMD$KCI`l`7XnafnCRuZdFk#320GU*m<0+cjDE"AWM=d`WcW%YlL"f%]P)7&\NH@^=;3J<0ktpZe*J[;Z?-:'%=!)M0CEH-TR/^;H^ZP8m"h!_V[$PZhW$$/4=aPS[RZG$<T0f0Z]]RUWn]$!7Zt?*`h$n'?DHTik4rhIKm+4e,F3R\W:G#2o8]ofG%Y+IT<-Lb0?om*HF"fY+'R-r?l<l2^n]mh2^7'>Lq$JL84\*k183AhSTLM5gAbiq+&*9Ul^Kt^?VAG>)ip>&.n\Ku;N7ZR>*%Flt&%M^bu(1\l3'A!X<tBBm,$%BWAh>W5%5aE^p7b<nV.$-5r\MO8$&i@=aI#)0I.B0<&aei*pXm(CElfR-2:f;aa.J8*OO@q7FM/!<\E%P-iTM3s<8HgCEPK`CnF^pQfcYPR=a6RCka+[*M>uRl.Gg"f@8YV`SG;dc6;.YJ:Z,7^g*)4FKme%T.6Zh4:EfrO>J@=s']rYA'$6%;#>34KQq.FB*jjF-&bO57.de)UP]rA(lDLh*AoW2i@L&3K"EXU:0)0pA2_@ma(=snX9GW[U0bZ^o59R<a]6<OMnRH!pTVprmcCa5%j<7^jmhb0=C_2N6e40s3I'VsKMfQu5kkA0,i%B*]R1-@Tf#M0hg%RH^e"-Eu1U-8<%C(O6,+WqZ;#>3;B+9VZ\!1ltpL>P"BjPXj%^Y9EOW`k?pD)LW8_OMAsn'XfkZAVo-FhiZF_$Mpop>)Z3Yn,s(0hssmWnrH[FC-5pg6aDSGNQXUqp?ibQ%f_CbaA"=>q:s/$%]VR%M]u6GNb^Ujhc2/N*A3-+ZK?BKc]QsW*+kU\kLV5<i-i)5cq"6jMd18C7^=idf_\A$h-eYX'B=8i(lIR)6f[<]jRKJ!/[`??cTPI.%L%hhFZ?HlkfT0[4CkE[&P'@NPnV^u&[clTEUFsMZa=(F/p7?!BZL*Ri=nmq6l_C'oF5A^.4nbT$diB6:WK0"BT<jMM>B9<".(-C_%LO>kgRP,V67X_bB95XGDB/W7ZkXLVfHN)_kfi\cXC`:4\*Yn<fZ$=SG)"c4TBcENKn;K1%*g*AU^N`J!:O(V[<53kjDQI_mlH1&>%WlSr!]Ye=mffHD^*g5fIr7?5I[d-eqc@LDR/tGs&Is7JuB[Ol=C;8j\AV/dCkft\SBb*Crlo,u@l*\.o0$!%UeZX8sY_?pf(j@lf%(g2QPJh;=r<30`l=smt.)K"Eg-:Q*+ZuKIE[E@Xbq0M9)NBt7s#OA07]47_F)]@0&CuWG_FH/G!dJ-Br3ASW]XdB!c2>4a3hVO;d%Mcp3UiC)")`RS2R2U:u3a"2XKV0`s)U"Z(.'TM4h,G)9H,8)`sT(<'__B@$-qG#Ej*P0_dZ/3XX\pEn'-btt0Z6gGH(Ht]C8-=%0%R\-`;b\.)<+6FDn`dT(7(q_$"pi]eaC.D6k0P`#-1g80cY:>-ue1N)`jt-i+Q:>)R3m]Q;9$nP[=Cen_Li#`B:%5C]5U*J0>b`.f%<\R@8d4s=hC+>&sg(KhJj"CtL6\q=8Jc;p@q1]2<>Gf#nLZDCK4s\jX,XiSYcVVY[R@9p,N@s'OcN`Y7m>@,e4J1>)3U9hGC!=pS%ZJop5aAkiG<o2gFdD@2XkRj@mZfNQT@a9ir6X@)V^&mW7B3*X8LsbRG[@t+DQ:J/kp.S1R;pI:F&jEBkS48QLASI?+JV99]:=i&m%,?EmgeiK3Vlr3t$CY""-EqTAVR!u;R2ek(k-(h(6Rm\GIU$O.->-VG%iL:RAH+D%_DPi,W/mTGm"!Y]XU:"0<CI-o!_eF1<@YBm.%08#le06`%T0,5@)Tl$<VP%fhi'I0#/(BkTG6KE:5VIdW2%\cDcd1b$B\pYPSL=Z.577<_[$Ia.SPOGpq8<gbj9F"H201GMBF'AVe%;TT\f7;-EXl:plkEoRS@a[M/qda(Y3P!l*).GmDmeZrFDO_"OcY(e!4%him*'hGDb;tAH/1S_+'E;iUpmh(Ol9aJj3-1HmnX&>ZT%72kl.e2LPfet1D5*I'2]ZE/k$?GelXEI_?3VH%dKo]oXT55"I.kgW:Y*CoAVBfOk0F_[4^T*AcG(>TJjTgm+]oAB@OF$3Q26.E#I%^K&YH&URVC..C*6hEEdo4S"0T0Iqc`#DcAlAhO2<,66P]j3@A`-LR8NJ)W(uqo5WFK+^>c/7Z/((>K-NEJN^o;c/*&Yo'P:d)q;`%MZAREU[H/P!Z4cc3>e8uM@08EoB7bRfSI+_eeb;S"Wf[X%VepURXb$)CCKnQZn#nm3qB3]=kkkB'0NTTAk(9fd'e4#f,TlS\&?/W%BGOpGZ"AR\&[l<u"bHO`e!Sr,"b/7%N>R)LP*6WR\R=BKEdul\Xs<2:ig!_I3H^hVQY0<3[`BUI'>l7^GD$Bj"Rmh"3):4`<d_G,%E118[STZ`&SZDRhj/rFoO*;HPls?&mPD?51d4&8ja\I>'O6\X:bmCN<d>!rl"&+hk[%T)SefN@b1&WblUeinU/;"7%@g(DQh7S!Y%-57?pKh!BC,,DT&pMd2cn%SXE5i7ChR(0J]cHPLtB)]Z[RV\'BWF!0lpr-QTbH,R87O`8W+Z"HB9bh)$X3bGM&\sPEX>['?ho4Q]%7&R6NAuW>9EkRs=?VI$Q4egP+I>[uf$H,$fGU"YKaeN>q:2-9j[Ikf!I&IkOW]`G9T,ULU2+RV0!9+!S?]=6-Ip7VIJ0QfUUFBO^%h(GOkW+QD]b7+'=-dp;hg3/0VS'k&LNED<PPW9L`C$4i761g=h^\f8Bi@&rCiBn&I],g\`b9Vbed*H7_CdauIE3.?A@2/[I[uLB3%<=\iTDZ5e,O0G;%Lar8R4cmouWmP9fc+2ub#idNI7gr!mkd^AT$FZ1n8+-(O9_+s=QdntG`rIb#;2ltcnuO.K]dUgk.4a</650;U%l-U+5k#+nOGV8&)CpnC(#0Q>X7.@V27Z2O,+e/>qZfRt,EiDmkWWa2gYIrb)2)^r4YSsY;nX';kY<mJ-UG$0qno`4_>FTVlR[1SO%6/-hV=l*XnUKt6:=IjM'a`Ho;^"mp6kK*I?]0#tRn2[KWr*;,K$(7X_"M/SMg1-bo:s'9L+f1I6Gt-Sl@VCCo[)F8+)/W,mf&XWL%`LfVs)'6h=H1&r3LTV#=UdYOTGEV^%f/b@U7>KVXX`&F-4+>>8Z\#CHMj7^JR1E[6<F54kfJE"a(XMJN(rI[CL:o7br`E5EQ<U\R%44`JtM.%obD/[?IrF1rm^.?miiK=O>/3*.<,=WVRgY@%Va63QaBF?_UU9hG4poXd/0bW8B^Q[u2`3qiFoL.'iq8g'[[RfEk2f2,4%6PBRL1lhjF%(t)Z=3JA,BuTXhUQ>0dQ:?\@=h@d)9m0](JJU8bg30";,e/mNd)`>Y-e44p1Dg]C89WqL9).680+;N#DM2u<O+Dna%@.WLIAu6@YXP/Fa(q"97klNoa-;AKagnmg1/maCh.>iK=p9)'5D@bQY=iP/qQeLTpOGgHHdAE@e4q?LlJ9sugpquo^5RrBUSh[:C%m/,bB=@N/Cq6)U2ZU+XJW/g0-nAj-_Fjmp$:!FS2I<p/'e9`su\Z2dplY)KY!8NL..'/u7_P6@lQs#at&R'B.EVCb_BBOtENA.*8%FrIR[ZA)_]M=\I9im#s#YK%'QFUR&@^N&=,_p'r0dAmdt*I8\$Gl9#D]@HBIngk96>[PMm;)f15Pn3ECrLl22PqDZ\qI/+;QCWEC%e$E0-6Wo4+4?HuR>A"+g/\'9AUEl-YiXh$pFIIkCb.rciiiut@=Ck\fXYBV:ZuY\R_T;!/bDjMWij#PV_kok3@g_+H!Uh4L<2a8L%ZS[*k@DSR6MOTIZrh/kWUS;b60rS^[+p,10V);D1UU9['2oDUoY$?%O`@&310u1.3TZ$ATk3)Id1?_b_W!2b)&(:m!S$0(3Z-(-1%c=Z@.GuYBU1ks?+YL2>kY<JXn@TD7:q8B.]Psm9C("6AnNY1qBI@"S.g"\ho6]J&-)"@*Bc2C,*M:Upt<Z^5fk3M9C5<=bDW`o,$%B#AID7!8K08`^?5g!nnIdHaR#0K%Qh)d2Ie&PBU#mi3E>dAkuVp0f&^8G8b.s6pZs.Golt]jus@(V"kpdqu3=hT%0+*G"M5hW*(U%6d0>WSjVUV'NFqL>!9q_]jB!$YH03d]nXD]4po^8e?!ju"t:VA#jne(7^L#AVNN9q/X71U;:]C=VWHW%:Z[:DI@'uN<2lu\3eB.L%2+diA@=(5)Qs%\U"oC9Bd?BhS:.o=YSR8V'CX`$Y)WAEUXGT#Va'Hl0DO9h2\$,G$;#.OUrn2,QZgW%aEjY5O=Dc5RepQNuGAZFX%DI(CTo+DGeq1i*2[';OQH-n<]"WfUm=$s;pYY;_G8Q1>'/LAlj1'5t</QEX'&c52I4`+TS_GO@)QBb_r92[RD)hh^I>V:k@S_-'C%1s/Z@)(0#h_`lK]]5_"\Vs`l.ACk;Z;a5UTO;/)SggHZ(7Q/\08LLObqN0\4+i=G$5b@;LDYZ7Bo/OC',capjs19S_S37O;?6h_S%`57nnRkBniep<%ih(i_,nr/*69V(oQb.](4D;;F1[u6[4i-K0`9%BfLDT,nQ/;uT[7J5u!*6WoCeNA3?k3gl@US%H*BC)d3[&ZB3%nicScG%/qeMicQuV7TJQ>UV+Cap$)X5,di"f.pF,etb%0c&JeU68kjFAnK;CLnX/S4pblLH_b3>]D^ZopZqAQ6SB7\=B.K#*Oc#)%.\F.ZQH@siR!,okl-X9:lH6#F2O1ptdII"m5u4<H=24a(+2<5Jg*bm`If7l12)NNPAKQMrr8bo,L!@BHH2#h&C>0<teZXJPrpTAP%-B,&J5\kVu[Br"L`;N\HDBJ/7C]T*2IZM1.4o40kWf:j1Aen@*,n"<d<sI5<Lp=e?U7IA2\uA_<:^1i.nbf,qJ[I^OFXXk=$8jrT%k?kVs2)L=W<i,Bu(W-,GOfj0riSDJog2;M.RQ+b[J+59CE\%4%.J^khH&)dZrKrR\2fEc50AVfWPZS:GL?\*C_+1`2gS"+e&&;Zl%A%bl)*03t)]RSN3Dd(?JmV(2n>"6Hr`jOJZ>pEsRJb6B_cHSDU76lfGIF^.eHT&JS1X9$+36-?gjqhiR(WK^\dIQuPI-7U4rkLH#%5@99(!I@DfO*!Z4!r$eiNJfl6V=[!`V2k5Y/-LccZHZGjM%?KdZh0UhV`)QK9:QSe''Cge/+pm04?O?"ES+`]/#M`E*S^WMPL`p+%pmEaZmX8QTKGdf30_Y(='i]<8nA(DtaU:^?ZKrdT.s8e%47iZ]QI4O$O?=9_Re)lJ5*^Cams\GU:]C0W/D9C7RpqOr@mtktK-#[-%kP>>uG[hYSAWpFLo'kL"(@G'r@ET)Ul?dUAZIalZj4fgG`9`S6m'RL1s40hSlnJoIe<9GY=)`Irk@G2&6H5VV1:oS3262dt7G_,)%f08!Zll("sYKao'INVjr)&G6VP01$S8].-WFY-fSqS[50ZJMdu]"[ILh$(2<!#rtWE%<H9>*KR/fkTP1CL[USG^%RkWkNLAHl+lf%>UboIXC#H2NZiFiC)(6^lDl3lE_@2@i<l0CLU0n?=F7cbA$aiDY[54_EGNdeDl+k7A8AICXDh#u7%@=apN,gA]So\IosJqU4EFoE%E\,8@\STCAnOgHZB5'$H;BE(Ym%:.'e]LDK'uP20.Y+`=Y]M$uO'.N\$i\)U4]]]s7A-4(@BHM:A+L=lY]P4!hX",90[_<K4kI_1%G!F(.s$"R@3ONa^O1X%q70csSbp';N<+r2gj.lEpXoI^"^;J7ZT.Q-'qEI.>jo<dnpssndNJi8`O8\i,:Z&j4rq?$"56(#.YMQtc%56'NILXBK-HMHV=s6edZI.R'fnWiOihu)Q[S!W=,]RK^HQd>]jlPH26:/2-=G+I0gRo/N>oW:1g%=S-Rh+`^>elG3=r0_[.Q>!V=%\22mm&d7UZK5X1hXiCCHFbiC0F6>8rj3fTQIYY%]2P41ZWHa91Bn&_j#'QIu924*lbLUqJU(%u>]kq]]()'T8AK_fVG=jgjWq,3?%5e@_m7Y%pCK*kM_B[aNns+@L@h(*ZWR:L0mYS'(n9"D*$4+9,?Dk@VGKHl6M_aGBHFl=L"gS/Ma'DF@XB6'C,[?'t%1</lJO0on$%GOiGu(Q9JSn8sC"$2P!.c]jG/__8J5=f6r;U:MOY=Y<l40lF?Qf$7;elQ-`&0aOBd*)8%JDA0Z4hm'melNFY&@:?md#0=]ZPqLgN%`8U1Y>]l9"A=(rL_VA]q6p/rRO\^=MAfrX-F!TDY^l,TB7G>D4/@'ssk1[kGQ;nRB>#1">!t-?\<Q0t%Dp.CcE\sA>fX>9?W7KKN%JO(li@9)_Lf,&RV'GE[%c\O;/=_M0-4$MM]FmsgMr*G:$%[rH_'Q\B>SS/o4Y8\:iD_WIJ'1m$/ZuH>pp)RUZL]%NpQ.kTQ2T,Yt%0a2,PF"F1s2H];sAN$]?FA@J0VIF*MfM4hsVKQ<FgDB7>3KB8R/J^kMe@9[AZH7"7p%hi2&_-^3[%9<`O5S\08gO;9?X^V8KhX:/%i9R$E;22Aj)&3Ma</Ro?XDCSGcb00<KYZbMLr'U<U1HbqWX#hlV:SQ@]2'?_W_,DFTV^Ao.,$RXdeeDBlB.'?V27:'M<+NoMg$5I%.)JH]Z[JbYPBEN,@e&!*@WO0(8)X]W7:kUe*tO87q29q0?IEO^;T4BK/U/92&lWW5BArnL13H^QjT[4N.m*--h;VZZFg8pNoaWN-%dJMC2-hBQNp;ON6J+Pb+IGL(B5oWsMp)eX''T[Xo@["`rYNYAN=jDD50;WMmkA0d-O8dLToks@^WIT;F*1]D4V&M$VGSOXT$C_hb%)A7F#\DM'MUKZf[)"qJS#"q>n,bfZ8eL6&R4TFs('7IPi?!C=<Q\IrDTWK8/0#J3i=bP#D7h#8t$d*dBE?Q[Gpm<c)D6;g&g=Sa8%G]0TpJ#6&hQU;(UP@/DZ(5I7P&cBW_[l#A3[N=CG+$4i&.b0ZB[M.;U6WD(phHj"d'`7bWD'`dg]EZ`+0@>@\2H_`?=iM;u87Z:2%-o^3,H_bCcFL4o>iSA/`_j/<h0jPQq9@S_VCqQpZg0lC3Q8nV$EU;aC%QTNCI@/.\=Db0D<YqJ!+$Y\?h=m`8?AL5k$Ea#8gO?.$%C3A8"0")_J)Wj4$enIumXj?9JoW5;Eo,=1p:GjL8;\_2!gH'hB/ENRjOaL$=q"[*g.:OO4Gp$TP,,*ZulIa&r>c9\4&([%T#n>0\%9=N%eAeEQ&g7/>lA]H:e5*=5'8jTC\\(B>&5?/'M=>kHRoWrDC[,kIj2K&De_>m4L6sm_Dr20C%FBMYpnb^WV]^Uo%U4odJ9l92>%`Z,Cgk21;]Lc+JN*R24)(e450qQi'V=<>EKQPU`-p8ted%i/'es3KPk2aicZlbi0-i&e<@.#L9l=]OHJ0;'Gji4_*D"0Fgu2p=:'%rqLp82kF-WWhD]mkK]TEkKZ5h8QJkmAn5GR:WS9se0(_d7HF!*3!;YW"ic-^.KVq6730cj&]d0OW0L?B5^3kR$S89+(fK0X4[gW-%0'(!fblW?N-qKV#84jS&J:!S,=D%b47uRreg_e,3b;d/UCu(%O-]M"o"/H&eQjt5^Z<[DYYc9hTm%m`ncXIsRK1Z;re&/FG&7Fcl%-O>II#-^O`iQ,pQK_[HENQ2os\(:BXaS8F2$U'-NR3X!kT!?J/h)'i.M182iE4(r4NQc=]Z"oM1Pq'ZF9-%*_6Fdr.jB]TEb<a5Y%9-e8+j,eJ_fL'KJOruB8)Ig`[VD5$'jUAqT.#"d*K[;K(c4U@.V'f?_97JHOB-pSoH(r]]Q=C+*VU1]X:8!f]_AJD.'H0Z^Op-YG%:TC",Spt.gR=e"@!2l.u^h;0'm'rRXTW%^-IL]L.EN\"&]?3OIMCaDcVV,3?'EUuD!;g=@igU72Ut!hU&9u&WU2[sK`UOXuLa$:B%a]fsjQM$q2'N8BRdbI0T+@^)<>,Y;]V?obr#V00[6LS:uHh(XZ,IY<3%]OkDI?onHq"V?5"`9m=erp`mrur+An32c+*\g6F>bd\c%IA/@aPFiWWI`*)=a>aS=*Q-tUk#U9TMGhA(Oc@V?%./cT/1jlG&Qf[NQj7(h'1F\.=E&pS)<^"b:)m8fA4t0%A082^_C@OS`IOr"%2Gg0Q(u->FQ-T&o!BH%@Pq*GL8Qu=X"dtrM6WjL%'M!6dq'8W.SKq>F%+$Am_qG]+5,?!uTQD*-&j`r]*Xe#GY8$?F>U-DHNegA&%n1ac5KG+/*`;,%id_\AS93-+k\9Ork9sk-q(gWSEDY5Jdf:`qj`>*2hq>sA(`lkag&RM>gdnheU0!&B#DE.;[P'=HFs%2HJ.<#k;%Uf/PHmBAFE@j<@)_A/0$XECgN?JoYOZj]4[;NDGoSkFI"$kR+j4R?RNJOIeFKb,ou7$I`b#YJi:,\?6ILZC5M![;bbXd%j4F\-T2%'YGAOET1luOM0"F8TM5;+M^hDNlq,gfKl'/XEL%L&R2Z9k/7n':3")f89lVn?$kk@MZh6co!+ko]b7"B.C';(:fr0:&o.ER"cQ'.%*@G);hC59ECri(\F#_?P!_*J!cTG#9$O\DK2W7>br4f9(X?#rmR`)ou*ue`M684M:$:^0i2&aOb0_:,$S7iri50S%u&J-<\HO/id%,KZ5b6#)JA<R(%A-G$>Lc6IJ"C-3Am9g8-8lV8fG0l)UNE,io29cP#@&VODo3+0ceb"?>";=AK5j._h\K9q,uSoM_%Q>.9n%OlNq%%jU[%$1i6OeASBp`%I?Bd+Or"W65iH@kL?B19ZM1X4TPIZJDM2mcG$Yi%F4CN#m`C;9eXIb%0iCMV1`DX'Tjf_+%LKL-qi/QuIS#%Cfms4lPa_I,uRH[mSRREqlU"G'jHB9THsEWnW=]:=h`GgSoJM-W!MK^qMfo3h,HbY3cp<Kb#aUnBU5&0F(eS*Ur4;V4KunsM=Z7;%aFB0QN$2^S)_hHkin!J+b9W?/[7[d0hH5mEB?6(JoLh1QM.ag?0no=Ek"!FHb!?/TLe]MC[8mGUH5\l%XW.F\8=uX#-D3nh6&,&a%7O]+'N+u'mK`ik$@NpZ!niS[H&hQ^fFh`M'('lg:,5WT`/_$"!$Xg/e),#MX%1(dF9la#Y>hrMt2:>H!^-"32Urt:m30u:+r$/OQ%_k7r)2*kq*Hk?jrrl<<NQ;2ff1<+8gbAV.T3,`MK8tb2"a(84*Q<X+tH`o!@)B)MpHZ#de1MkAa;-'_A.+2\h'I]LgJ.o,/AW#!S%je>#?72S[aHPHD%._#T[<hN!FZR7[li]ptP$P,e_fW%%WiC5S'\?_7T4pFb4gu-p<Jf/RZ@]G#LRTjnQ?t?1$E6$!lArng<&\)/d%qb7M#"F3s5G"_+hDuq!c"Z28R+0cuD3$-")<"QgaE]L5^M@Q.\dK9%?cq5\d_Lno#?u[`R!l<9H/>U;jj_,L9Cfulo1TWR\$-G@m%&1tH(6P0m+dN>cE"nDd.P<Lf*_.aN;#cBp=q,m]6#R$\8^t%#%#W<"!S=N1TEXaVPcH>QdQ47@ucIOJoN&n'u/Sbaa9!2ea?lF'K%1,f?\C,?>CE*926"9cQ,9Bp*h)pu^e1COUH]YMFBi6#)M*:aQ(JKSGj4QB]2dTd+ZUK)ghO$\E;5\H@.4K"BMTV#9-F^\68f](Nb%?Loi_,Dut.8>.r]3:jj3kNS`E#CncXBRs%EAO+8b$<3`S7"ga[YZ3?@&`Ml)B4=[*6d8KGLMEn='#cU9fOia0[0_]/S>0Qu?slh#%?>psHk&Wkfit+IImYU;/"d+J-`s.?\mEO;B"22b??kcZ0;af*Qj?K,I/078B:Be'Z>k<,]+dsm<oo`B1I#cekfp)GUm(ll2D<Dm@%Ld7@Cr*d^G#ZO`$a;)cr9MGeH2e7J%ok>n0=:gF[iZcu:2Ke#c_ijskSB<+S%G"cDYndBP)e6hi)sB/7H)Vb36X$5/-DfD54Ah-m%1h'-80bN/Bk##ZWXX(s%l<t4qQ@ZiK<QbCMMWbt7H]\>0j$[mo)`<CWouTpXKJm5i=_?@HZ)]je=OUb;.;#*ogiOWp.Z`6k0'AHL%]]>d1J3=LA&93#VUat^.%h2R(AbmkcdEBbn_NJJ6Ed(!5bu?guc5YujbgAgn[F.I*U-F8u[4Ep4e$6$=aZ28"L2/#/1o\@CL7KHW%p4]:mrE_am0`Wb2V%p\1<5OnU=E(:Z<eL[TK8nOm1o8m(S860jQTXoJ6htg,<ZO!('$_U4\YB_5@hm<e%Su@q7cMTj]%:W^8kBi-%>;BPP4AK@GG"MB=i98*/Ya4l^8$PSmi)(7`>ul%r&k0ZK+>4&A@gF=LM0O;FOReqDYbtf.88J_DG]8C;-O.2I7a"'>1k_#>()SnE%?9U`$U8IS"HQe(Y(mZ\VHmPb7_l3"_JQeMh85djSo4g.85bphd<O=eD-=S;&pl>4%3;q[k6[^!k3i!`i`s>W_*"eXEYjc+3*gDqi%P>YKA)C1KaO/Q"][)Q2lOX$`'+=fFj9EZt;I4u1*Wo/jV5F*_UUf55D`c+:&"`120%p\MRng8n>,N&X-Ht_ILp7c-`8@09b!!fP5%i)A$"B37b`V'`.a!3*OWD$b15C!XFc)J63mnPeN*P/+dd;</Q);jY9>&d\f>`3QpD[_7'X@I2?MZiWrm@5Q\31K?_N=_=o\R?oY!%e7m8"MSZ@_8B0#1oe&OJWT]qH0h%bZXYsMi6WiG#9lC<5I.=6-B;qtqYd;NZ@`oG,]S`4n(b`M*f`WIQ[+%_<Ea07uWDt_\83-90%_$@&%P>=ZNK!X%`MU94>SU8X+3^"9$G/!=Bl<Th/+#Eq,,UFYmG62\e<@/?:3/I<p/kg8;Eu9n4hm!cmY`MC.*[[rU,QsEIdS^i?%Gq2aTdX(F0[&P)Q%SRp6%:cIp>i/\iIC(?(#LEm\*/`8R:V=K`./@34du5-Bp6,28_hFthQ5q^jAP!G#bU*p!>X_%US_B[/k8/Fb%VM4RYKGAO;Kp`1p,ZF*f/i]Ls(RZV-3Rnbp"Xq3HRCKMT?paApF#0GZ<GaYC?7#emc">SM7I[Tp_^mOp>oB?_Y3]bJWRnLH^/X5!%!.65>bt2^q+iA7JRK=]8)FU/?\aer5#@PH`n9fnckRGXF010#M/\3/'US0cj`BcK&Wg[Qe6,cM1Oca5,6b-`iT;H?t&o$Dk8AWo5%&qJD8OZ^NHX8HD\1:7<T!dW'[G$.;s:k4'.bGA?YM9)7h6X*QS(?r^T^(tGf4_c`%3EFKC:69@+KYFLOIPcW+a[gP_YDS!=ibE'!%$GnEPRc8pI080cFS/KaD7^%3q<nUbNN$J9EoraN'[=ViFjV#MN.4:)+bIJd^@[htA7ZnM&)8C@b3Q?5a%/Q6XR9"3D(PINN/l<+A%dbppAVD4]"AUpHuo.2_";1oj/b>i#bfl>5cTfCWCRKX6(0B5rT_NA(1):%2EZB@te\:^(f0FE6F$1t)?jM#>2m/[ONS/DCX1*p.0%XbC;?']RX+W:H$+MD_\1@^Q_4H\_cq<p[a&fT7"l^.BGZ8^fkT/CS5)dL'4)$QN&$>-Z-W7H$67XO,*(:%N^B8L?+6$jPD,`s*j(%171\p$Mg^K)bQW39KGSr\B)NGE4&<5Jb1)D-']bbjDL.^YkL^7.q#ks>gs!p%2<<f(G<+ifgSb\Rm:\#Z)fAB0Wmgc+]gr$;tC6I%7*]I7ArMIQCGY-iU:FfK@EqFj-sNQ^,@H?/kM6mLX\G?O*"-bOV?c1s36lf"!21-tO?+diRZYh]$cAh]Q`M'C-H8)f?uh]:UqkjF%>`gq1DF&6q/CTh9/"i:6<YQAf+?BMP0A].C(s74;%dk*m`<C4YD?>Tfn/=Q7:-C.QiF5Nd.e4eW!uMr'iE</_A.*$kA0o#uAd,+5%mDtA@k.]="'BI!.)&ifHG-Rcn6Lg0UJ0[8q+GE+Sk;$CNSr[=lkd4#^6rm6$\Q&K#;["r8;CN!_Om,UYTB.nj4m$;#WSj1$.Q47[%)7lbkD$-cQ+tP&NQm$(0Y:\&-hBa0sQ1us&77kLAb%X(saumgo1NgU8OXCd3HRBI<L72>4AR:,&'O2qG=#Ooi(pm68Mm<=qdN&2:%0uL?[$4rkoFdrX>",ZWX4]0n[aD;c8\:e]'%$(SD/_qndC0W#9\931t5JnlmS^*rfKo1Q(nYrjp.."=dq%F*.)MWBd'Wsj,"=%%0%pb6D"7$-q@rE+f4=3?=5B*sXTL^8L7A2\&Z(H#Es<fsfU7kPll]P1M`"-"qlnF[uk"B`!Z`K!e)Mm>N*[_iE-BC72nB<ttik;,l^%dX<Ue5YQ/EqrPg.o0hA&WYMb"LHNd9N/H."`m<^L)hlCjM8G&a^9SXqV1&hX\`OmpJ85(dW4Z[A2Nm?C)/p"3\rq&6q"W1CM6L#F%d+FDOU5l["6]e-.8(Aj`Pg-JJ`3FVKY9P"GSQX)]NSc\K,p(&RqSN)pL;ub8)j<mRl&fSYiE[<YZ+08f%(+Cfb[rrb\,9JqlA7BK%ga>4@l&E03/XC`2R]Sb5fQkJ6I@TG]C7>nRZo7O9k.-C>HTFSW)]>s8=9`>q2#FB4EmR?6_U8*JAuZrDl:Bh'UFN#[>6%lq#b9en%e5ldS1rhe0Q`jR&VZl.ldmG-[nIB?A$RZ3Ke?/?Hhb)@-UR$m#!umnLp@h!9C?jcJ.PoF@isI^!9&JpsqGC%iJLsW5QROH[K`rgA%#.FsmU8iOB;;rfs\[gChd-(L(UqB1b#Dd5:$E9nnQPqE"=-RK#PEEi+,3+\Ie2Pd<HY?BUO'/;!(nE0"M)Tos8TsIr=@*Y^?0Y*H%\HH$(nJV*XM"3o`pUO2k07"W_-s`R?$Rq]_`EG[kB*<!%p<+dlfpfjF'8Pft'5Z\q/;*pWOg'0@@%p]'i]Z-ud:>cKnjgCa]O%q,%(]!U(</<R*1+_J$M.@T+`)TRH8GiIF1^BdIW(]bp#YqNfB4CXo[cV%C;5T_0r!AliANh'8K#Fn")U"IOTte`r_>=fig0!Wm=`+Pm%eH$!bD<#;t^o-uUG+!VL$lM;51Nh6HE%Mkh\<<l!$m*2sS?W?JLgan[<0WDQpnB%UT*mDfJDZ2@pf.Ph#8d1g=0rlM?ouqnV'`EY%)eXJu/I-i.h2"9D4g_c_=-WgE--WdEa"QT;!uO$]4FlX77Hm.^-!a>Xj<XH*$<5%=6-o**;T5X+HtF,((o0fbjN/_C].bQCUf?G(%e/c3"c&o?EbElRJgeNQun=KSD6[M5_p7VMk0;[Xk!3"YP1/mHMqnX-/9^PMSL'iuWP?-2V%+@bs"H.I-=D"^!3TIa3VpD'=J2,Zk%0,ue0Mp<G[`dIfii_(Jqa-,L]BGT<ng%Fr))0DjO(Q;,19\Xq#J?t6#(;7*bc+/?Y'S55d6AmVEij#UGY;R..4r!Un%02lkZ6n+_%nM78"QnnGe#RZr")I&%$%pt/H:bIEZaaskpa9i;W(@B3Ypq*bY#X5u8J]BJ`D>%i]7,rsS8GB@)jH+DI<#R>8-:j$h=C:,<=C4:-%[5%CUb@NIHO9o`P<)_48Al*71,I8EXX5?ntou%cI/=H<kHn^KTMAqiCO^hrsG0=lu]pP:rd13R`ad'RoL;r39R$G[mXC=?H>i?&*%jh&TpcTiG/04`aLc]M#20i*6_(+'UC(CXAB%8,shAF7=2^''_9_VlUD&0]*%&B?**`lY=/\ET>pX(B2M8#GCCm24&&0k7+3P$ICc%lG[8"4>u(#a_YVp9On2.OV;N2hk=.t1#&0lk^^#nCq#Ln'H9;3]7I.$c*K`7P1X_2\gRrJE20:Ips@7e9,Ck\G'L,)b6I,tk#rZt%1'[Pd-BoIpYm`.5\X6HmM-J9B$[C1NA+PT6a"Ljk+fX75TN;q.R709+Ppl<F5VVR>W@nYnS)6PNE-O4%:Mk*q1aTc]/4M*Ib:N(G%8@U:lP(Gsg:7!:f\.&fLgG33..jbFGJSC8^Ae6^E$=?D-H(0@-SR>^-n$Aq(d$<_6SJd8Y<1e`WI+l.WMOb1)'<<(,ns[[+&("Yk%OGll]c$cuP2CaSO"u1u(oet>hX=>[K6B)Ia;:b*gG+ES=@A5&e(d?,,N'mfV_FB.*ai6rP]n*Zu'r56t'Yl#^'8!0iG")MaPNA-F%kW`N16H-K-e@&1m"Xh8D@q36$Ji^O7Ygd;//FksI>'jdBZV^HmVe$>h<T#ke:95CgQZr!UL(Mf@$8!s-lGAtr/ICamRJIU,)(ZTK%%15D\N'Z._K$p<Qn=N$Sa53hn%M1'%=l@2:\a$HXZ[)%9Q?20SYsK#?hQJ1JK03YOgd(0;!A=sU70KPqU$cihg%00mbP%56pPci,%%KYKN$0!$oIRkJ[0#6H%3mPB$phnV;@5_0b+gd2Jl'X#3?kERN"Iu`l/*#582.)=k!p11ogCol).h@\^[V]:<`kmo?&FM1iX^h`U%<S3;l"jPD/X)W*2Oq"u,VX0(=3>=4!R5S5/-G3]V8@i5(ID;(&7^GK!AR)f(=+)CD&5gG]O%]QjfW,n8`Z[oYKa8'D@3DUM,ts5s%EA2(G=f'MnB'QArHdE-7UP`7X]ZcP8J3DmIPo<SB>9]P.77lrcE`ue>'j@`<LT27F0Qf:tSS_*hr;DpPe5HN85*BMra%2KQ]!>]G%)l)&l",<dWIG2oGJA0$m)=,;q%;k5FL+[T=.TY):!3lOp'e,6:'$V<Y$ojA^L2AQ>qjJ6fF(C,OaR3/E'*r.cGS^\lEef$.B3Z;J%s$W;j(k*CF8Mubu@As8+8jjk'<[5GY.MC88]Q-iq9h>`d@k"Bc-BKVq3:ABE3qiA)QqZEhkejYr-\;8j`!(+33cI2:%enoj"AM4;%Gt;uA$=DX>2HHA:$N:64f#8cH5Z9ZoB,c*FEM1]8@X3#lArm:4<!%n!+Mb:]I2k;h7rrtb\:tnh?_8Br?2FCG22iMg&HWs5ij.it%X?];d"nfA7!LUD9FWI,UUi^+.Rn/Bd%(5:!T3`WE>c>(+(o+lZqmeE4Z4dN&1uP&U0H:`c>/^&i!HQ<0JHTRM9)-n,0Xr:ZBos-$%;%0#rHn9t]k<P6PBdS===u>!k)&e-CQV(*mqHG0C7ASX0(-5%i$'Zm=L70@67@M[PV;&E!/s_4/ViW5ELnY/'*i\\!-47"-"H[>Z%,+#j)^]kna8Wj\['n@hX":=Q=^cM9ThuSq;`)6#ScX[S31hKoM#h)\Fa!#S"2?l0e<d2?!NFOjg".2VPkes_-3HFq@h&(ZWVP1.c%DY5@G1<(DEKG[F?Eh(Q(1[l9;aS@Ju.HZq^+X]N^Ean\A!hr`e7Ec*k^G/ukKM-7j1\"QieBaHaK>\s_KJ`>j9i1[a[cf'PiW[qc%b9U@S(ARWaSp?$27@8k3!?a4nS?FCf#cm3U")(e_:-m;D-]VT(<6AMOQ>ZkocU*>2[NrF\P8^rnj`#[?DB)4g6*i5gMZ?el<Io"i%@3iW#'<'cPd<>0Xd*2Fo@FU_fi*YK?#!o5F$'j#J;/c<.1.-i/M-!a-&o:egCLu*cc+(RUicrA*0c"9l0?"-%J]1YT,F12,,F]hP%hBaMQ8`1=b_^ungJ:D&5K+(&hqb8=[Ko7Hr*[K@Zi.+u^24LNqC7;N58<8O6j@#\2Erko6X/=r_To-7k,V0DP!#/>,2T1VJ:]YO@%P<r#WU(qWfNo>)k/05Q8i(6?KlhO9Z(),jS(]<`$TIZf_NT$[qe"PiJ&%daM<X%\U>$,3u#;m]t+fZj>,?5:N$/3\41'Q-G$&_6@%(tW[74ch__o==c#<e-16492-f8Y&7^l4^tA,hs<1V5Sp')_?:?H5^N.j)7Q;5gYu'c6K89(LEPu.3aO5;YV32$`4,VT+tNJ",oWH%luKOqZ,@"cXApR>QZB2X/ioA8jEq!E06CAbdU5Vn=7EV]&ka8aAB<1^15S/[YW5UL_eFd'Nr0V>.-a^4!c>J%G31#PAjjFZeBHii%j<ZE'kELVKR$JRV$B>U,B2,*(q=k=/iYWA%*.\Bb"VU8A*)3)ZflU2d>R@1+!q7bm4Y/oe:;Xj^P#u!4CcUO:%22+1/)o&nm,CJm%b9sQ-X_5f'8Q'H>LtI]Q8G3-u2kr)_J;-Aum)][G33V/Z\U4B,+aJ_b!Oou<)I&9NFKg)\o-e*!%eh)%E,Jtt;.Tf'Z_A\#)T[e=%aJcsB!q>&<F(h"5_&3t=OWht=9]ZFC4VaD[dr=FI&/bTg/@=W:!mllE/FGZ)fDuQt31no"6,?*`S8"F:&-5V)</?,#B;+m8JadNr%dN\l8+i727V\jqP3=u>h1<GII@FdGoA`f<!CUb$CQ_QPjNe>=p0JAYW,=,`eK;`CWohpmrCo%X[geI?K;3XJr=<[H".pui6%>F@&%DTo5="\35d6(KF*:,b8Wq3K%`.RGR`Ffi=^(2X;5]q2M;TdKT\E9)-aUkL(B<G3O@ai\Y#;C*P_isudI$+EJ)W([="4AKM0q7rHt%mHd.KXi;F54&C83&;13")<G$Zm4tu)ck,/=NN`^'=^d`\)L2sjG#+q0W.r3/;@b3dpZQb@CI*hKNk)t5%=>JG3"T9GF+RX43Z`+,%VXY#AGM\%*"f?dRjtjmi,o&SdZAV09aYg4+e=f=t!%>g[m$uYPBHNu@3.kQA?VgnT[Gi+GDrrTO!NKZ9$->`iYXiD\EB"Ipkl@/C%/@i_2pVb2Y9gh6%(qqc2ij?M%MZrN);$9]04-a84>U2XIp-_:tc8FUO.?W9k+a)&k8lRr`@R6NX,g#*."_Rr?gb(LgUgk*,[Pio7%62j-1+]42<fci)cL7+<Ri(.ahF5\CN-37F"epVppO:+$Rm]4PU=.Tj&S@&Q--(b]Q;F,(m7>?NAPNlJ*`@A#@ljZD)G,7I?$:O&+%'Xn."F"1oaTIFqK+c;YeTp8VDnI)+,J=$%^%B"o11J)*)Koo!b&5,]Xa;&CtdV;o5(PIpTWAdON>_^t6L2D$4AJ0T5)Q6WSfrP$u%)LJ#$[<O))C^A&o'R54c)UOqCemf2dJ>Q#Ud_0Z!g4mS$f7Sufr@[<%aup[O<j><uLVBuB$f[`[<#V)4@]dff=.lTaJO9?_C!En=%K_I!R$kro*@dLt`(0Zk>k0ure.7BFg!"1ZNj1uAn/`B<;3VloN?UY0]D[e3c95-OKR+loVSl)(8Xe0&P7p&k&mkj\P+b0^:8e(5j%Xsp0>q,I&LoQfht:/E6KMqeRPCR>FJ:ej>hZ+57J/ceS`$>(EIGfVE_%Jid3=Wqj/DZH4K9iM8%+BeaZC87dC9kB'$8LLfKRT.DU%1(s/I<jIis9jEFca-C@laWl%`aV2XY1t_r&jg7EP*r6$564+5*OOZRV3\Xf]-*isKN;+R!$'ZHnaC#5=&;WiH(X&:[cu@MgMJ@tl%%2a[0+%RQmfNF&?<6P\S$&5To85RuE*.:_A8;[mg*eP/sJ?)[Y#&3?Q&L!TrcV`s.(/`tF1q5qr8NB;rP7'RY3c6,3&Sq]_SStV?%KGo$Ed>LU-BG>CuOBYlA%GWcl[$$QO>q**K?J!,Qk&Qk$$(F^g8W)Qke&^kHAPk^C`Gq1\^.M]BW9,4'"[B7KBP9.=K,ZSRl1[QY%&aN(&PU-qB.E_!/G%D4SNc7Pr3^nTZWB$P;EmAo/(3H@6!F8E'l93]"T-Ed%VK^%KGp[qIk>^uY'juM9YB=*7:geO9`ge`]'&19E%G'XHFN9rYq:G%"s,D@9[j@(QuO>EN/\?!(Nei2,KCho_F)NSY63LiGS`#rFh^G@]YkUDZA$p@-9oT0.=[6=j9S@jW28Yh#G+UY]q%3@bP)&Mc?/\-t2<)'$,JC*K+3;T+=ZOd#n0ciXse$GjB[K$+in0M>N(L"BM.Qp[!5K-)'O3P,Qi?-p:#g.`tSVgO*&/-0:m48msa%P[)jW`$^0pi3Kfh$*g<X5oV;`))=K/8VsO+`MmHnZcNf_$Ijc`9QZ<pOu7d8+Sijrp<f[Yi)3hgN#<N$!'!hQ,^onfJLMju;rt37%jdSTaE<=1X8W\ZD"rSK&0[3aA('&I_,#53US5I+c)H]<L[5-]C96^FRSZIu:b-h9V8u64/s#;_ZELVQEE_TV$K8thp,WasjMbk9k%17Xo/h4dfS!\XdZlNA6Q!*5J(PiZ7(i1*ui4@TCXn@Me[,(_nCkTCEUCQ*=EQQF@96<'&\eXt,"[4J9j]h%Q7L3:cu79QsA_(i8u%pV[[HB[5*hQVfWs68ToUc]*;UF2/Ng&MGTs1K5C9.2k+1hj83_()dFcE#u9<$Zd&";(oUJ1e%QZ5M(Ce#7Eet!*MGid-AqY?$ZFu%:Y3Ya`.3,sNV/34Qil)#pne\b[S6KRC`n"sAYhbJ$^APn.2XkHNWc[!g9WiT:QG<a@cR)76:>.U_7@DgX4c#GA9AcYWXP2O!X)W'%f^rjl?MJ`%71LWB$YK9,A8$*`nE7\:)m\EAONs$a#J!`1l4MM'E=;rgE/3,9eM\!t%42H?mM+:VLER@#VM)2Z&0`S%KetOpVb*pa%W]@qkX?h\?C82uhal!LNF$Lnr]'r2cguN#NP>[p_8/6''Gu6OQ+Q?rrb:tq'!K<JPAZH`98.A'</RiYa60TH,_$=ID/3b(2:Ba!!%M0EN!JOXE/FHQb@,PHZ(.Ci,[@C]g\,Xe*s\qh4kfW_lM73[U[9SM%YjRM9K#Eb64(0^>Ri3[#,'?`@)glU#@i+*jh]S.3Ge1t.V%d=Ih54B8L4cRcVdZkXtZC7&4_4!H+ApI7lM>k3sopkqAP`DZV>r#C<6"o"4IG$pg"YE90YZ':+M"MC\IOF>*s_r\P-k[gJKL.r_^%:b7^8`7&8]ROpBJhJ*p;i2]G#9P@/*>'SG"E.rZ4+K6q+>[90#gacEV3\e`1;Jf<DOG[>.bAqR0!r4IZC4UVJA\l5K&fJ3V:1<h]%+SghY*\egmG\?0-KStOS`@/nY1o,a_0oZU`P%1R;4gfl#_66c+6QkZNX+`(/>594I'X?nkAU3qW"pUI@Apt2^43:0bVr\<ijUE!T%3rQaErmC^WD7J%YkgoJ(S)"Fd4.;O_Z+o2QlYb;G*kT_a4nO[Ss1JfB0bH;H*LGjM&%.#r=YLMoe`:AaFqFiKYXXfp0X*/hOBF0N%aU'LSCYuQZN1_Agpo)Q;Q&XGk^rc9_6-/nXiCJ<j$l;WGW%$()bc1NA6C9He[%Wcc4C6g>7*VfVR1mstFZBDA[^$:K-(\rtLd:V.%)!-Rrl5Rkc5hV<DJj@ah<2mt(N,r*2+F>+:bU#rkVcASMP=`(*q#]Q*eDeY[nBNWeXt'OmDCGph[c0ne7KkI*YZ#2I:1ul=!&n&@%<"ZKG5#dF[K3iO?##pji(`5$a"oB)Dmt3-20)1S[O?)VS_LKKX%PsYFB4(_q:t0G5b`;a7%'cWSM:M565S.W<I@M^k$AF1#@>%Zh%lo*3e$nDgYENQ3F9nGQ%K/cFL8gHZ/%%lA;G.GR,'K\c0;*?bC^p[&o%_:/f#@cVS#j.5T;C!Zab%1q4)Pd3T%K0pNJdfp\_#;Jc%gTZcA_(Nr/W)R'qR:6ZCk/6PT?QSOAo1)s-GcYVXbl8.%L/$c`o)IK[h8'ICpmE+XU)s4doOfQC0G92f@Ji7_DV<NN"/pGG_MD0p%n<I#4b?*R05"P`A&ORSl#(W%$o.k%p#CqU5,Eg6(BF`M56\$ugm@X"?ch[A!I%54@*_a58GWbMt!`O6uprR"HW$;>5UU`6'l&*Ec%/0E-=#pjIFR,tt!";s;K_AJ]F8G"Bdi3fJgCJY^[g^gd-]Ufb=9Waci_i<SC6XoS[/'\O7@+;fM)aL7LH/Oc8eURX_-l+fn_KT$$%p`I$)a,Y#"Qdec<8sTa2`fLe_!mrm9AS#hn7#BqK2P`b#j941+Q#6`-MO2=o*jrk!L_YhcC]sTG+,>g`64Rpk20P++%Ym5AoLQ#7%'(t,P>eG$<b$4?K`"FX8Qd-rO*XJgK"Qhr]adhW.Kna5CjZ1m:pdG(lNJeFcQ=f*A=i6hW_Ldl;@&<qU_?EmGenXLj;S]1C$3I+[%rOSC?=t#Yg;2?`::Re2R"WV0@+MqB?&Q2Kcfuf7g#UcWfjp!UT!EjrD,Da>rp6HTB92hG_Lj03QLf+`hs/WjC&i^-R^r*tpa-I+1%H>F4`?k245_EcH6:Qi58p7Afo]mjk@n#./)?>R-f;CTMa?;'hSC;_7?TLesBP5p\OpMn8=dSdAR-+b"-IDVs>P:I(6-n2MQYU\9<%'--(E6nV0g&mBuMN0+mhNWQ?I^k$SK0j%7?e&[gRI0_`fKK):aQRe=7<nL:R+0QTDTO3V>"[NIa@e78?cnZu&lcZ"j5_B_I!sG!9%<1[U$d)(93n&J:f&-n!u.YXRhUVbq4ekqKT,]TALPPCk=`<m":FaeD\d(Cn\<cI;)p<<Be*^H0)PXkGC(QjLX:*^7)021J6[^$lT%<i-]gQ2*1mW534mG\A'>NJn1L'0<UId]s!a@$'Ok:FZr:YX`X:MF:J1<JC!5;A9\="aiire7HJ]#]aotMI[i:!(TgiBSDoh1jF=q%pQ*`]Q\]0daorNA.""tQ9q2FFRV8f1c4JGu],4Nf`8Xih=G_DGU:Mmsc*GGVXWe)p"&'lN,%i#S/nV]037n*0;pC_'_"L,R:g.`_%aBa$H,##se`]6tS,Vga1GV4as<7"N<PKQkG.#uO<R8mXR,NGFl!JY09a>,V\bL(&nRC@gZaI>j%%"[@B(9q&!p`aSi[I>EW<D]!&%L%j<-HR9(7bM"M'>TtHCb*8ctECMRm!9$i]/pL<k9<l?#6n_59F*\!GhcAbo!o'Oi$%d4\h?LX\&hd<Gj7/(?-F5;H."4Wl$5B;K%/B*`cM-^[/@rnZM\Pdka2*]".$JK2K+LluB;)X[b,d&#IZ=^8_[!no\2et;#b`$\'&RL]\gBsE?&e?H!V%f@j"<9fVRO\#W+f;u6%\Xq;:T9OJ-6HcV?Epk)80WE^`_%Ws?CM&\!Bb`)I7h5Xg2N9:\8)9OdhT&KmcY>&Bo'5>:"Y@8p;)hmB$bn_1UJ!Rf3O#kfMi*PU%%9Ck7pIh1LAun+Q9FOllk?jO4MIZ/H1,1-VN#W8aSKs%09LDa6\GDn(ZVaP=h5%TXhS@NUeY?)W@%0)Z'r3PuX+(sjonOE)s)F#C%/1pbdjZ9[>L4Us48=`&s6er*.?)<rSq+0k*'c)gWNHa"cBO1U6/$d`u.`s>=%I0DB.H(j<?(FmY\d1q$bq'\/&OuA>Q!!_7a=Im-%8;]DSmR]R7M2qWDb*tGs?m!UmFFA5#R95DWbPb"\JMUfh;Ca`X;MQ7`Y/!LuU?W^XKKd`RQS<e$ONksf1WcL)@]T?\^l=G>KS%-o%3OukmHmo^"]MO44p-:r?;9_G[!t2]FVWMm[jr#nm9.?e`QQc^t6'N:NfL*naj14G8#X+n2=(7G8"*kb?#R-]G#)L>PoGDO)Ff?OG%MHO4;bt't<8@>iZ&_%qe/9YPYRYq/0LWg*C>1#WH$n6Z5`A8bA'IH;ENe4Q=1e'5c3,>MIlCd5/".?@0i\YA,dfZ+BkAXsr0OXa7%4lW\tP/Hl'KrP(R/Si/0haFA7'd[/$c;X>8WkF/3=Jh9*1/sut@3/)fo,*?AoDKLS$n<o#)TU#)FqS.(L[/;=F"Z1jN.cM]MSliS%0Yedq.+;?8a?S3_b1+'i>T!u?7m;]/!EC=:PSI<''S,6ROqc32^u4uj1m=1n<H#$HOp8WG&VKF+l?uhK%"P6%6,I>M;.G`7q&r/)%.'rER6s-<8Mo'\KKIk_H.;L-DNL\a`>PSqhqr9.?KuN`#Md8jSR@jt'QKD/I=BL8285;IE=XGcQbkTuA8V"+5Qu<mraug_%YO8<P%ZHDX6Jr]ekCi5!=T<%op!Q!`h'O3p(C&'5Oq1A,CitOK-9YlkN9@,23+f?)q@e$WZ*.Uei6CG&2Y36LXJk.@W%*fq[+@%?T&;m_b%AMed&?rgbRBcJGq)@-cX23NB.Q7']p(J4[6;T26nK!Qtl$X/gP>YU^GU=K-@bK_@J-A9aXgr)\rP7W8f2nZnrKSaC$O$]u/9cH@C%)@(3Wd^1V4SI(?t!)q?EUfMc8YperDQ7pG*bCS@;FY=P^QF;dkAA`8s=>g13%gUboR,<5U-WUd,<iAt3Y`sZ*CmW10iRhrQA'B<$%UD*_Wc3@,$,rNjj7mW$srg-Ja@FZ*6'kGOn`+C@Y"F4h9S#Oo(@E`+2;<(Wtk6ZbS#p[eX,>qW4P@9#aP05^#>M',&TV>!<O]VpY%WYu(m^J].Ei1uLV*eCM"M+/roJLK+_5$gPZACld+&GIHj!IBFY/>4I+f88X:)OA:<ah*_k#=oP?HVbSXosQl-IA3ILMU5)jj6J9m%oW9`"XuNMJK5r%Z8c2iqBCU:*e#TjWeDX(t6IC/%TIZhtN]aJ`?9+c;[f`(Em3M=)''Cg]KTYN\d(,<MA$'&8b@o(.o6J(aX+g^b%7s*&ae66#kCs#G%8UO#JkKm[Fi9+$eZpZMI1]V#qEh&)',)CeH\PA:DRQ>t5F0I@oij;=J+;gA9;TlH0PNTd2;mYM(,q=V\8olMi%#,G\H6@piMq"=n325pBg0!?qDKSq_\(KYA2<<\T.=WA(T2%1QTecP*7McP:so;-e2^J9o&*-+sPR&<+Z)k<0:O#`BW,CJMi?pTb;%6>6a@BN//1a8%c`WL"$$X3>t=EJ@9OptXXHF/3ns!\VW@=su'@b@RF,P%BSXr_$:9>hPVH7Ie&'r@\P>`V8)9@\ESV+J'[*XatG[%R5p'$SHeDI\jA1Qm.Q0r2g/s4Yd<UW^)*ftH-gmLFQt^=5jR9Xa<EpJ6r^kaG&YI_g+tZE(bd+r+&ih2D\6Fe"V32`BFl:lFuoil%]JZsK7.![:Xj@rgDscj_jY"tbCJ]=MXCM_^fgJ-mc!RF%>SQHtk?M,O?W(lg"l:-"qF]$UBAB#F*[asIOB\kg;D,#p;0&TZkb0HS%e6q.Cih5!,:pXF3%E6RMUFuDiCd5X-0smH%;%l;0'IJI/RN.dl-kFA;RM45uSL%#UWg(mW7)g!X+nERX>]X$VcOla4kOe3&k`t:T%nj902(p60R0Y.V=Z8^LQ1,JOqk=XF%6RYJUDM17e!>lm&l4sc1*lfLm=UuR>0H??oEF25MHD<,"NO!Mh[-OdS3\?l>(OBW3<WN_%%\;Emp``>A"RDeMjcQeE&#5\r'rJ]^[MB,@kQ80\8R(P#=/#+<Ih.B*-!Ie%'7?gKAV$qeG>pcP$>):\P0aK$R9X(oa<+Id2HiYBJ%bd-]iS<Us,NmWaAHu5cjUOgN^4]f1)>`!J4R`ZQc>!7[9FXkheFcs`grKQg-Cns[GeC%`o`(KM9^nb/0N(MAHb'7Wb"^KG-<<T;,%e4'K?0!p6FC:9s!e9P$L)U:AleEH<D4#d=.aT/S4Z3t%C;6%!oM:Ts2CS^UBQMcbLpqe'p\Ie3<Q#G)*b>iqt@c*Q^UkpN@2p4=3%Qf-4UQbbsrc6!%K:DnTa/K<lj8dTJ(5IDB78_qb]"B\)hXqIcJ/k_FJ6*2ij1QgdQ;LdY`&gI4rV7LkO;$#i)89KbGj.)#H$$9;^%Qr@3aKbI$$0?m.?7,uEF>VXjQ@"KncBr*3ce&7\%aX(Wf_Ee[+-0H41^l_U;6/dBBA2_i1.TD;`Jr:pLfrtQ,7ACHI^Lf4Ma6+fS%:<M1]*m+U#$o55&qBQBoPH^LM;W39RIhTdiE@P`)LJ972_+*_&]<]L\]IgK_J-jl89SrBNe'sCR-jYlb#NpYk::dnlqHPT(P9hq&%c&._$AHg&s)gK[^]VmFgm@9OW7LY3CY(?;#h(d5TrDFUUS-eB&-I:eKc&rhtegIenbX7:]VCek8RZGHJW@k6u0cYg1.0Rm$mRLNL%`P`RJiHb_q<mI2sT]Ci.aOMi@OLh4(N.;sF,V=-:'524%.1;E$&k5R;NNNo7S.Yj$W@&(OV5R5ZQneVO;i4Za-5TQs<>^m*G<kZi%ek$RLN+-YtCecJA8L7Opq&ha[ZjNs5DOE;>Fi>VbP&]d@L2>qH[WCel4n\PqVF$Bd7S9f0@8&MoA%[4pO@g"+aoEJ$,JXFu<(1%n%S$UUge`36IAWfKr<#^fOPiTjg/Rjp\Zt+(:O[Rh=06et7!m>l:.[.T#:\o#O<ejPk"!8/="_u;C]hRE1BsD(;ZS3n)c(D`:-C`G(%9r#c3J%)2k#CZ%.KSV!RXMQ'\>t&nUj?gNjfO&3b"ECG26,n$%[<FC!!ZTiYjL[X+l2kMnPL(jf"*eUZ&d:AR$shT+Q:Jj(k)>$<%7V\ISBZo;@D\*7<8`KCK1rbq=)T.?J4Y3KL4]<HP*,1Bs[RnGhiHZZh87qqYi",M6$U?QgPme3DYt0SgFgKNe]8[aiF$Kr7JQYL:%#Y(fVlmGl.1U1q;.+T%@`G*)Ur,d&IJ(R-bq;](Hq.Zqs^8J`UOE/E0>YI<A+YKW7aq,@e&cE8*Y9_7%(JtiWKF95d1;nlG7Ji)Q%.#Y!bga`83Mi%3V<CS$RSC/h#\;8k[,@!cZPS#OD3m,$>89pHU]9)m16X3<9j<6.Q6J<tCTL?p6(K)Jp3Ib@t'Gbs;<H@ZZ&mkXb%jT>2hL!i`?$'eD;E?V/V#l[/*V4F$H<\3@N>XYua*PRVUBr$%UohpOSOFeoK>Y)i@"*4Jhe!BS,C8RMg$RqO.T@PVI16#-jm2$R8%3G!aoUiaa;>tF?>WU$Gs:E/3nWi*sD(Jm;Tg4!*$Zmf6F!VJe6c`<_:OII&QN:HqH.Z0!`))Y0;664#u`[R_S^_i>9%bAjK[F@Z-%TpY]N+'2/iHqm<L<SfH"8[Voq:JJ7R(Jn)u;ELMN._X0/XST2O?<s-""DF>Blsfo0Y<H`nPFkJ'o>M4uLUF,X4rh7K\8tNSM_5l<%?B2a\EA2*,O:6os,`FhZ]\D:ke34lEr_61IG\`5Fh-R"kenOUHp:'K$HCGGWIu)_Mgj\6;*WI*DEJf6pHJID-3p>rQdX5\>Um\p:%eR)!45/;)Wq9@CE,Pq4Hj%Hk&3&+Fjlu-u]NPX"]VtR(&hqmc2C/5&'h8/cjIohh@2VYjU^$S,_@&MW(T'Q#_F1%riE&_'K:E8bM%*!YkgB)^]CQtNSRAn\:2K<[TW`/",=-h6@(IVb&ain2^BU'u%a4%C>_c[=RAg8q@q/bR2rrSmK7AU:`/\rMg%0r&leMsgUBCImba%s1'%RA99u]s/Z2!X9npVqfOt?eq\].\<t21d#W%88PK.!oUjAQpf$?ahiG7$6,<N$r:eClRst,/e!bZ,_>f"FH2KAT'_34&G&)k_%lun-tEtA$Bs4ZXc&D'jX3;9qrf-S]s=!s%'He3^.f@8$AV;<gZ)Y@t9[!V[-kod*[hD;'8DN9'WmBGFBqP+Rlj%YO,Yh,kgB$gS3%4nFels1\A@TRCO9l7G7/d6E$8mIZ66D;po1:"Q06KD5LhXmT5,^,AiXWXJt64^[6Yf&e>pF&1PC__L&sf^8*FT)J=p:7RpuSTj_^%H']0s+$X>NB2$"lhqpQ]*M,%Rl@Zi\e$5G[==64[iU-;j@'TV=rF4Dbr4T`BA97?lhk'koI`;&jjG1HY@W(_nh9HV0^q\f?O#+e"%i6ki$Gs>+8*]*Ee:goc-]tK&(cSF17V,Im"5EC>_U%AG-'QV*9bh:&G]`J/Rg4\],LAGRakL5MHa/fHZPfWGF*Mp[&57epBUL0;_%Hg,bPGU^o.5OPlQGISms(UO#1o?9F_rB9s*m$mSOJ-JW6(M0+LXG=l-X[2u[[^OZAm/QB4c`LH5.7iV`.^,aV?N2$1?:qR%O8CKR%[X/6Iq]^gC+C.,65<'&\Z/.RtrB:CVglRH!N=0RJYd6F,#+/HF)%J_&G:Zp:D/,t5ps2LKn(kf')Y1[I2VWkfeM/t*pN]\Omae4a%d-bQ`g&?VIO5HF1O,_tj_-_D?rY:b1Z/jtok#,g9=W%)H\aQ_64=BUAs&kra98$1$5#8VqL>>4iS*l6s4pUlQRXRZnl"&frbMJ'E%[^70Iaa25m`d.AT@V9Or\$pQeDGEC"?hP!@ptreUIqs:RcI;R3C#k%?U9W[VWj+o5jC)[m=l8Rgl0EA6]g?mn5OaYLHEtrnob,!c%a3r@brprYI;1&(\/:$_+0&Xc#q@UH:$RU-@B5@jKc&U)D$_iA8i]j1pPWrH"DBeRdq`-7TdI>1phuAlag&Hcl-q^ooQRGN+\)0W(%XUX3<hus!`bingW$sKiq(M?Fd51N1'3K(ZG/4phQ=scH5%1hNLof_fRZV(4r8X[=eINC$)4D.p+Aq.&B*=TtZ4(34R;N$0P"6h+4%kp9?o-'R5ai>H+N%ubO8=XZ+(BQ.9Tkl8$h&0BFFK&c\0_M[s"JIZ[N1.HbaOm=+C3fCG0g%=_u=J7[@.RA%kVIQV,8fNj(J;mI:%!+ZlYJVAT1q=Gbul(;iL%?B+8UQS$iC0G=4h/4.$Ya`YsG7CGMY<7U-oH/@*XLueD'8uaWA]Vf6j"?q3GIrWc?'[C@DG2/nK[2RI%6U6KUrkSt%k$>\g*/n^tFg1KtYY=g-/'[%bW])Po5GS!@/\K@Zo(kQa(E@&HC$2;VQ!K%Bd/gb(;aXTapBdl=liJj!)1@<9:TBO0%>Go6k:NY!2=5!WK\J>B^)s.'X([?eS$"&nr%t@9uht"/5M:QA38"tZ;Hc*biHGIRG.?7ViIb;b)<kUY9,'eK!'+?`*O+Um?^U#V7%n:BPrldc4Q4'j9*N!c"P*-augen+'3HV9-OQA6R(dbsul#Yg`>koZk9e`q@=p:C-VXnEptN9BQb*6^I\>60?JmX5ec1@2r<$r)SU%(W@Yl7Ie,W<3VKu11AE<[amT(3iFXt,1MjA\D#Ct(BPkbFGVlGHi7XNEIY;Vp9jM"WIOC(maJ@PBRiBej64j!<9NP!6!J[6fgG[h%nLM:642'Ip6$IemgW=o&+,<$bGO"JmnC-jn_/R,o^t#U&[s*n70A;2Zo\9-+XYUiTr9M+>FnY_0h/b-kDSPeN]6U!5Z(A^d0Rrf.%2L>7i1ste4haYOM7nerlpV3ocq\O,L"]lm1F!]-)rB5h;T82pN];ts+#Q<6Bk<A1pqA3'e5-K#a4RDP8[@HU0UVg<R2?N\nS'hm1%000$rkCVje2k%nhL/U.gqUaX"2ZAVq_%913s5gj47e(:7`0&_<:>OlMmI"?+H=m6!OQGBsQp8mf0n9,O+-U_SB9[i5C];l=KRs!s%?_e_B%U\mWK%oP`[Wg$7c@+$Rp:ItKn[&h\kT>sUYhInoHnsoJ8p[()48I+Xi:^fl\(3b^FLho@>5n*YT.[+XH4##T_tGEK6Pl:`%EPZp*hGd^tH)Rdlq09Je=L6o8HGf`"qlj;ZJ<?3'eADiBqg3b%W'0DUGA>IY_o(o8pE.]1XZc.$K1@.t^r?i`Fe@11rm>.kHdFu<%OKQ^hi(o@C&#dD!_j@m\7I>'@hB*fGBiR6Ed($d6g9C;nrGIsr0N?`74ZM6\[g/D1:4K`;W.jl78*B9N4m:V>ICJ[\<:)LD,0m/N%UWN_RgU/efn+QDf#Y-e)D,c/F]=%>"^CP+<S%Z`57W5b[pkR`a9=$fjkZVilD]cBr]="R8"5CEI4?)u=lNch%c"!!Ba'kM`EuH+l%O-=(#\#8"5%W"1q#JF9:(%WL>`LFf1?!jbbNt2&YA54J)(U\nh6$GSIZ$3QZ_)2a!?,De`(Y#n+WUIWgZ2]/pDu^QIc8dDS@cW(@%:Mo7gDWd+iB;</phX?EF>H^4WVe!9GhlRpI:7XNelT+#3T&J@n41i0.Y04</rARTq2Qar;FD\9"C=NGWH$7[AJ^d`4^NXnBDu8`]%[+=&]cor`?=m^Fe]<K?bq=iq;/DlfNg`7rTW]dDt?AFi#\(\%J.Lr^n'0>P7)d/)n[bi`^Xk)6n)MQ)cTeY(>1'^<,,/,j,^su`K%^.g/.;j[N0Fnr)6_d.tdk?\M?1o`Ag_N1PfI1+kKmr'\.5/oCBP7OdID!D+JLfqUbLOR`6^A)g;]^$`3:LB3II@hp]Y>knB\o,s`%g^>LcIrsf5WUDLrGDHk^$SR[^IlpR%5Pt8cWs_!jb'e?LS9DM,m)Ypl!`]%+%sMYF]3FZth*\(3mbkTOEP/c(.qOGk\fP[^PiqK6%\YjDNq7SN%K]Y@N?EL8O4?+2%p@d\_Rb]8=q0Y=9qg)BGr9he#K2T$@3PI<HMQH5+prTZZo_hj`K8RCpD<G$1'2/.t^HkLQltu3P%WO-ua,B)Xtb3ImOf\bu]G0eR>4l#6Am^3SNmOEVh-\]AM]fWiYfhR#=!?R=(cBp)-HB,\Dg[;!S&S5I!%lS(t".\QC//:3`&bE9+%'-`N:HL^Z)*G`kWiiP&Xh=e\Oc8ke#Ieqh0[eIM]Fr@sTb_*h3jQ)Q[GXbcgU-f%nl'kPZBcND5/"Kr7g56X(e;56nJ`uK>otSsm%:dOgN:0/4I2VJ80$34T`Vp:MBWOk_LW594nq1*)ekNlPe&EeE"]53)2n$NC-LSJ3qNm<+IkNH-<q)NaCS+VV$g=ec]h:t.1D"[PK%3k,F4=U8*I%>JM6q/DY0+%4V,l<:`=:\=SZ_<g)>F,<ZX\U>MW7/`>XNQBdcoFi\NoFV=tKAl%I*IF&j2\XAi_pdMufpajAUU0^8%f/"7Ifs-%:@i,-s"fFFP\Amd:73B4V]d`EW/$Zr::b;C+?<,2)PRh]nY]Tk#@`deC2&)3NURLu*Q_<"SAT9P%&^JZ.*b0I9]rdMn%cFBH9R+l>AF*H^3S6U5Z@N36glkc#KaHX\NF(Kppdr1;`p@iJBlD(g](nB;q8D74u`qjSf1N"`-FKjNqis[F"5+VZ2=Y!'l%XYhE%l84eX_5N)(]QhF2_CYJ/f?D$4kdX\#QQ+V@Z$h?s)tm;%Gj`"EWm5+hBh37Xe:]V\jF2<bN?"han6;(>p<W05)hKTLD9Clt*^"_G%^"FE*lj70KNO%qfS.%j!F2['X)LpT1SKV9:L]0U&$lO[Z%+"]jm]_!/_g:^T1!Vu%_UaeA4(g8MmaU+N2riL-]tVOaM<U?@3jmC"%B^_-Cbr3@fFI6[TI5hi]FQ109aT'Z_nY$`lp:]S,%#H[1e?*5_[*ANI%5BhBc!N\T,F;\rg"fEU=iQm;K%#%2Du,LBIQDP*&58G+%p),]IDSrZk"4CWOca_$CD*T(N0^SKN(\5eA0F5#r]An'IV8'9/@X2O'.dJM?IrZF?$1QTu&RftV?__9";dX;m0B[&-en>`]#a<BD%-Wf2"hgT_2g3iejc'A(hPF9G-i;VTYXmQ'[.nc4H:0hZ/g9\[Im_sfIGPTh,Mu.]?-22;Z^;'AT@;s`<Q565cq.,j<Q\/\uqU4*3%)-g=3s#>@8iV(NKiPP(m1cI/"0Y_pJ@%C=.)qtmpXY/C(\nfRIS\(HDm-M.I'<bTqHpdAG>"b'gZFBQ=>@0QNP.*5+l[/T\@=<Fg%E+f$M]6q!89!5gAI+c4,C1=KV's)51*UHC!Ch58l]mF*nDpH'ZrMA%n[lu@urjq`1iRVskDn:(4nn;b&roVeM,VR`sk>+m6>$E(T%AW>N"h:K-E)EW`!Sa:2QZ5fL?[Q<C4[tWT2Y.^!<BZe6Ta6eq9qV0P=Xl[gh99#A;bE_qXbiO8@_s@$YdDTScASSf_fL_]020Y3Z%o=+%Ln^ZmDj-u[=(Rir^/2b%02t"Cb\\'`Ul*S4bDnYDSXjnG;Eu<-/ZU+'&k?GW\/";OSaa;WO#1N%%lDn]%^L@,n(ZneBie^5c%s74&oID9i?Du.bSq71>1rLI8\bmh/AqOk/7:4Kqlq@PfkQ/PA>[d70VHPHdT[sH<02XPGXkg%]%c#.#MHb(S3n7Hf`Tt,RJnuKa!%7675m=aoNdhp%VgO41RFDSE^tD-[(U_qs4AU^t'&DHt2I]Q::3Z[Jq(h8\(4DFR4hjlU:hI^o<S2:oQjFm7?HgB$0jn;E>i$?qo*%$oWQ=:AF;,GF*45hep24Hmmg?2]"^%@*tHWR7R'p0R`]`im"EEDu5QToBOWgq9:RR5OqSG$.F,p)QCH)3]0t9"?r%`#cI)Q8#L7A%D<[ldlOtpoX#mt\\@:m!VnV$a1>UZQHh_H_h7e'/iAP")]D\Dql#(otVfPsiHDU53^)k8#qt9<nS'1HJk1dl,TC3fr,nd3u+k)KZ%bJEc*ftddFYW)O3f%T+1Y9se6^-6u>o)(#k+cJN<\bIVDIb@7uY:M76#!4K$>E<+HiuQ:khS@P$h7,K$kSG>%0BMDQ=4c9Z8N%>O%9h`i.h`7-/C@-b8?mWKT5OJb>)<\0WkV(/`+9#;J?TC50\Wk-XZEio,nZN1ad'c\sm+Z?[IXI]HSep4ZWN-9URlg'6gVo01p5N*s%0Xr!BTAH"1'9VDGMm7TCrb3ZhC:cY#GmPkkiG<<*9@fE80,p@`IG9*NJ+Bl7BW8PMOpBs`NQn<^k2%%hSn%KPIUh!cGu]ml%Ti,3%D*1q8I-9-%-73FBh']?%?RNJXWb8fW@H(\\euSelfcKV6TtfDG]RTG*7Suk*-]a=jaSbV5^X_Z[HOehOk2"MMqW6fDj]B]NDdD1o%PPk>>aQq7GSX$Z7p<r@&`5c?`mH!PlqhLe%pZcOd='B[YjL7Pq@-cMK='pI,hd1Q<^>*$ubb)S?R(W**3iWU>4\4sTH+pZXl2%4s%I6.-C/-9j\)<L7TDslGbB-/c9lbVDPXR*F+1&(*.rTVRRmpq/\bS-2aR]F2qfmRu>k2kIcqYL'=S!D_U$oX+]YO+Q&kP&P+HL^+_%#Blfr\D#Z:a5%*cpV3Q\fAA7LZrRAi5+d6!jp1Wqp0lP+=s(9*b4XA%pF#F5,f.q+Kc%Sle(qE[ZrHM,gS+eaq2MsJGsgY6YOYoo%Q<X%F^N%0><8ju5cJ72I>)c$RV`^.MDKU:b^Lb_UC_fFWG?XX6q:'jE2=[H%+#n%/$i%\Hqe'u0gPB(:gs:lIIOea"+#d6jisG['%mI5RGH]`f9Z#AZj\in]YLE@!&m/h``#An\M2I>kc6[cgJF=Qh$;u0AL/\qf5qr7eTnSSY_>7/!oG-=:mL3)h1L0nc"8([JR&#8I6%Qgi=^0;@cMD_5/*EUR1\D/4TY3m[9Q(\d<Re_B^35>F&kGe/[f5PJOS'<@nc6>q_7gJe'\5"n3">K4s.Fl'mp\Le%>&\k0QKHL3&%1@-gp=Q](i!c?TLhg!'iG2nuC(,]KT\C5*e0nXrk*W-B4l!EYt@QD$O>5Q_1pthcEVb',,0Cdd5r%0!tT!J7#kSP\Mh[UFdT<Fl@%S&=Q]dGcJHRO:>26dKm'H,7)s&&<NL0kn8-]h!c5Sj]^D`J;V(e(F!]gB-)4ph,4<<*8t0S`,_#NPj<.-OYREali?)UWMC_%pYaP%9=$^MEc:[fpMc+nbjG$M?*LX0XbifnUXa':pIJt3HmQe_9.T")=HIe$Yi2b47<e]5KrM8Z*)0L;#5'3YBg#hMFdnDX199$OS[T=T%iMB%<BpqI=Lse5=l+OcYN5Gdb(LCF;C:#mC=$J7Dd^RW/[q,)K=-r4:_VC(#K;ngmonRJ:p.'SdId[Ke*ipsKT#lFsX\<(s7jR6T%$;'9fU8lfNM:L.1Bl%Up\i1C+8%u@IXJ\X_>Q7`R\pXI)CP.<80a#e30UFG(%[KW6iVrG'gs(TZZd5N;]ki0S=WhY_\1E.Lq1LST%_:FEh5A;/k^>5=7N]u@7f+KD=M<+BngInXj&oQb^-c?s"U&8US&;1SN\(^`R?U61:]!N<;,e`>t-j]]OK5B^kQWD&8)ub;c87iO!%-O*dtNMYBfmq4fHT06C@4bmu;1$JqdZ54Uo%pN8aL21kDVsbOMB^jPlo\7!ajmBCND-AZV[pOQ?PpTg2IT7\3<5b4hR/afU[InLI%*o((O)dU5Ln[;_jeTGVDcWn44"S+,Ceuq;cp%f#2I+-tJ/DJiE=_/d&4Y>2g?%9;TlYc3<^:H,<#CtY4Jh=][+#Z^'fpjDFmr$Nf%XM4KkAtfk.[biZBJ%@_fVmk0=DQQ;_;rt7@OiQVVV=id&ib%'C(p&+%5DVMLhfpU`^ujKk5Sm&&_Mmf^F1%SkbWgLH)p*apQR]Us%$YnXaqV(nm019;o#1:;G98+@IRoeb/h3g<]\g3kRh3),i@V6]+]K+Ln7`FMI%O(#sh0a0[rc;Rns(+"=.[nP\Hl]ngX?S^Y4D6!1%N?Gn0@d)/)LKWW+mlo<\q1gd*([EF#hu0'VlSlDkb(JU6BshTO8[I'Z[?HU!?[gt'R3s)'\!#fl,rL#Gol>-:rM<`IGOL%X1c"dk%_oC:udoWF852Ah#GMlukCNS_PhI=7jRUak4?@)=TZ.j,Kc/,:@f8-+YT!a/#48$S<f5F`92i98@@VP)ef&F*6qQjaBnFrQ3S/=Ys%IT<rMl]hZGOW29XjP6Nnn*:fP/o;m^.Ae.i5<HP'K72qTP&.,<ik^Sg"37"jo(3^09Du!aS6eFBnQHRI%hElFO8/@`m`Y0oOoF2#%20[n7l(#@UT20pniR@Ai@UIu>\=oJ]INoHbdIsDjDtc:ugW"#!omGe-HT$9@ng<R.*I?##f%02a<7^Zdb$Z&;^Uo!M?VlZi<n\M!%_EmY%`rX:9X`T!f_4C<l<"V6e#OejYK)]A`2>_cBB&V>$YJ'MH.d9^p;-+i%Igr76h;Z]YUSE,i[sOkiat+g>rCfB-?cS0)RI7&6%(Gp:_.dq74[l!s"Nn349XbRGao?GTg)[V?7mR_3)1]<9dejG]+o^t/4gH/%a,b@a/2DLW'bo`%M4Vqq`O12f,O14;!M]:t`^PrRU%:+Qk?=0J\WICah!q9l1=og@C.2TAHT#e)1rdf'ur_0Y`]@Zj2c9M&022I-o5j>q=jV\TIm`DQTeNRh-?k#V67fLp.:q5),)fAA\R%,j?c5oY4M!^@UjaAnuIk\B/ZtHiNf?W@>D,Y.gVtHoic)L#(XSgZa1bCdW:p^SUn@Iu-q^k/W0oNGtKA;1*Y/k0g=m\M#0jn(ucu%5C@_Rqa\4K]5Mc^d>9KfCQhD`^=$/3qJPEn@cuUu[.SD6dTZ0_o#hY;ID_?#0AKJdbXj:!p3sX5oGHFgUcC7ADB>\b2=f&[/A0ba%dD-M>PgX!N@X"^<J&ne=e^FaFQ:GLch>"Y7BJ4g>MI+f)c+f^K8G0QN`DgVapiN.R[[SR#qYd>grr!Z#V;(a^WJSaWK*fZEDCuVb%n*@T-Lg,r*cdruI<@)RSf,P+#X#K=sqt]BkX]OD+frI+#f%96d1$9iT^OBsofA53Xrdu0IQ>S?uL)"1.HcO)d//H5.9`F5P&Lt?#%4J"gnANDJ$Msg:jlX+qnGW+6!1]',_]f:-^Y-5UQpN>Hgh1Nc@(NU+*05b#f:[R_9/qWCVgkBmsNj+`Y/ji:3J(UV?1S9t::EN"Q%LD\lQkg-=pTL1NMF8T.1qPE&Ib+hX(l8\69mn'BI+4F-Fh'ogiGk/cFk"^6tZo.URi'ubMiEi]Kp8^7]h%7nfMpjW?<`M,W+#=.o%)BTc%?9(+^3S>M,cUYt'Q+%hb*t0J9:NlG:\^]IW\]P>i^39:Sf@mh4?oLjdo<6f:4l?55FD'+KYEO":^m9i9gpjrFC_SfNW')K<%Y!,s(Iss=Vh9aHa;/?("q_t<u9Q_+4meZ<sE-Gm^(qIq9?UUI9b+fcVTiXF*0LJh<mf"V-]u>^W&[=C#+)fQ>miR^/q>,/Jj\?dI%IXJHkTs_;B5?eU*;t<(P0'ORi[A(qK;AEkP:@Q?N7K#fmF&4to5HW:uloujpF)emb(!j?Zcf,`Q_!#\u?GODXQbV,3_],`SoDM1]%`JpuqGK.=M3[I_D'=phgB8`<^$i+e6'b##pF`3o0BTjQ[mIdt._Ypq8kULbKfikqn'qFi\o^1%idtbI1,$D"FpU4+hVB4SI.[nh#%-e3![k9>:l]R8INp?p_Zfj\3ops34Al9!lG&Rm`K>$`!CAZi;mlJDO8>Q*fm[uX*1C-8M&H:<7C7"\QB<0^9mcJ/3L`kdt.e>#+]%7cd8n-A_<>>BfhmP>q4AWX=7Hg8;,nDV*Ll-XTk3RI<cD`JZCr3c?!(>9m*Lpp.L'l1"7E<Dk=0?/@74(*_6%TBYSF#=Rq9)CL2t%osM!1:<=5[4n$-<II'0N(,ojj@jM+oIZa`eh1Nu(oMs)$c]fm0*aF/C2^_aHoBMbBeo:s_(_$-,:U[j@<Ia*bl(`Lo.Xhh!?LflH%Z,,:^kO/,3i]:d;?7\:lq`@Sk5dhZH/P>_.,1c,R4&aJ.^M,fW]'ssIGPThW;CCW[9:pCj*/SKLG9M=H]i`VL%hIV`S6;:aR<dHo%?gJ4p'7Nr9))&Y&%!,*o>u`WQ=o/5:D*OEF3pI4)Fm.Lus$ge,I)>4H`\QAZYZN,=H#780@=)FLBP`)q(WJU`=d%48RB>4r;,2J1%f0QM8Uj@HagYgU@qS'p$jQ,PU0,E;priiu8ce`$+KAFW7:L;8PE*dFP'IQ'lFSTbo&A+CCHKT_B<kl&Tq<Y>n1,ZJX/i_:e%W:ho%8[_U-lXWT*o0ae3Iqp<J?9H@'5.&p;I<s\T92j%$f*fL^YCC=N>_t\pf.JulNq4u:ZYD@["^IdE$FXXTDQL3+c1]c?NS[q'et_L)%*S_R"9ER$6_D<^gVr$a=1dC<T\(UW@b6+\\FM'dATA?tafP>q=R*D[Xa4%*<GNt*UNip%kX4DIbi@B?,iBkN#-XE<Kqli'?Z6%b/%DZ%M%TQD(-g>)%rhg53?j(R]KLSGmb]!"CkHdC!^`n/eL08ja1)fNcUfU#gIrqt20S^TEog;eG?;Wf+(0AX-eIt_J0@kYe5R'3UI%`p<'a`g8?&+5C6'FQ9&RA+CPQVE=]`])I)dIk,m9EI&(m<+7<<`Hi7WG%\\bqeu*!(\Qtie^#(Pn[LP<B&uNAB;cpJD!DSM5WZ2t%nT8i4:@a=4UUF/meA$)C(>O8=X_[[6Jn=AsrTW#Dqorc7=s(K&2NDq*TA9HEpKZluCFR$qQ:IhDEdV]tE2W6-I`41-iP*L@on1LD%(2=(-h6k5Id;L:>1_,SFb=o[^qrNBUGiP(-.eJOIXrSR1T-*7FXf]V$>.n;#R]7!(3R5[#MbC/]2Kk-%?irOeiKHVQ[%"7%&/_Ze%59gL.dF,H"P=lGSk>.B[;d7qTj]o!pf'nFXUc81hU?fF.^1)$MRq]k.h/rK3ENDWG[W%t#/M.@2iTAQtrqo&rLUhj)W3rle[=2g>%Hdu>M_af9\KUFdLajKoqIR(OFCA(t9NsD0F/RED/,(gJ#Jb[ef)K)6)>Q*!Ola"3b=8#$oGke;lQsXT(%e:uc03o*s50Z3YHh@;A%$H>d&,oJ'.f1X@!2f@&kT$>W[Im,&shk$DJe+as^-pC?Y5+4*[_`#6UWB</7bMi<@s**'b-:N_^W]`@-K[m<XiY6,;)iTrU)OaXm%[H8,`'oqs$CT2J$I(5'Lqk_'TQ\UVLlW)!-i3[nkHgjGae[^kn`s7Q31@uHV,hEp$U7>Vs]\2+*ltuDHk%ecijnU]*U[b%KkKMio%dr?OD#VX*>3QA;Rs4=tm"!)kN*ZL>^%mT@JpH(Hhra,?k&PcJOIfB>>rC=3</C4gU'=iG05PeWQjmII;?$YtXhS+^]-g1?[Z&cKd%e!4PLP^80-Xq)$BeK90U<)PN$m)eF%(jcsf6<N9VFrC*noo8t>B1+YL-R&:J-NRAcqhIrn.()115PCf:B*EFM[Zr'oFOl*)BXcd@%;kAptY='!0hY=Img[c$KB:^uBqp-8s9D>W6#5sPTiG/7NY2rV/B>,!cq84Isej`]Tp*X@RD/Np&\tg./FE09FO"TJ_Du)1,>:n<"%cWCSRroO+(ma:PVT6duZ9<H9j,JHk[O\*7pMDSkN3)T0/Nd\@ZO/)lMIF)0RiF,O18C,R(*qR/Qae#,WPfMeuegsTSOKh[A;H'=u%<%\.#XQ2upEJrPLBYaF2WsY;elCVKBc"L>QM4Bh4_k5O@1FWf!LT/eG!*qYOjD/>rG/\0kB^JrZk^W:aQ:Xc!]WcDHAZ0@0kdQ7S%Xh#"o20m>bU$,&fV(d7=N]DjeAJi40g\WiKgh'O]!aaNtYB$0GkAA?%T-KNN;[e&%_@kQ3Y!/nf[SA`&1dmQKS85"m9<\P@c;L3@%H6seChY_sR*lrsN2+iYrK@Vo$Q!MD=O57dZng^2#jMK%I`b_WYY[uZXr^TOZ6;Q.#/"+eKem_2pVM!@NSt3dETQb?u3hp?c`8$ZZ%.Cn=rG3?Fm7iCN700S9aQ=6F+3rQ4/[8%^JPki@2<0c:%`mh$jfUTX.cQr\hO-9%(Q3(p,=<I2/*jl5[?[X:.d,.PC>JBB?]^0e@%FcOafOf_^SMn]3&I01g<7b[7NC,UGPoiXD+mBF:=fcHZG05!F^Z3LWj;KP(*N';7eS3$M)@@'noegjmRh^@:'AULB/Z$*L*>J._#%p`.o=3=$\SD#:HK^2pZjZ/>!:T"U@<E\WLWp1W8LH(@\'=K55u5NOE@L'Kd*duBB;7OpXJI4tJ&+.SU+5-eg$4m&i>AV5@,?dH(L%,4&@59)r5EB/\KL!cumJARrM57?<9&f^pq`rU,=FTWEPr$8"IKA9t%A<RCDAaIW[FBS7*YaGO.<jYa3A;G5EK\hPqiBQq/l#n:NW%Fao"jOUfF)Kt^Z,eS`o,\r/j#pd>Y>Dm.nP5>@4jKSglOU++S&-8&7`3",?21f'#J_`27B;VR]1&>HmU[;8c0c7l+bs7"[\b0sQ.%X(>-4?G2J9"ln/ij2JD*<>K\U%HGJhQ4b3&KqHYsN^:49k?GC5'si0,'_M:9M("9pPDH8Qm7p&p5lZY'=rbk#/p"G!5jA&#Y.8r2%`G%dNaXjI]'_/74ntaj)Ll-R<8R,L.H0n-D7%YS-dTW"`ZUGKR27t2q10U>%U<`BhH7fY>_`X`=">NMq75Y^;B&eQD0UjYO#VFFT%Yj?*MT?YAY_=,9W:m!2%W-dk<lBTSJQqX"tZZ1eeP_L_u=%ab6<#Qb&A_Clj1JaO1c&.TH0rI5-<)U6Z1s,>mN,Qla=132tBWe[=%m_Z7]V2rdYKUtj$[4s7C8gBM)841g'\?s?@\Wg,MJA)i3BXVlf1b7eWZoI^=Cli[15+<@1hFP"CD5dS4;-T2roY"Zk)petk(TgS+%$Pj!CCmNL)qj+1R5'`:^F1s5pc,,-GR3f5e=F0goJi_<)aG4.V$<dj#7_Rh)`.Af4"\D[7!Bip3FtH<Qg+e?uC^R:K'W3caN3..E%O\$J?=L>_D<Y0Q'm(tH5H,m/#/dQ(<,+tXIK"`iDq/seq)Ii3_d6c=UUcJ.*[Zr+CHCefCdXiB6=i+rgD#s#i=JXFsiOt0O<.g*B%;0"U"@,<&D;hWuCA+XB"d2D"6_+*N/Hs3'pViAhcZt.[W(-JAn\:U6`0#MjeoG?L*QkTm+'kdnd$T\G?d1R$?#,9GfBUP=]=A"WC%T^dtQ*i1uu,c!H2Cc9Bj1dnXnTqa9`_d'Z56HQ9ip)qNLO>f-Dc%9,41NGNH.@lp35YFEOQ\PE\e4.o[f-Pu#>t1G_d,7bn>F.lJ%;M5XSbhT$,56gBX\*"bVP"@C?R-:b&Ada&l8o%S*@?%4R#'Y<LhOCD7iO$0i0I^j[5[R>4)GD@%>=`O`rFTqDn>cWeg&qp$[+K)!%95'#a7\,AGi\X6++V;'^g.Z!-IZb;.A[KFpE9R2ZRV,[n`Zg<3>(q;\;>M[<;bI)ZV2u?HU":!s=G^$<,*No)n0,=#/9XTW!eK;6%O^f#^10TI$Qu8";%Wb?n7s*\+8<1q'1QL8@?LQ""0s(ot41up`!]opMl@tdb?JOc.C['s_0?DOcY1GT*W_\@k\?`H5N/6;&F><P<%cTbhX$_j@,e(p288`T9RZ^i(G(S6>j7r=ErrXGQ@W``[eYe9Y2ra8NN<MlA*#4i.QP1:fR<5*J8B!j,\Inj.G;eTrOPpoe(\mBa^%lGk34&:`ais3"%Wp#U8:*pE<GZ/]NW`Y#nkog>HD:tqRtM.&DR8%"`J-S:.VmSOr%25".`nc>*h)N'3n5;?f^GDSMo"[YLK='Lt%%f4[qS[Y-77k2WMjQK*E(_HBseD2]:n+UskO8"rq6/!o\9KMI-+j9<P\M94mo>.2g\EBn$]YhV]l?VD8B62V8nNcVeNd1FZ[nCuAB%c7fl:;fRQ\bGd9P"WE3XQ^mq?%Y.X]JL8?K;+$#?M<X;:\HEA7mg_KL(KZRG^f-=gM#!44'4;g8.<NqH,q1NE9".M3noN;Mlb\S#%hhdJ/.NtuU$+Ve*NfLf:(733c,Z2Ko`,0TZjXbO6Q\;XRoIjnb\PGi0a*/B0"o'RY?%O8\\JGQF0t36lP]."eME/.2+DK!`desa;%Jk0D.]Jr<)f9k;`6@^=RgI[!XCb]htb!r)'1494Y.R[P9D6%6;-Q$Qm)a3>l1o=\)"r<:knV%GfA'pH"r!M=$$DE/![IIlT3E??1%5tk?dMGHo2!n[k8JLT0+>!dU5$n_fhjHd<k>oH(T_F;Jj&Q+?t=-uBKneARoOG)lt'T#j+3JU9I-aAIW(s)r\*#9@<Ko5UbkG08r%e'm9DB9BW6,]ls4Vkcfb-#oMK99;/_>s`a"56km(Db2)G("/!DFqP%:p2CY^<0&<4'I44YOZ\*(TgAYOYl+NP&rEpqaa/&`B2H`-%O6CI4U_5X-Pju]sm2?Q0R4-B+JNRnQoV*q8rC^Vr1C&3SeeVDQE=7n>c7PHB[3]CH'aKga_Net+e\ogj]>^$_URW,B%<;YD:ZK&M%M*[!:T5[&7/k?WuBor*W`^>IV+>r9!P?=m-E;%[WUli#PZ'338clsm!,R0']r*5g^I'?0/.]=Yj?b'EF$:od]1nQVbkNDmn&1^?6%#gt\BqIE2G.3)tqoVr&l)h2=Fn/-RmQD`N(7Q?,>1FNkWLh;up99A/ITYD$Sj+E%D&k9Ek7HuiVIMT9@8P1403]585N4:$`GhD*M%V-=Ff7tOh/Q^ht3C*Mm`9IV*X/9'C-di-^c>=C-KnBZ,JW=>K-.b*FOU@KS#bojmK&DrFV<^E9]#2$[EiU(]r0hB\e'!.=6+16qd%9PqXl8XC`O0&r6?#7I5k$q^n2_E_u\8))%M/)$Yu`6RT[K6oZ7l=c#.;MppD.Gl<Zf-]au8P5=LNb*Dg2WUrR]9()IY@ETJQBY?c%IZ.5[h?UEAi7f^Kh3>t%K-ZWb#Du,r6g-835q,/??,1]d&:KuqNO2kcIVQ>![DZc%,0066pCDcN[JUK"[g;^;<(U=EHP8u$.i(3<%MLSe`Gp^$Y62bI)^d:Er+o3P!4`T$S3s!S-edNOBDW<&f"\2a:6FS@7C*JLg`9aFVDXFqfYq*hrSV2h,W.ik?'&85[iHV">!L6PU%!'pZu"4[:c;\#N&d<c@4ajCDAWWFcJb*-Y`Di7_X5YI9H(*)=q'2<Nec+\pu,RL9#o\u*>!ZV6J,fH6=S-;Ym+C\/@!\o]i/0_=[%5siP>e?He@*fA/KWO,KA3MLYh@8`K&=R=SH<Gl;&"%;#j^o?JVKf^U]+/4Uf@#hMiS!Y*h=b>am&oM2k!Z?c)7>tNV"H+%-'<j`T%!M<,%@q,k[LmUcTdS`C>?K:J\@3_Q!,qQmd(ZJC-8&P;GL'g$I)[][X"sOhNE_F7.Gl]f8o:^p:D#_G:--G`(Q81&/5/dWAaI,TB%.%*!ni<-iZ&)bIF6ODSC.0.]g9$I^t97lDaB#OsXOJ,aXW5Uc5Xf5?78<\Eh[6bi3oU6M3Ia/Il@T>g.6S9+SK"+<O;6+`&mn:%q%/Obb[W)YM]TtGWL<Y\G^n/&9/'f"8k*)Wbo=QKU_<CJ%D8=@UNC)'I4XiR6YVTd`_Q@SGp(l!.:7*''KCH43uM_kuc=P%&XIj+A]%LipU3WZCmnd@m*"ad`iFUAD8r0oMH!67No?p/O+'8`W%2S4/l8%b#GIB2K%p;H5^bD$_c_nD^7jQXE/#HEtnbK:,'hcWK`f`CSWM%g$BRGL8L]t"Z[)]?_42(!"rcE@4>dLh62F<am,_L9"?P!74Y5#5UK,#T%6Z"lTb=*fCFP*<#pnF8V/X9K8>n8%Mha)912B"bL0-J%!]ZW?$>GU/'mcDjef\KJ%eLB7ZU;ffEolCLW4i^B?6Kr1$ti$61CD6m7.iu#K#o3I6'__ORpB3jo8<TB9aS9@g!Ju,.5(LR7o,dE%UEKX]dF?i.JB)%o@BMqHM8?B#/0kK2&iu,g$cTR#/KoI\0IaNXR*C0N=L<cN+7(`_`Uh]43Ij9'4CCK/=$bSA\LicA+3liH04OMR%9o>bc?I(;>T,_o30omRkYb>FcZu2uDd<X%?dCG,k&Go!!8WB!((hV.1g^b;BZ"b?&g?:[F%Ig5]O)rt'#eLeO%0N[6\eAmGV$VcL%As/H,N78/HA%rW<PU;K[89ec5WO1#;S1fn*B[E%ZEQ(73,K7k,]S2*s(M-`c()hEE0W@aiB/D]*S]&J:0r0:2X+RcLT9n_M1@]4i%%'.e\`JRaHJHitfDlaL&S3j;MeJ%H`_tg\K#=fGf;J6@&h:Rq"R.&*]*8,!sdf`Qf+a4K$fNEeAU1EK>,UcPDQBg^KJE:9`!cIQ[%ApKfaEeQL)WFs&10XV\EP)(5!5oso=8/&'4%VfaGnk^U+n1E^oYp:L)Fk@084/*hjXr$"q+fjI^$Sut^7r#7RNl?#J4*oQQ8UN+D%_Le0`a+<Y!k40L*(T.d\Xq6%1\i5T__ZGOX`3BqNl:DU]W'DLV8p<GSi!&*JL^D0oUgZVDMb"n!>obN`[)==rRk;OX["4E-r!qCM%7@Yi?.Bh)HJ3nr#?I"p>%nqmU$H+K$PjqTq/h*sC!%J&.=n#4nKfNY&#-8Q:;uE,q$k>AU&ka;Y2jm@VK_Jc2f^N;cYb6YG]u!m>%9.hP>;H4(j:f'\&!Hc5LNRQhH/8r=KS$>:jm$F398-gl'RfWZq+^TAE?p"C-KO;h5Lu4E9Mt99"<T&8m9u*Q)J@p<bl3,="U03T?%R]qL&_[`=q-97l@;Os"<)Uc^cCp<R>ni4*%U``6;DcbJS.@XODPUY*'L$)idJB5s/"Y><`;OiSI*[DoD/;BRR2>8;&.gQPl/enUn%Og:)[k;=[es7X`Ma-J#Eb"n,fE$dG.W`Jo0q[eo[.VVO0TZ?7Gql2n*X%LnGLpnbuZfMergh`YgV-pTUd\k[@n;&+D5O6A6<lF+-%PH8!Lkg'-`Pj\GI"tnX4>9e&52lYiN&(^el=Z+rC%pBR0:hJlmkOGBV:.^V3%qRD*C3)AH1=)_Wm)V/PZa3)G:K^Hmgi3HcLC^Od%d78b@'7K+;`Ms9=?q?&/Gun,u8<8)"ErhS;3[6ein)b7<"r`[g]G[<7]<UdGR@4=-Xg@-i9*:_4nmHS]=[A)A!0.4c'RY@k`G/+e%MenUidh0,n3D5-N(nE1Jqjh)6nXd%6`T@"g`_WY5QeR0edI)4)MTIMr&I&cLrNDFXjWAm=DGYFGVjOR&-_7l#im4-bIP3;tlhdNQ%8Z@r%0+&qniBsF%F`(^*B./@i*R%8a\!/t<)lip]`iTrqCB4Y#k`^5oM[i4Y"mlc:[an?5WN5['b!Yh-M_a)!h&+=N8</:FR5:!H%9!E$*<cpVA\J6gaI]c"JSQS^dk,cdVfJHB8nIB_GEgPCA,:+g4D%o<O$/CYDd?08'A4p]_4g_#r_J+#OKt'D&Ke/,NA3"-ASmBrZ%/aejn%]O)S5<5:$d_.+n*-RHT3I`*:eP#u^;l=)%Po3\!\$C5$6@GIE'NlR3]T$_*+1b+qCM_iR.,O95,F*s/c,,gHW\et\8je6'%1M@j-\FVY%'tD!%WRmmChF3oo>tS'eG>@RId0bZEWH"LA7JMrL2F)Y1msIB8=XXp&9iOCuMrHWtR)'kL2^Wb\(#h%NPW[qZ5(cA/%_:DOeB(kj[=)W9Ar;?#?fpeI,T2_6NEdWd.d.7ZR)AYX"\4k)i$iZZ+Ps^5HURQsuGdo)ub6l?f9Zj&,`?i>I4Mf*fjMCh[,2_A.%]!`C/K+:3if=br+.gS=B*7n+b?50NI7^OubA"Gm]MUVDaM6e:bX\-![6Z5jF;Zgpu<fO<ts'Ql!$5R1D5BIO%eiZGpK9B"l4nS0%%1nF(fcKio'60ITS'K2JTd4>:eXER4t"3ZLA?AVF7bX/X8^IE5cpcOJ"qqLr=>-Qmh%MU6:Glp7$=%2(aNh'^kP2<9A6&HTbRNa"r%Ad<2&hNm*;iFnh?lDKS)2Yi,jd8s)TaRQnuqT@umnS3Nukj*nsI!oSuFmpJrh]nnW"oQ<0dFUDBq#3DHL/&d5"_r6q@^(I0gOX6g%.TYaUm[(%j)^&jeQE)'P3>k%P\#D9[6XF?+"X7(3e@F&<['_g#T`r7"F<S]-BX1-9R9Cqo_q,VYfei<^<I"0EOEI/[E?\1gi6l'p%:?M_a1p,7WUc+>k2IRP(,Ua@*QI,I0&JUkTHur-2ZHm:ND9@%C7UA@p"Q`O^P5gMcGZrZ^=.KCl4sM_!T]_@U9UW.-\jTC$=:;l;%:<NIgD;0!EF]9/Boes3nna7>^MX!jfOkS-FosG`dHVomR+SXifkjo!mAgPgc]i"/@S^k.)KR#Z*LN.4aVa[Z7^le58T+=b7ds"bS%W2e"DOXL9>3R0Lcqb7/_1m8'DaaF6KOT@_U%*"d,Q:!3to2IW\8[sn^6i)3$Td3_ao2ITs\P-POYGPX/[')$=\i%#$rhhZEGKL&r%SQjBNHN9VQ^Wp>X@\L.NV(L)$+u?^&;B\[hA82B;0IetJ$&;iX?KP(5$WmP:of:HZO@Iim50[!6DO(`sL`Ao#dXgJGhM)Yu=AJ=8%;T4Gn264h'qDF0nUJMqc;P!Z4L&5HA\_c6'-#>r]3LD<Q8(",ek:I(L8&:_@$bIKc.CXN8GuDSPKj>MY5h3P[IY)C4;]D"V-#1k!%]/ibg!D9d/ZDUY*ok(JnMeXTuQfu$l@o\"??XG7mn+Gkifg6F3`4ED6:JtZf3:,-hV/+DpWi9a0f_]dCZM&$9!m,LC6]OSA(:g35%]0C]!31OPkfptmB$;:q6-SVmM^Gmga!GN4WY;rN(6jH]2fZ!^fL=Y_hk$pHX>`n`C4/t`IJ^-O5;$XF%\"gZr`>CS2r/St?;+s$U%g=8=s7Dn.$;<sqBIF=ulH\%kYK"O+Oe5_-'cF%jB)gTDN38%i(@,IVp-piP;eYqFRD;,.3aUF`)eA8.E9(mI4_!fR>B1-WZ\I_rj%XTuN<rC8XI/RT#tUn0-BeATlFS*%T72KOjGA6%a6a6bL3DV#!bGQ3eQKOh0J,DRH3Jtfg)l'\*UjE_3#m=DCH^o#GR\:Es-LN><F%A%kXiQ]ppPHc#.(?&lJcq6LNk:6rGgFi@j__hS=3dnIb\o;++NacjJK0@9emTmc4ef3WJmTg!Q*SO6*E!cdZCrl]>R_b?F9gWF)S%O;!4J10+?P&P<o`d:j=d!-aR'3[la&cBBc5DlO1&Cu.l#!*A.Fc=^ni5$:8l"<ZhA?W$'L]@G!9.D!MbRUB\_Nq.b9+H'?J+(RFG%hIX$kIQk3;Y/$'=*;77q"_=QAAokLi!>`G[Xt$7V6huEj9m)\3A4:A+KYTk[k?'/4<<ZNb/a5C2#9JqBS^Lg\SQ>Ynbo6;]]kK$\%(I.:<CX\405H7JQgcN\r\Ta?V]6BQ(d_0A5m@JNfo37a>7t(6/GuYXS5[Pl(b<u']O?nmX,qE!*KGJV1@8PM-2J3RLjAET@bun30%e&:,-K\bh.V)kC*fHf4HCiJQ:,aNA*<NQ[LG/F093sp8odZYhb=l]Q6RXo+ehn)h]\h#cFo3H&+F!kpuSYtd=mq7/p'q3jY#/]5_%1X!hc?!9!5dV/_^VHWHnFMCtL(cuU(Re>l;&7UW@OKQdCO4+!Z%qMY+mH?R>0-].!LAr@G1_+G-@OaH<VT^#.+XJ^JVbdq1J-k1L%81T4'8Wb$#KfUQ@]ReW4>,R'(ffNOUFO=Y]*I7$!pi!'gADHnrER]k3i:s/e7J"_G)!.J03)geV8:;;,5Sea#-O,-(ff2Oc/*\pY%68i%'o>/3Ld@$\34RjXah;`si!?0L@ZPh7X<.:7A0,NSo2[)q%/5ZM?[^EoElA"rQ[Q&iWH9VY[oa(2[,"fD0Z:ot<`lbK)]'NSS%7O$J5$5%CNa]8mk'O$.]."dAHXh,!lAJm_`-=m1F1'e^!qm&1:ar9PpX2lZ6Mt?tX!<7$ojjqX>&CaKEJ:-3^O<SMWX-"]O)Ei5*%\cOe:I-4JtE_g`i>]q%C:O+1#'ke?H3`QA>-A)Qrh`@&;e/gcCP3fKE/#<Jbk$0?uQ,prc4CBhY,ERmD-jtUGl(])R-QFl,&'Hd?%;O',)9!JDt5!KnBI#1msYCK'V<8THh,k>A)W6X""<'nuQXbS2+,]*QC62)TnP3'>?"o]>Q.(4,?)E;/EN`7?)cJM<nf,=S$*rY=q%g2l[\b=5"sAZ@eTm7]%e<0/]d)+)N;/:28k"]l\cftZ'G/%j(2f,\-&nX?"(Opo;@Wfu,%(eJ$nkju^&5mOD8)N93unSj5U%E-mZ%;H%b#TN$LY\f[2l#ZN=qq=Aj7JuM:c#DAS<]Il:_alM;u\Jged?Gcl/F-fKZ;/770aDsnpAU[>"/ku>jSAc`+CFQ3I5\$jIR+9.J%Y0r062Se285WXYJ$+dJ.>pcj!<:Y_T-5tPq,?-^7@=B)jrt^Mkkr9",W#?9WY%.g/.O<,08Sf+3EbN+!oL?At-'IUbDoJ<,9Ia>b%JffLhP*LqbP]=oII&Yl+r8l7[120,iV,55n_a6e4bU*0Cjn-f.Y=EfjjE_,@HXNU\M@F`F?Ub::MALZ1f/]kAqNKr,'5^>JL@;%Q%eADTL?B"%5U:V%16%%'cG/X4*MKh,eh[]'76ng7aLaE*#Bq+U$Z8L;L/2)lX3hdE!Cjhrom'Jk[&]+mlISZsNja[VsWlZEM/PKb:%nT"\BBm/JHT=\3;AGWT;B<Ec#"D_g6&f"mI\i=WN4f+oDL+o:0+WR2<7d?Rj\>HhZ,U#b`c'a;I9siJ66O#fII/n@J/5b7V\CiK0%gl)NtaBCH,E)lBd_eMND+SJa]mlH'_OI]<K9h$22]SQ1?j].j0k9#ubUu&!F^YY4Qr%ZI8,n5Gp83l2T1>IXo^CGG[J.nm-:i,Ba%4adX]?areX$.EMm"]Z!7);Dd20ENOm0X=LV2$BnT@_T5cW*GFQp\@cnQ2Go"]tB#:?*cl;44c)1RNfdJgU%B?W!Lp#LjMkt^7/-j%k"<Hj'CNgVQ#g"$@puG/n)oLq[PUSj)U#uF(\RsPXKE5ID3Vhu#`4%7S4>dqKY"I^LB)!dJD'\+4:X.KJ_V5JmYn/:ZQ61Q^gE5#%DQYcuAQ_WX^+5"#BDZ7=RP,<m?Pc%p0'?@_b<brEQLe\R25jna8P]t*BV`(1n`>!0Pl;XpllnEFUDUs"9,s\Z'3c7Ac+"l"$pUV,%+to<r%5j*(<B6-,7L%+B=Z"KAAH:D=%#G@1fLE-C"V`*hA>3%go"lk)gA.t>9:)X>jNZ5l7RYb&q4^9.."t;;6s"MBfZ?pK1`eR@%\dUYJ)Q=1Z4DD;Fe=JP2RT3W9Ds9?"gO9SBCsG^"#;7igX=;%:Ht2EJPfQ0J'-P;'We\52p?H]El)PqQ.(uCW)Qqp\6uk_(qCo46%R]hR@Ohu4bQcIj'+iq)uIA'(pKSY8HTo-#R;[E82VX3(A/-2!)Vl]I:3n@h'2nXirUcfLhIgK.\Z>LnQ65Z3.kQ&\=Rm5=&)LX6$%@mOMumIG_nTAQ.fPm=&F9>5JHDK=K2W)$I5,'EtU+C1&rWCddBR"WnX2ekT>O8$X525$paSZ.Se3;8Tcq\*X.L4j*2^^Yr'Z8kVE%bt8FElrse>bhgqAb!Dr$R]C'.=/uSL8^C[]=GAsGI[q+=mr,[P^P)nNdYF6Ml7f=I@09XV!)j5(8-U+0iW6`V;Z[&eZV&[!qIIj^%T<aT^]HfpV3VO@pd+-(?S3p-S>$Lc5ZNM!Xg&"C@8Z_hHph<8K9jNf&4r$BnMamrQqS3=38O)FoD]7pUmmn3h!A+'qjL%%e,d-J"%eB&c/p4]K,6COo++-],'-,Y;:W^%`g@?jCsRmZr]@,r5]&i#[fq(Nq2\kG3miA]gmlG(S7Y\']3oFb//dnqDa,8ZOk[*`cTWoC;a%09rAl=f\GQkY1:=2!\NT/"dn86T!+HLm_e%;4U.5.)X3KMIn01rUce@>tHEZie*!1'7p,K^61&D<j_6XE0)rj*^K=<#%E=O#3\R/%8!OZB6<qUo*Tl`E)j/hKZFXBdj#;aPh)Rhs&Q/jgQG\[pjnUl@BG*oCV^fe76GFr^OV!%!^?K&T'Nmb6O6^cN`59lHCW;'UJ9(p+%kXmleJ\]C%rQ.'[,<,YQ\OhO=!f@7$1fI4DE0mATFfZ0_<I8PV?>4J3V'8,P[:"e=o0_:Z9-;0`Nkir^2O<=NVcT7ib[o9]$.OQ;%%OmYUO:/2$UTl*obeh70^:b_&[R%XJVP0tI::uBF14G(c/;EY3gV]3+5eE%AQB#KbXV=2lkWT*"34[BQEAD83Rn#A)ZB]TIEih/V%i@L;4c^bUE;mJ8]2p9?-B*1acJl2nEW6RoM9NeBJAms*n7qFd'[]NqjV@YG]S8X*A<dVKjr=69\7%.G7DdN$DF=VlhGiYpZo(.6W%D$]#<O%p9+"WGm!VsWENBXUpZ7=[]s[o53TYCrl[J.E1ZjVX*<]pp%:-$=g_%hZUFH`2B#$?kf8G6BP,2h:4ac,sLJE7K9`q-?!U%PSc0<3k=&=jLX<VcX`*[+eIU%8ttOSj&\i*j'5O\\5(0?[eUY#3/abh8[4`u(r/b6a[_4ZgD-;??&DP8d^H;KEnsc99+C,-a](tW%Z.1]kBmiNN$Ni#VoR9j4:tm<>Q4u2>PV:Ou;YBAp>:?\-U%T/lDRE4;]H!@'@Qj5d-C"%3Wskg)S$b4B4<gOShQ3`7)F-8M>BQ/5%J6i>'Eb11!Ks>=B..[o(`<cco2-)%CG)71U*X4UgFtF@j,1PZN7P`fO3bZEe@us5\'UnR2QEri]'a])#Lle>_/rsK`TaRTr2+`\S%6:DQA=L!//kqZXC%B4Esge8\;.e9b>@3BF.(l4Hnj@Z\dm;M[sG2)^LFYN/42*G!d5OQq<8li[bH3U0KiqkU6<\bVZ14?ArnM%e7%(&tap?earEs)q\_[a":6USL'YPN=7d/fW#r/+kM_#;GTsp"m+_bu<o@f3md*HB1Zmo7+JQn%J+eDPu>K!V)SL;XZbpKA<GM\^XBJ%n'q4o,*'>mmkT_KIqRWM8-QC`A_mS0X_%KrGupSB0\nh^0!u-AU7HSu3Fq^Kb^5B\&9m9MB=!*Ub^1-NM;@UF]XJlT6Vj-EQ;(i'%1[fo?e(3MN]sePmI`f;R?=YcsWHWpb&LP4imn3SW?@PS\b=86+9"cag7`t^&]rPp>NF_r^]sk9TqG+^3_,0]$k5EJ^H=`,N2fkee%_]Vr%W!FgLgSPWnOWMFVLIM;GQ+KgYSO]J+<.9O,U\\mU>p7Wc(Ns.l#k@Ee)k;(l)9=#DjXk0.,dXdfR8lC@PbZUt%@s[<ILim6%q'&J<%\rEEWo<0,s,nqc[<92oR1t^#SZ`n\Q^?!a7WS?N$[jJA\VWg\k_gE.\CrP,,upGK.)CVa(D\=F6Kj=5*mI"o3]e-sNl7"A%pH^d$9[H%Pkik6`c0l2:*4CggE9N=T!Q;uVWqgbb$0!j@%BHXVb,IY2i.2=<*VhlO4=Hu@8SLUirGS\Tf3HZn`T;+%9VNY+J5Bk4%%/CWC;I1r*@n3V')67C\O#6W2-bYX*dMj;FG9M;YVBDDX1U9MCAc`FsaI]N%E?fi$1uRUfp0^L'cOTh@)Mm$<Nt$!ql[j@A$/`AT%TUA80:DMmj&^[fN_D[p':ortl!oR,g,T!jrZ5Z#9e)UWUHN5@W.'VDIOc:@EK.^6+Ps2PLPq9ef4(HuZW'WcR;^*hA!E-uTb+2%,%_C5J(q(eVJB?>3iAo,7p7)gN/0$N8]Kfc+'FLs$DLDB7(b7m@+h1ZONUdd)#kVRiKT4W?VQ11p--ej(Zf'Dp^d!^4t_C@5SC1#sW%nDoR\l*PiZ45IX[XHa\oEFhaq$IU8XXO?0]F1YdAN&c0hLd7"H?U%_QAXg7PoX2a1PtKkiFE*AE2?Zr3m<Ss;2A`b[/^coBFs3&N%W#MJm!W5E@-b=Noj\Q,K+^*b$A'"j:P5$g<"B=$>!R(R1El0N'%7"h;V,XR%.N;UXe;:P!2AD=+G0bcMr\E>g1@2AgW=VQj[o8aG%5B8Q.<?p%Q,(6e>#Z0L:WHcebM5Q5[:U4(/EeI2L2C<%TOK?E;TrpjD/lc>LK357B6.L,E^2GUm,C7BneeCR&lYBYccF3[O4dN9>%Y9emugt;G-[1>)8+XK'%H2hMXpe,<!Hah@[gT6I;m)A-$\QMJq!N1(HRtYmdXZ`qYn]or^!Yi#s0niNC@\TNg,9pc5gdXTQ.4PH0%)[1YfW%JeVc;7e#kaeBXER7Lh`<up!eJ9e\oWBcP39[9oie<$!C5Wl<qPl,R39[u_\7*a9it4(a'XTjYKJaPQ\rU'!=HJ+LJF7"+%koq4YA0/W_51U3=)i9K#]_D&2o!,?]SE!=-('9&hmiih]<'"Mbg1:#jQfUZ%Qe2A-Ul-d2Q(,5'lp[5,%=%Y:Q<+A%#l0enoa8%>%3MB[[N[k,DEHjZcS%,KGYuEVPr3Fl+2_.*<L<;QI]:u__90:4Rb)qb1*J3uep*/s[,&02-<t$**$I_l3TZn(Cb<7CHCGFLt^b;&A%5p2?8F&<;m$SHN]7:He)Q&MjUR1F07#2j-G7P'aX!QF:AoXe/k!<e!de"")KJ6tQ-#NR%YBN3(adqlgAl#+o>@i>hoI0UB.fGZ:$%'(s\cQL'NY*!G4=g4f!6:G:\T1ZX7iE$fK7a!%LhUI7tm>`e:V-p5)Q9e!O1IYZKf/!3j:![_2%&u`,2IRm!C6YCV4\>Fj6e-6)Y%]F3$m_VeA7joAFr?)s`RUt)%6<G\-Q,U,3FP520AMfa?uKjPXGZfS+'p*B(;.fCX$ec%9Fkp`m>In1:>:2Hs<^KT^+c`g`:Ul'fq%\$I$`VoLF-+qd*nLKBT1c%*t$(n9T?b0$@(mPe=o)J?=Ph9LCB-fTbnW#)V+SU5<`_RG)jI\7q0&Y",XFlhqO5nJLk0FOkYEi??1%<dru3qACn%6_XZ.'@(Y8BX#F3J7ZeUYFZ7BPXI$++MG;JLB\sG,)`f,D>]qP0IHCqQ=V!m&Eb7`%8pQmX)f0aGUss2QYjKkLMaE[%eJeZM,`1%4gl*0SLAhk.+_@0KVD)j)mD>eX[:oI\OUE4+Ku?Ybr<R5!/-m@CLUrGugGVcJ!@(n@0Z"\I-+/bAAK&$C6<7YNd2jm5%T5.5;EiaB7<I=!gP"AaB8XA/s:UR*,A*;RR-RGs]7)$.&o57+_a7]TE:NHVFD]V!f4Q;!l?*d9`I\$*I]ER#thh&=9'D(icbOUq9%I2E,_aKErK[g!Fl.H^-GlerSAI-ZO9EY,?%f*Lj;H.mH=N_XctEEZQ<G>fegdmY%qq0/D&k<FF$[-93_[nR#kFmBd\"f?sCI8QV?%NWosIE*e9lC4#rT1npDc2:-3NDg0s)2-fR3H8sL-mJ>pYdomXF\GM>_`L_M2\Q:VZqd=0=Unc_qqg%!'EJJVW*0A'KJko^3L0!2D%:$$&*7ToqQ5Ve4`&B46;[](?:TeG>PV>;soo(a20TVGcWO8BO))G]!q9B]bPk6h8#Z</[<8D[S)EEGD)RifI86V9Cb3s6m<S;VI!%gLcr`M(C^X=Iug$JPn'NN5VWh$a!<Z(DA>1)YkAhMa8<1UB`GAQ39B@>1]Id-QAK@'tbCXfi*>1Oa>M5Mee>0BMX?c8](4XT'\M(%'&F`l4Y>SE6c-;e1_gJ5]QamPc*%YP+#Z.?NTRU1)B8MM:JEDHFAALPD\\7YD<2<1H=4)%(d@oo>ci\=-_F5O,8N76HSV+$?+)n1%*cLe<RX]?Fn'O51Q-t_slhfeKI;eLX,mifO?T>bqA7s\Nm_\LNKjCI)X+>Y5+A+rf$-60m3C?P%*@?*Ci,Rur98CdEZUr,+-2/"_%3ajf?c?1b-#Wbs"0@bm!6lS5hMl94*n!Pr]H]`#eE^V9,&M6]l9''W*I-3>BRJas!-nO/8SA5c.kMP05C+.`MG4A,;Nj=q!h[J3u%kufHe.3.;YMTC*[BLfj6e0o.?]dDu/LUuP,-%E-kao@tKU)pF7RL*;dF0@gnQG^<5$CJMRg8TqjD:"b)>h#JQomuo&22K+5A@esK%?'Z!BS)*G:eJ4q-4j[cMn+C3(W`.Ui,hnM?3fu"XKl[S1dq#G=3MM4fgseo`'r;lJB@M]5)k#NM3T==!6=e/-\j+[@gMP\PdmJ,K%WcDCh/HqQc.B(5pBQ5]MM&NI$;7bs/,cV:RH9j:<LC-@"$#G>.#:_3<X^'=X7s0P1TQOWVe@%NEAaR/<kin=;CYp.r,l-"Cq;O;%%2`Ol$EDH'4S?!r@Nq!7trN`A/H+!*`4-?F#f%pB&dl*M@%:2OlSq9)QFP,=474=W81=,@HZAH$<Ht9!KCW>_hC6BauL.e2Mdr=YK%@;@f;BN"/O0X%e2,bZJ&A3r)nc_W6c0>duo$9Y(X=c-A[E^/d\FkP../O4um.qoutUe<5W2q/Uo:En!X0JgYi(]0iO_M+QbeZC=H%Ys^?5VF\FT@^JU+e)5f9/Nt'!nc*jG:".2"-8FoP^&_M3bO([Zp"C0uA0"22l&TRMY$^5EQMY:'Xh_Wba#TbYRDu.oKgf(F:^k,=%C.7$uSDB8p:X.!MhZNc8U52uN0[R3<CsHkb(/V;5;.0R0kIQr_AB=G74I-^Wp\4;^Y/Q?3J\tMTTZGCGca-mmTN9,S(lm@n1f&dm%8:J%5H.0=%VKXO@ZsA!&['H'-*`H5eKrIOG'od;F0Pi4:P\;A='LYR8r&jXg)UD^V1#Y^lY4d17+CI]@HPQkMq7EbW6Q$)'B!ett%JurQ2G?asJbPJVbI]p5[kQ:U/1#hs!ae\KZkaU!u<(0mYNHMp6rWOj`/Jct@+SbS1fpimL8cfTfp-fOt\rVlAKCdC/DQD-C>"#/?%7ot%(.oBhG=f)3,$=p%</^=t7XETn86O$S369`nq,V,Q(fbO^PesPMu#VhRXKgQl28FKjkWhbXLX(p(YCfUqWY,jW3ho]rh@>e?X%G7fGZDB3_39/r7m/Q!gsZJ6g&]Fl8#M@IfZ"CuFe7`/q]=cBO\q3Cg:2Eg8jlr)!?N`)_l.P\@_loTLpcqT7Z+Z;]gotH>G85IE@%;+Dg6nU6j.`.or4GGF0!p!F0DGPX;R-7m<F`pRuCAGLMNVWe4#7<(,@Cf4:9-`Dc$F1O!R-^t`:!!I:A/!?sq2P>A>'tJ"N:$8Uq%jf>.&VjLO.H=]1n?>_"kpk3AQs/'FfG!_X'"-gnU7LViENkU^H=I_HY%sWEkXDT1pV:O;kT2R<Yp`U*D<:UY19aUl&&1a'eCXjVF%)-YOQ(oRB@W3JJ)E`AqqS//rWkY))l>RTmU]:=?/c#6ip%]+IB&OJmf`U8)&W+JV0=8Cj.b*LYN#]'+2/%)4+*`be;A:6(+F=f1t%\)0=`Gq>fF`nF/-To[9L15TrSQ:FQ0_S7I@131lr6o"GRp97("%8$8Y=u/J'o&)'nL>5Nd_)h[?BATbK^F/2=#s->V["(+(L.@6A%foLI^TScQCqRJMAD0o[.DnI^P.s%c#iUETG0puaiE&!KG6=EF^/pca0Nrg:j7k)9Yf^kd*PG$?#pKi+G_4LAMYW^jUo-Uq>EI`<$%c9a%\3UXS9Di=>Y^!kkg[1<@Ji"W'ep:tnnaPRBiOUa*"=b/W@'7AMg>)$?E7"hfY46h`>Vbtg.Co@Z1ic@9.:op#X'F0];K`NtR%MFS'AWMLUTG2,Wmd"h;>QF![s^3TEPH+JU>2MQ-PJNR;b,NMs4Plo;Y*MfiF+JBRFHMT!)f8Bs\YZ/&>.0m%:I;m"?;A-hu3i-dP%Zg6)k6W&t1PHW#=RE'"Z1TK(RQit+rO=AK&D'6B1oQa2`$ngsIKKqkoWZZb8LSJ[mNK=,HI0:3]ASBYE*1IcrgTfMD)MN=jA47:>%V]!c5N/#.Rlu-AEb7RW`8f1*39Mf:5I=aDO=@Sc(hlWjeMuUl#N5qfOMRD6NB?JQll*Xp6f7Oh>H3GX9Xcu2C)!*/G)6I0i+_"#_%X2=;uG%u,eRP":`f"a(l2fG\S_]2-Kl=fU?=YdI]Eu/J#EHt9C"Wlbk(ILU7+?"2!WBO.2UoDin8$%Q<O[[e,[t750c-EhV!@mtE%56a!p"6+$$SMFNG,NWBf7no:9mL:<^9N5"+HRb_h_3<;te^_FQPB4*\TYGE!MA>Nu@"99.`7rf+/j<7.j=]ij@;].+FiEuTr;Bbm%I5$OL5>If7Kei4B1O'.5ZL$O$#!Q,l:`5)%XITA"McZ>+A*u`D#sf./Q:)q'5=2UW"q\T;'T3?,TXJjAF7?L+$:uMlp7%`5Xr5b$%Tf1+Q=t8"XZt.dDPZ`,*a$*BXXmadL[#Sn.[rW[!-L5G+ptjgl!R+BG+-4./+E<(cY7_jK)a='Bg1([l7UOg5'M;"HN%-h`ZO)d<%SaHM1!^%c&../jKHB^u:ZN+3Q*e!G!^oi1iG42_c'<[)UP_`CHM#Vj=Poq=$e&Jt;69Aod4nO68>+Ea@!r$!SX^$M'-s;/8qar/$%H2)/sNl[aZB6XYQDtQFSED(3DXg5>m)'U&c!N9?mIE^*H"j;!fT[g<&Z81+l`T3//SLSF\$6+>.I4XHHY:!.Q3$V6c.k#MU7-M;[%)>U'"]K)'(I$U@`FtOTO6^AFLdFeu!YaHV<N;Wl10[8c;[&JC8Ih6?TV:_\5Jq@<VFBrNlJ=#N7n&mBh5q7X_ce(ju7(+,Q*\B1P%;!.&33QmT1h48AU`R\qCj@khFq`K;u`9'UfXnG?H@hkj;V=R_.>RCoA`Jj"dTEqBfPLG5$2:o=`M3[L)ARm;2L$OYC-na$)W7)Q/%lkJIMpCiX<(^@G2J0C_0-miSHrt+.Igr_p>-e>@e5p.B-PPT6V]_An5aWIrn1a''+.n;E!^.1]?p6b@Mm`gO@*r'bjS$_J`X\kfU%\/YGWk?ndbqe5hi"3l]:mG<4j/]&CkTVG<i'SOoHmYL_o?0ZP@HuB]HSMC;5MZK*81_&r+Bm!KrOD[NQ<N-Z)W"mRTekei4IlW\9%7gQ+m+&\aV%DqDrc7%Q2<m%>B7:ZZBN^$C8c`:Eq(,V7i/(coSfNm9S,aimfLn=OD?tYK@WsUl*@eJb4m]Hb/7rfIlqZ2FC)id]:%\]].1SQnPKU1$K;@,iY/cnqo)>jdT_f75KFd:SPfZLkCoKT]:9d"4?W[As^>imjMQE(ql%h5lcI4mB$fB&%]@_1NRo^f[op3<`n"%MfFSb\Zpbk$3ll\:)*PFE)'tINa,$+#FMX2[KaSX?X=sCZ^1]_W6Q'!aL4??+`7ulIL[maR<^-T7k(V&r&gl`aIDYkh'>+C%&ZYW%#D?(0aT!H$6bZLB(p5<]:.OFe-G0GOm^>DJR(toSG3(5;%@7f;gfT<M.!M54Cf,LB,/ni\KM:'HE7nLje=nIeGc0pr"j@$h8<7'`%$XJkN?;_#KHrmH3-e7KC2MH#@_j0#r?2YPN3upOe`:J!j7miQW%P#LI^Obqr>DFtrkP=[J^=*+PkadNhSst:ef&5`?q04[cZQA)h%Wl$>D=d9]'A1!N<84o)U=XB58=)Cj2bsKTV9H<CK[na/H_oNEF/UFk+%]\FKNZbe[?GY[h/ubSX7brO)CB:V6cfWr_[VQ\EBCZk0%SeQq1_i^8pa;#;`2EH9\MNe`nkcuMoa\2G[)1rL]XaIpsdc#'tIs3+=\cEHse$'B\s+m;*"ZKD;mRT_]_mGj1-'Adp$[u@l0/):2%]`bVW*V"`':<?9_&--aEZK:9Z\4A6hGSHp]bk<R7g@U#hd,t4ji(ano:B%7)>%1<,C#,m2F8'Z<[h%0';7iJ:ct8Xl?cW\Q<O+/#%;[9jMX-umnGP.IqanZH\&TUrc0i?g6h\AOl=k[i7.91GdE0mn2"-\a=5oJ59EWGh]V:H4KUFiWI)<J*VTCY,nGiH$ieX[B<U"CuR%SU6'^@ih;$1F6"H=oetn6"DtLYTRihPk_1+nhc5E%UoqB^7[BDZs\!R;oV=?quHoEl+0`]UB.PJ3e>neB]!lTn2)Bh+JVTY0A=aD%Hi9+"QRn/1BSfna?O>:TLCBl#QJ:]$k2NaaUtbO!M8onBl1N"gmjTf`J^i572!!+m.Do86N'nVg*6I\u^N]5_Z#uW;=CX;D7Mc)+%35#<Wh9n+Kktr@cV:Kfc+uentXTVR*@o[<4aQ@H('H^8Z#6ar`$gG&pIIB?'[8UTf.GJVaIps)>?,t]^U[JiDC?K?9coIpH+lB[m%1\sojnW]<).;D:H$#@A=S!fBN<ifP7Dd\2K,U!Zg+>m[PAEde4TF^lqb#XLHVjX&dLumZaD1FGakMB6^61"\clCp_jdR&EX=GAeO%)bbitl/mDj3=j)=c(ILa2([\KgrO2dlrXGbi!MMEP(tj&BZdBU:><@$[7=RTZXU<a3+WmIfK7HG8qs?N?5_:<S.\Z)eKo+n]?BV8%Us(gqEOeX%b,ANQ<i(:h/d^j=c6d0p-V?$rUVieb#L/#9I\cGaW)Ntu+d^I=QF`K4+r(b1C)hOFM_3&J)@2C`1T<JK(&"bt6=J`1%G-6%nD16Q.j;d!EZ?+ktQe(!^0/^q]BZcpEA5!HUEekTHp&gii8XG9i;F,!ikj3AdprDU<T^Q%QrjGPQA9kgnf1?@i68M0V:@n!]%f2K?uFXTf+<]j4\%I"`:\%!Rs'%;+*WOd.#!AL7B;IVA2Y(eu:Wg6[@jkA.VZ;D7a.b<aa-":Gu0C/JBEIR5nH+1LQ25\R9_a[EN%EGL5T(JcnF@V4h<?(EkVE65mt/t5V_;;CkR\*^uqU)/O1>\:(;C4IeQg=#GXAaiGR$qe?8q)WMKClTXg&Qtc9=fc9^0j!\h(3:a3%60?gj2(ZKs",A8S&)'4'I7]?+$#$j6,g3RYBtkLX-2)A%aI$Y\2M@VU+OI=/@rdnBAR(M1,4n;ApX2i1k%F?0Xs)`Sn86r45Zb't%\*.M;3dCE>5]kW-kNJW#p)c-^i;F_/qhJp[@XH1AF#T3MCN>N3Oc?rddr$D9fm(X[4_SDYO$l/2TZ]V%W2.N,OQbucaTSd$*:^bF%J0[l0/jDC<c%3*)IdO[fAWrr%G+/o2,$_"@X@=d`5S8`]N;hl'FFEN]hn'u#ZaV)D#W[4*r\9E]!%SkU6h_?fp,mZnL)AI&0Ni@/%4tN6U-G3#H$UD7&nk_T&/9bo)44$=`6?Nr9;CNbj5jbk%D+H.Ijf/RU5jC2%'rgnZU<Q>@#CN=;Z:udkk&*H9Pr`%d\"6pLaE5L9%`rXY7.C\:jbJ$FjSUFI#Yb@^a-'5?,$b#j&E^.WT\4hT&3uF)nT7l5XRh[GfCFWuE,tLjaS9f&g9NDN+o<:Gh`@uKOPp;1@ULf$]%G`GK;*%\U[.Ip^c;+aa9.mHF+NCFgdHBi4f?mS0oJ6MIlkRNn(9LX;=)F5+dF#+n+eY?lHHSk[lTlm#pGJ/^7l/hTbF\!Z$/dks]%AYIEbmh7AXJMj7%49K]DkK@(C`,^`UT'BbC:\;j&h,A/kMakVKRL(%X[QS+_QESg);r;B_!7[*61\@+WKZUOH:WbI&ALU?NB_BVD%6`s#R$@]&:cofkdoRnd:hp!8JIrHDs:3=6rhc`71CklK$8P_h\/FMXqHR0_O(AH_:W^R\!(eqq>^F\d(hYFk<q-GU+6-$`m#-qpF%-E!\E'/Beuf!6am62kpB,Km=*nqsl4@N3^q6YKp!2L0SMdTjX]>%s`Lh/K+ckQUd[O]n`HbU,u86?MqK)e_^jWdtlJ3*lWPE_pk<%KNR<%?h^!PhjhP#d2#n^rBXpZjUC>bT-\+mFlG_\chSffjhh:!"ms/;1#akM"ahb81J4eY@dUQ=XX/*?g(8[785Fo9I%G-)f+goM%h>IVYCSBZT*QTE.F?jDk2@<L(Sb-5"=P(6Tb&161r%-T.#o+=//P]_>oGVGu[d`eHmCmUp1*#"BB\nUb!Clahi&\Z4E03aQ:"geq%>08\O9sX)iK$GfOU!d*6k&b63GBmVJmYAb@phSU<o(]f?T1qp4J_PGglH,?d0J&\qHE)='nf6>B*%N"c_e4".CVSnIX<orLK;?,A%IL%/ITd-3T>-</\5b_d4$+XF,qqGuB0A](l8fCBU\*hh3a?-pW9_+utLl0FbaW&L1N;eG>pu/l;1^fS#cfDkP;gk`8H\f7c-I?Z+%V397nrCC[T6tTDdB#q!9<&iq_P)0#&qKQjBhnB-aVKJS1mBXI;Ro(O,B["Yj2%dp27sDmA-\MM4:cNfSnHJnAh1$/C0F]pgK`ITP%2h=IEQW?tT2^+"Iec!dpmZ5\ij?ME]9do(>.1rN5qYT#aP=kT^[%88><!CHcPMYZ-4>!Euk<qQkVs#(&Q<Tt5MlDVdZVt*l_GrDr%X8ACng'fDX7uoqJibJ2!E'>$DLWcQkG.9eV>pk-1,Kpr+:Q]sc_2,^MdF+hAp.?@USO+W0fh:%!*F?)dI07=$lL5!#<?)[i>*#@2%$0!r#.SqT!0U24T]q\VpS+L9XqJaSdSr`15*AeNi.m#.`S@BT2V\B<tJD(P<3Ebic<<kVpgVu.'PlXM9(f>GX>L&j/B6a#)8uB[o%_L3"l"+9\=/Xuqd)$JRXLA+u^r=XLX5XV;N<JprO]qst6KjpBH9F#+R.6nl`:N\c/!Zr_j#A>CjA;Dk:g;N`$LQrX7_7AaFBj$1L%?IL2oSmlTTIU1T=!3iZCeRVRFVX"gNohuF)`'%lUFTQPpe'JhB;iXu*H8Es0=N<B'f91E/Z`W`rB%rDE6qd/AlR&UP&^bf)e51V+%CV7+;mu8g\@C>gQ-US89\$H<om=C7M$+?Rb3jRd6=d[dGd#XTu2pqSfVT;l::@II+&j30nBQHJ>FW+Qel#a*$ZXm7Zi5qjR9!q8?%q,Qfo[BX.@1-_,Al6PFcTDn&1/a4>?Z96t2ZDkNLm'Ig*l<"D2YM3oH0%4,bo(*qloHWLA3d=os@*'/e6JnQW%Rkb^ih1X0F6WRX%$C"jN)a)@Ip$/\UV+-#!DmbuZ0B]W(/7ud]Qfk/7[[>G$#V?[5Xp^uuD>8WNM$s4Q8(#[_A(0K-[QKiHDd,,(p)](0YICcT[gaE&%E7ELg+'jr@61\IHlO*jjbojg5gL#_@aQKnsYe$'l;-.$=Zum\J,f-?pq1.R"3q<2"GpJP><?tIrJ.]m>]J!5;nM!DrPn2bidf\&M%2Q`cOAn?>WZEu=\,SV*P=h$r6"'\_'*UV%>M*i#IKR[29b_`t4A<18@eU!AB"NP]=,cmhZ91,[b-,?.W`bL!M$RX0_2L&GJ;BI1C%So!DY8>YGaB^B@'h^XXpOK@Ffom$G_Q@lgS\h3[D/fP<Ia</ZPCYB;j&84K#pA0('DmsSuL50V\ai,3am#S"MW,@lVk'h>KXPf\9%^M(#;,-u#\DltU(HNFYI:4qX_XC!,a&Laet-E%PF#6/DSKIs^om_(6m/uR0iH<WVsStNQec970U^Ug;R9$+48ppqSS0$#tAL<Xf?%ojJe["$^Xl>JV;m"as%;B4q[G[LJcpICT72LL&FM>3U&Fh;P$ZS"Kb571rUBI*2Zg1eUqm=A/YO=E(lVW:r7OD!i<6<:Wf)/a*?>%GQ@8S(G8mc!r?"UF[%'>;0)tU39[(^$`#&:K9=BolOB'L4(bMZlSR@YGJD.`Kk/<u"A_1:nWkr\&7Uh8.e9Oaj*78?<L)_RQ&Z+p%]%=T#[rrm`+#a"61lh-l$p%Ze`uC49*RaT2RQl57DP3RlXX`j6TV=9kDj@'hE,=K#5qE!?bos:iA5Nphg&kY>.6c2FE.ju3"hIAX%jMU5rbG)tI,:.=/Q.""j>5(RsjhBVhS!K&I7hX!m72n\QDd/`DLI-.`'iJb'bQJg(*E#6oUpuWh<-0BfdpX(?hf)b16a;i$36C;X%ML*IiAYi'MXTYfq[@@MMC92g9U9QK1R;AnM3V$fZEG7q]rI'!n-.Kmq9t4'/LAj=$$C\B!G5<!A&/cFMY_95`_Y<]JVC''m4fs=?%H1_T>h6/?nUJgjM3J]M@;E_pbec\%Bi(-jsVsbH;@2X2X;#sKR^`d("<SH_Aoa@@5FZ3Wjr2'gjfVj`Y>ZOKBooZVmka1,jFW>et%ENkR[jKlf@rk+AJDWoroF':c;h$g;$)b6t(iBi6%)L#g?+QjOBe.Bt_fkWt9e<@(eYec(fcfstZ#.7*7<UR"Y8u(D4cI$$t.pK4@%8X>gu%FQ?*8OOIlfgK:6kbFkZa?i-C`mg5*.i-r1F=>DBiP.uMO9MsV6gK\agmMH8)U^KeC'5Jb#?O5lZM&sF=$dY5Wo!2C65@c8%;P"N$4_-M>N2dL[id*e$<+Q^i:XPQ71tp='#SYhjS?r%u%KFP-'apOa`6Yqi$A*>ln!HRD-\^_KlW4qDe]a;:W+.6$`N-kXbPj"a%)O`4U;![/3?`O/$3i-.up3YD-X._R*"CF(C;p7dY%8.SUC@8BmiJoW;X&MMP$G+A.;_W#Q$oB>Fr#`Y/_NCS'm[<Nu0Ub2hbY!<d%'d1::LZe;iH3?!#=GQSp>sT2,DJl0\[5iMZ2\ja=$[%W+,:<AK528%E,]'cm4BSU(8WbYZ>M0ABRVf@#pRH-?I/$K8EO&Un[#$\[%.+UN;9Ed9^m=<%,G6'jPl-Td\/Z_:IoRj2H0B-jOCXm(&)I$'i/Yqpj#cuglS_+#[$n0JCK.RB]fPEhTo-EC?5e[g]8?`uLdR0aA%G>spl6L.\RN*t?!K+C<YG2FrQp0,6B$3aWGHQeA\;>o(,YOh"Djn[I2/*0k@$n)QdWj4arD2*QoqQ_T.\u1YoB.]u;V\O:gg5Go.%bhOPr;/"hqjFuJsFg.AOG<QoJ'+51r#[fn.B0e1TWKoU;=M@\<%EG\PbA51M\J:CVW')#d6Bl"d9cQ:L;b:osJ^&4=KE)GklJ1cU%X[#(VX7adGfCL\?l;kD91E&)W$J2Sj>+QJ3AV3*fbLTGs*8RXf1HUTlXBIglAsSkfWq@T)`T<+))2T?./.b%Q.10;W@7bI^@F:h%%Rc:-sAb!%,;EI;49[EMK?a+e`9$YjI:r4aFIu>#<=:kPO0UJ&p&Jer3YHRWuG2)^loiSp@'kikHV<\4)(j.HBr2&#jrPT^9aQn^1%C<$+7CbTu;e;SaI#\HuG8OZ!CKrR>:K[q9.Tp-W7$T2.drVE;K"Lt<a?G^R4CI4@n[`rgJ""D:HkL7\mnA02;eb>]kMes!qAbj"Z%P&CgS[U['`G<VW=HTIRfk-H**'(gb0Z):\k_XVg9"]:OTna+oo$pt0dEpRq'.6>0`HWa#t]H)@Pnkl#!HhEMNG3dK$]%=KAEpG$t%NFq/2enZ/X.GAZf:?JQ@]CiJG8\No*Ek>+B]`S!B6,[s3JLql?af21LDp>ai019\4@-;Rq9=AfgZVrNdJXeDh]i&CX("/TDEp@6#%,QHiSlal`TdqaT69Dmo#QZbqb?"%3qh1'U8.'=F/bnVVCBE'DS'HhbjW/r^\m<[oUYLDaD?GEu7KMidBX2O]]dLulq%&[IseuNKn%>QT].K\T"E!/7@H?roX^bFOnM1uASmQ.OQ<Oo]t6V2Y"4ri75DUij%]%r@$lcIckG@M>J58e$sbe9R:UY="iB*ScBr6&fTLU'H9-%,R%jt/ag-a3JK$oM(KiY]$,YdTSCsdhQ7jc*oLJ5i,tlMNJ%f&14XsDRUrM(;Y"V)d;40jSASX1>#$U:!W,\`D=d$r!#fE_d<K(P%LbhTZ+0@rSnIZa@X0C.dq39p#'TF[2de0n6Nbkb!dDoFdB]We%q/0=t]%+<LD":d9PDQ.NL@$TAi'ZOUY3.roCi73(=]1!CW+,Mc%M-5[O:3LO.elYd9O<:JU=F9tI9Qjjj"lWCs1Y&"0:F7mgVnk!c3%u:=9c:@C%dHVc3&GEHL[(n<@a.*Sefq$R/fb5KI9d8bh<(1W%:*o%[14opM5+cY&fm/&!Fpp=oENd>b'`bc20(KR*J8kK\Y<4%TJrgtbA-$m[^ZN="kXs4r<1FbGQacC2$4U7/]ZF"*V-C`_<1d\g%_a%[GZnml_!V9P3rmAbuZ(fLtZK6;"@#Q!1WGqi&TV?0(DSI_mh2+B&3O2)+6BUPf+0X2,4WSjCWLi1q7CG\26YT#C!I%3(^4e)5%VUn0h&!$NK/6sb:TDq//lLF#6)%(Q*ZYmtdTV3cPS[t7@:e(32H8eKhC^9dmAg)@q*GG8H:+sdWmR4%3jUSfEZG75t/8+\*FT(Ta%k&bC&L6\B!kc8=]hoc(K=du7X[a=_<\V!>rT+e/g&.W5\e8a'^]]96WLdUF$UH/MK,Y&5uYI!qf'_u&_7(dL6ERLCW>G+c9=_(EI%RgNg03gUXX,O:3oq-iaJ9aIQ5@D0bC2!>0u2^^[KK,XbMBCR"uX._r=2`NULHIq>?2p>&,6n<At[?$OrUfeJJ`*q#8AbW-/d4R`r%m\N/8g$nTX8h$jRa4U>+_Y1d2d;tC$UZ.I#Em9>)d4m(>=dII2CAA>Xf8?$^Ju?QD!uoNCEAtIJasE%bYZU'8Ai-C#d]BFJ7_AR:%g$7jrM.\\HaX;.\^'ORAdVJ=%X[M2fP%!#eDHF:cqe-c4b:0gUXe$XC]7M_M7qA@5_^;Y8gc1-3V!JGq%:@Zu`*((-!T5)ba!@+I%@*"P4M6_*GA$k&_31FYKVh(MUoH7@GHXO0fiS5oZ1HK_GUVJ&#)dP8RPrhW_XPhoVZ"ol+_p:nLE1[`FCGa'"SeaZRYA<.*l$RCr%2GFkXPlKpfrd;#NUbClH"8pht8dmi/6\PJoKO$>OVDb-oA3#5EK0l<J?g7$&NZBDLA)\-82fp.8dH]*.Q%c?8V.M#X'bDYEV`^=c%9t"je)/$rcZBRb(cT>>hN!D")mB]]M+<RW:U!%amri53C!pORNIKL,8n:aVA-hWGJ;\+api<`[ES.hGqNr(o_*f\UCg,N93+),=;%)e-Ca3%^ViKW-Ks:0@@7-M%L5D;-,a&lL3`!gFFjd1]iLc#>Ck=[hNc9/VB5L,Op*0I.nHToZ.'N[^'GA0B=-//I=)&(9!!15P#(%kVh,&#*pqsgjd6f+Jh'_`mMY`;Z7__R2,;*((VpMh\sOZ+PRlM@)%@K4o@>Q!X*Ii\G_7G:^WCkFf;Ct,$,<3gg!pg=G2YWph[%-%]uH#ZO]pkkBTTCc-cFTf[IDmd^:ESDA9"!Hg?:bnCgnDB(eMe_Xp>eFRqe?nXQ5R>WQ.?9;=V>eH64tE1i$3hE^fb6kGJ?\"=_cA%C^+ATR^B]CqIiA_+dtXUnHe?iKZKFpq7Gqk/%Vg8;Ql7lA'm)POt]d!1J/h:mS]g/>Ks<#C`BsRc%;1&f/BZ#$J^`',,Z6r<d$V,%EX"r&4FuVGQW'dX.B%DUXfg-fG9"l(b[[d2P&\ia(HE0fjV6eeU_plVn(2=uL(^]!W8<6LK"`*EW`Vn8[A0p4ppGdhD$b3bkpn&7%Cj!=:52-R"57L#_5E\']U[(Ogqt0D2Mn+XsePCZ0anhod/kb!F/nimP*9/k$l_gFF`7^kIH3V8>h`?g3gKZ(I]/(=,T-TaCX`mm3%k7@s?]p`"oT@gLZ7Bf]_kadE)bt^i*n+R]u*u+)+K/022>>qd!Z7dGoh/'da^H,^u&%8(jmf^Bp71Zudq1H$+Ah4&%dCJ(lEip[G%,S?Uo*@)@DGiF[gN;EN-WDT6C[N*4Q64"*c;4E5r.&i3]?0_eHU'_T;;Ym=Vc5%F/K]<n$H:/tiV7n`X'q<$uYY:38D7B6=`YQb[%jGS&f)M0n!?Or'(XQs)YJpKn*Mf7=E"sr&Z69X""d-tKo7]$%KK`1\j,"qrC(>1pa[qN1?6-&eNkOY_Ke^&m/pXd0_s+V_6O5J]Q%\UOIGcZ>.WV7nk!DqX@ReNa!'Dt89/J,%LMcCauhFStq/oB0K[r87MGO$EX.5QC;@?[mJ&q&b+Z07CP&s)[)ahnIp@8Fk/^3V\!6%V3>H-rOV'TUg.:dArA>`JUOd/'58$2;#.qed8#eR9pAIB^%;k23jOe\VdnE"dNU[i3H.:bm8t5,2$olcp9h83l(,:^aJ'[_R+V;*%D<FZa31tll>CETK(>YTZG8/q!d1[`&A;RGZj6as3lim^F2<H/$4Fs6V/qq*U/0ADPdBL4^MG=?<Oa)q/>OMCE[MjRO&4B;V\<1N(%ZVX(U5EDV3Ie$nYiUn*1[eTndg_*<sOR#).jXf!p#iUL2BH`V1d?;SnY,9AsOI(hebHg\$B;5m\,Ane\/Aq/Y/?_*;e\s9k\\"@`%bncr]=O[RH'*^/K#JFn(V0Fh,k;ADks,PpXj3+7sIrrL(?>On(*P[rdR6'K9f&etkcWBus4C?)l?H-nZQgl^m>[CXos7KIihsH7"%n@%=`O7U?jlT_cVo_3k3a2]k5o@LbVrqC?GqqZbsjc@1Ua1qWE?iKApIsq4S5Q101J,So\TDnKG^]!`4?iP0GQQL_Tl`^?\[m0oc%fCM*%q1$J+?F'V/GJF%PJ,euorYI_=rO)~>%AI9_PrivateDataEnd